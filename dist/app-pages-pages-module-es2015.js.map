{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm2015/cdk.js","webpack:///./node_modules/@angular/cdk/esm2015/text-field.js","webpack:///./node_modules/@angular/material/esm2015/button.js","webpack:///./node_modules/@angular/material/esm2015/core.js","webpack:///./node_modules/@angular/material/esm2015/datepicker.js","webpack:///./node_modules/@angular/material/esm2015/dialog.js","webpack:///./node_modules/@angular/material/esm2015/form-field.js","webpack:///./node_modules/@angular/material/esm2015/grid-list.js","webpack:///./node_modules/@angular/material/esm2015/input.js","webpack:///./node_modules/@angular/material/esm2015/select.js","webpack:///./node_modules/@angular/material/esm2015/table.js","webpack:///./node_modules/@angular/material/esm2015/tabs.js","webpack:///./src/app/pages/exam/detail/detail.component.html","webpack:///./src/app/pages/exam/editor/exam-editor/exam-editor.component.html","webpack:///./src/app/pages/exam/editor/question-editor/question-editor.component.html","webpack:///./src/app/pages/exam/filter/filter.component.html","webpack:///./src/app/pages/exam/live-exam/question/question.component.html","webpack:///./src/app/pages/exam/live-exam/subject/subject.component.html","webpack:///./src/app/pages/exam/result/result.component.html","webpack:///./src/app/pages/exam/search/search.component.html","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/timeline/timeline.component.html","webpack:///./src/app/pages/home/upcoming-exams/upcoming-exams.component.html","webpack:///./src/app/pages/miscellaneus/not-found/not-found.component.html","webpack:///./src/app/pages/user/account/account.component.html","webpack:///./src/app/pages/user/create/create.component.html","webpack:///./src/app/pages/user/detail/detail.component.html","webpack:///./src/app/pages/user/edit/edit.component.html","webpack:///./src/app/pages/user/filter/filter.component.html","webpack:///./node_modules/rxjs-compat/_esm2015/BehaviorSubject.js","webpack:///./node_modules/sweetalert2/dist/sweetalert2.all.js","webpack:///./src/app/pages/analysis/analysis-routing.module.ts","webpack:///./src/app/pages/analysis/analysis.component.ts","webpack:///./src/app/pages/analysis/analysis.module.ts","webpack:///./src/app/pages/exam/detail/detail.component.scss","webpack:///./src/app/pages/exam/detail/detail.component.ts","webpack:///./src/app/pages/exam/editor/editor-routing.module.ts","webpack:///./src/app/pages/exam/editor/editor.component.ts","webpack:///./src/app/pages/exam/editor/editor.module.ts","webpack:///./src/app/pages/exam/editor/exam-editor/exam-editor.component.scss","webpack:///./src/app/pages/exam/editor/exam-editor/exam-editor.component.ts","webpack:///./src/app/pages/exam/editor/exam-service/exam.service.ts","webpack:///./src/app/pages/exam/editor/question-editor/question-editor.component.scss","webpack:///./src/app/pages/exam/editor/question-editor/question-editor.component.ts","webpack:///./src/app/pages/exam/exam-routing.module.ts","webpack:///./src/app/pages/exam/exam.component.ts","webpack:///./src/app/pages/exam/exam.module.ts","webpack:///./src/app/pages/exam/filter/filter.component.scss","webpack:///./src/app/pages/exam/filter/filter.component.ts","webpack:///./src/app/pages/exam/live-exam/live-exam-routing.module.ts","webpack:///./src/app/pages/exam/live-exam/live-exam.component.ts","webpack:///./src/app/pages/exam/live-exam/live-exam.module.ts","webpack:///./src/app/pages/exam/live-exam/question/question.component.scss","webpack:///./src/app/pages/exam/live-exam/question/question.component.ts","webpack:///./src/app/pages/exam/live-exam/subject/subject.component.scss","webpack:///./src/app/pages/exam/live-exam/subject/subject.component.ts","webpack:///./src/app/pages/exam/result/exam-result.service.ts","webpack:///./src/app/pages/exam/result/result.component.scss","webpack:///./src/app/pages/exam/result/result.component.ts","webpack:///./src/app/pages/exam/search/search.component.scss","webpack:///./src/app/pages/exam/search/search.component.ts","webpack:///./src/app/pages/home/home.component.scss","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/home/timeline/timeline.component.scss","webpack:///./src/app/pages/home/timeline/timeline.component.ts","webpack:///./src/app/pages/home/upcoming-exams/upcoming-exams.component.scss","webpack:///./src/app/pages/home/upcoming-exams/upcoming-exams.component.ts","webpack:///./src/app/pages/miscellaneus/miscellaneous-routing.module.ts","webpack:///./src/app/pages/miscellaneus/miscellaneous.component.ts","webpack:///./src/app/pages/miscellaneus/miscellaneous.module.ts","webpack:///./src/app/pages/miscellaneus/not-found/not-found.component.scss","webpack:///./src/app/pages/miscellaneus/not-found/not-found.component.ts","webpack:///./src/app/pages/pages-menu.ts","webpack:///./src/app/pages/pages-routing.module.ts","webpack:///./src/app/pages/pages.component.scss","webpack:///./src/app/pages/pages.component.ts","webpack:///./src/app/pages/pages.module.ts","webpack:///./src/app/pages/report/report-routing.module.ts","webpack:///./src/app/pages/report/report.component.ts","webpack:///./src/app/pages/report/report.module.ts","webpack:///./src/app/pages/shared/common.utils.ts","webpack:///./src/app/pages/shared/http.service.ts","webpack:///./src/app/pages/user/account/account.component.scss","webpack:///./src/app/pages/user/account/account.component.ts","webpack:///./src/app/pages/user/create/create.component.scss","webpack:///./src/app/pages/user/create/create.component.ts","webpack:///./src/app/pages/user/detail/detail.component.scss","webpack:///./src/app/pages/user/detail/detail.component.ts","webpack:///./src/app/pages/user/edit/edit.component.scss","webpack:///./src/app/pages/user/edit/edit.component.ts","webpack:///./src/app/pages/user/filter/filter.component.scss","webpack:///./src/app/pages/user/filter/filter.component.ts","webpack:///./src/app/pages/user/user-routing.module.ts","webpack:///./src/app/pages/user/user.component.ts","webpack:///./src/app/pages/user/user.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;;AAExC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,oBAAoB,qDAAO;;AAE3B;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEmB;AACnB;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACkG;AAC6C;AAClE;AAC5B;AACK;;AAEtD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,wBAAwB,6FAA+B,EAAE,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,0CAAK;AACxB;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,4CAAO;AAClC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,mCAAmC,qBAAqB,EAAE,yCAAyC;AACnG;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,mCAAmC,qBAAqB,EAAE,0CAA0C;AACpG;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM;AAClB;AACA,qDAAqD,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,CAAC,8DAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,EAAE,8CAA8C;AACzO;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,oDAAM,EAAE;AAClC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB,mFAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,gBAAgB,sDAAS;AACzB,0BAA0B,gEAAS,MAAM,gEAAS;AAClD;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,eAAe,OAAO,mDAAK,iCAAiC;AAC5D,eAAe,OAAO,mDAAK,iCAAiC;AAC5D,eAAe,OAAO,mDAAK,kCAAkC;AAC7D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,0BAA0B,oEAAc;AACxC;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE8E;AAC9E;;;;;;;;;;;;;AC5fA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACiD;AAC+F;AACZ;AACvD;AAC9B;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,4BAA4B,yEAAU,CAAC,4EAAa,CAAC,iF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;AACwR;AACzM;AAChC;AACR;AACsC;AAClC;AACuD;AACvD;AACyB;AACS;AACR;AACtB;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,sBAAsB,qDAAO;;AAE7B;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,sBAAsB,qDAAO;AAC7B;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,mCAAmC,4DAAc;AACjD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4CAA4C,+DAAS;AACrD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,oDAAO;AACtC;AACA,8CAA8C,oDAAO;AACrD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAU;AACpC,0BAA0B,4DAAU;AACpC,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,8BAA8B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,mCAAmC,GAAG;AAC1G,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uEAAa,IAAI;AAChG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,wBAAwB,uBAAuB;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,kBAAkB,mFAAqB,QAAQ;AAC5E;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oBAAoB;AACzC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2EAA2E,YAAY;AACvF;AACA;AACA,wEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,6BAA6B,4BAA4B;AACzD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kCAAkC,uBAAuB,mFAAqB,QAAQ;AACtF;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,wBAAwB,4CAA4C;AACpE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yDAAyD,EAAE;AAC3D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+CAAU;AAC7C,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,4DAAM,CAAC,uDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,kCAAkC,wCAAwC,uDAAS;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,6BAA6B,4DAAc;;AAE3C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE;AACpG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,gCAAgC;AAC9F;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,kCAAkC;AAChG;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,kCAAkC;AAChG;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,mCAAmC;AACjG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA,yCAAyC,KAAK;AAC9C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,yCAAyC,KAAK,0BAA0B,MAAM;AAC9E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB,kBAAkB;AAChF,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,4BAA4B,GAAG;AAClG,KAAK,OAAO,8DAAQ;AACpB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA,WAAW,EAAE;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB,oDAAoD;AACxE,yBAAyB,kCAAkC;AAC3D,wBAAwB,iDAAiD;AACzE,6BAA6B,iCAAiC;AAC9D;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,oEAAc;AACxC;AACA,qBAAqB,oDAAoD;AACzE;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,6BAA6B,4CAA4C;AACzE,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;;AAE7M;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,+BAA+B,4DAAc;AAC7C,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,OAAO,EAAE;AACT,YAAY;AACZ;AACA,OAAO;AACP;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6EAAmB;AAC/C;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mDAAmD,+BAA+B;AAClF,mBAAmB,EAAE;AACrB,yDAAyD,gCAAgC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,+BAA+B,GAAG;AACxG,KAAK,sCAAsC,OAAO,sDAAQ,EAAE;AAC5D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,uBAAuB,gEAAS;AAChC,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,MAAM,SAAS;AACf;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,6FAA+B,EAAE,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,oCAAoC,yFAA+B;AACnE,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,qCAAqC,2EAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,kCAAkC;AAClC,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,gDAAgD;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,iCAAiC,WAAW;AAC5C,gCAAgC,WAAW;AAC3C;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gDAAgD;AAChD,+CAA+C,6BAA6B;AAC5E;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,4BAA4B,EAAE;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,sCAAsC,4DAAc;AACpD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,wDAAwD;AAC3E;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,sCAAsC,GAAG;AAC/G,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;AACA;AACA,aAAa,OAAO,mDAAK,6BAA6B;AACtD,iBAAiB,OAAO,mDAAK,iCAAiC;AAC9D,gBAAgB,OAAO,mDAAK,gCAAgC;AAC5D,cAAc,OAAO,mDAAK,8BAA8B;AACxD,iBAAiB,OAAO,mDAAK,iCAAiC;AAC9D,gBAAgB,OAAO,mDAAK,gCAAgC;AAC5D,eAAe,OAAO,mDAAK,+BAA+B;AAC1D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,2CAA2C,oEAAc;AACzD;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,eAAe,+DAAiB;AAC/D,iCAAiC,qEAAuB;AACxD;AACA,+CAA+C,WAAW,YAAY,iBAAiB,kBAAkB,eAAe,qBAAqB,sBAAsB,sBAAsB,kBAAkB,cAAc,mGAAmG,4BAA4B,kBAAkB,UAAU,WAAW,qCAAqC,gDAAgD,wGAAwG,yBAAyB,6CAA6C,gBAAgB,eAAe,oDAAoD,gBAAgB,8BAA8B,eAAe,0CAA0C,QAAQ,SAAS,WAAW,UAAU,kBAAkB,oCAAoC,UAAU,SAAS,UAAU,WAAW,mCAAmC,yBAAyB,UAAU,uBAAuB;AAC7hC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,mFAAmF,SAAS;AAC5F,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA,8CAA8C,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,8BAA8B,eAAe,8BAA8B,iBAAiB,8BAA8B,kBAAkB,sBAAsB,kCAAkC,mBAAmB,wCAAwC,iBAAiB,eAAe;AACzlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,wCAAwC,4DAAc;AACtD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,8CAA8C;AAClE;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,8DAA8D;AAClF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,mDAAmD;AAC5E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,4DAAK,sBAAsB,4DAAK,MAAM,6EAAc;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB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,SAAS;AAClE;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,MAAM,UAAU,IAAI;AACtC;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;;AAE7M;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,sDAAsD,2DAAI;AAC1D,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B,oPAAoP,OAAO,uCAAuC,4PAA4P,uDAAuD,kCAAkC,kvBAAkvB,mBAAmB;AAC53C,6CAA6C,gBAAgB,yBAAyB,SAAS,cAAc,gBAAgB,sBAAsB,uBAAuB,wBAAwB,kBAAkB,SAAS,cAAc,kBAAkB,UAAU,eAAe,4BAA4B,eAAe,gCAAgC,kBAAkB,OAAO,QAAQ,aAAa,mBAAmB,uBAAuB,sBAAsB,UAAU,WAAW,cAAc,iBAAiB,mBAAmB,oBAAoB,kCAAkC,gCAAgC,aAAa,kCAAkC,8DAA8D,kBAAkB,yBAAyB,mBAAmB,iOAAiO,oBAAoB,mCAAmC,iBAAiB;AAChkC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA,iBAAiB,0DAAI;AACrB;AACA;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA;AACA,iBAAiB,6DAAO;AACxB;AACA;AACA;AACA;AACA,iBAAiB,+DAAS;AAC1B;AACA;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B,uNAAuN,YAAY;AACnO;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uEAAgB,IAAI,GAAG;AACtG,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,wBAAwB,OAAO,uDAAS,2BAA2B,gBAAgB,IAAI;AACvF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA,iBAAiB,0DAAI;AACrB;AACA;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA,iBAAiB,6DAAO;AACxB;AACA;AACA;AACA,iBAAiB,+DAAS;AAC1B;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oCAAoC,yCAAyC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,wBAAwB,OAAO,uDAAS,2BAA2B,gBAAgB,IAAI;AACvF;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA,iBAAiB,0DAAI;AACrB;AACA;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA,iBAAiB,6DAAO;AACxB;AACA;AACA;AACA,iBAAiB,+DAAS;AAC1B;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qCAAqC,2CAA2C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uEAAgB,IAAI,GAAG;AACtG,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,wBAAwB,OAAO,uDAAS,2BAA2B,gBAAgB,IAAI;AACvF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B,+QAA+Q,kBAAkB;AACjS;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK,kCAAkC,OAAO,oDAAM,SAAS,gEAAU;AACvE,gCAAgC;AAChC;AACA,2CAA2C,GAAG;AAC9C,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uEAAgB,IAAI,GAAG;AACtG,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,gCAAgC;AACtD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yCAAyC,mEAAe;AACxD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,wCAAwC,cAAc,qBAAqB,sBAAsB,sBAAsB,sBAAsB,UAAU,uBAAuB,aAAa,+BAA+B,qBAAqB,cAAc,4BAA4B,YAAY,oBAAoB,qBAAqB,QAAQ,SAAS,kCAAkC,mCAAmC,qBAAqB,uBAAuB,iBAAiB,sBAAsB,wCAAwC,yBAAyB,8BAA8B,iBAAiB,wDAAwD,kBAAkB,sEAAsE,MAAM,OAAO,QAAQ,SAAS,kBAAkB,WAAW,cAAc,4BAA4B,qBAAqB,4EAA4E,yBAAyB,qCAAqC,sBAAsB,yCAAyC,iCAAiC,uBAAuB,yCAAyC,oBAAoB,iBAAiB,yBAAyB,WAAW,8BAA8B,kBAAkB,kBAAkB,mCAAmC,kBAAkB,WAAW,0CAA0C,WAAW,kBAAkB,MAAM,UAAU,WAAW,WAAW;AACn9C;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uEAAgB,IAAI,GAAG;AACtG,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,iBAAiB,OAAO,uDAAS,wBAAwB,gBAAgB,IAAI;AAC7E,gBAAgB,OAAO,uDAAS,uBAAuB,gBAAgB,IAAI;AAC3E,qBAAqB,OAAO,uDAAS,4BAA4B,gBAAgB,IAAI;AACrF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,oBAAoB,mEAAO;AAC3B,QAAQ,iEAAK,SAAS,iEAAK;AAC3B;AACA;AACA,SAAS;AACT,QAAQ,sEAAU,kBAAkB,mEAAO,qCAAqC,iEAAK;AACrF;AACA;AACA,SAAS;AACT,QAAQ,sEAAU,cAAc,mEAAO,iBAAiB,iEAAK,EAAE,aAAa;AAC5E;AACA;AACA;AACA;AACA,oBAAoB,mEAAO;AAC3B,QAAQ,iEAAK,SAAS,iEAAK,EAAE,aAAa;AAC1C,QAAQ,iEAAK,UAAU,iEAAK,EAAE,aAAa;AAC3C;AACA;AACA,QAAQ,sEAAU,cAAc,mEAAO;AACvC;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,uCAAuC,yEAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,kDAAkD,cAAc,kBAAkB,sCAAsC,YAAY,aAAa,8BAA8B,cAAc,gBAAgB,cAAc,aAAa,4CAA4C,gBAAgB,iBAAiB,gBAAgB,iBAAiB,uCAAuC,4CAA4C,WAAW,aAAa,sCAAsC,4CAA4C,WAAW,cAAc;AAC5iB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,iBAAiB,OAAO,uDAAS,uBAAuB,gBAAgB,IAAI;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAY;AAC9C;AACA;AACA;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,mFAAqB;AAC7C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,4BAA4B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,mEAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2DAAI;AAC1D,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,kEAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,kDAAK,mGAAmG,6DAAM;AACtH,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,qCAAqC,4DAAM;AAC3C,4EAA4E,8DAAQ;AACpF,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,mEAAS,EAAE;AACvB,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,2CAA2C,GAAG;AAChG,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,yDAAQ,IAAI;AAC3F;AACA;AACA,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,oDAAM,EAAE;AACnC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,oDAAM,qBAAqB;AACtD,oBAAoB,OAAO,oDAAM,qBAAqB;AACtD,cAAc,OAAO,mDAAK,EAAE;AAC5B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,iEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,6DAAa;AAC1B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB,uCAAuC,iDAAY;AACnD,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB,wBAAwB,+CAA+C;AAC/F,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wBAAwB,sBAAsB,0CAA0C;AACxF,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wBAAwB,sBAAsB,0CAA0C;AACxF,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;AACA,0BAA0B,0DAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,yBAAyB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iEAAiE,gEAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,qBAAqB,UAAU,iFAAwB,mCAAmC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uEAAgB,IAAI,GAAG;AACtG,KAAK,OAAO,0EAAY,gBAAgB,OAAO,sDAAQ,EAAE;AACzD;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,aAAa,OAAO,mDAAK,EAAE;AAC3B,WAAW,OAAO,mDAAK,EAAE;AACzB,WAAW,OAAO,mDAAK,EAAE;AACzB,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,iBAAiB,OAAO,oDAAM,EAAE;AAChC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,6BAA6B,iDAAY;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uFAAuF,+CAAE;AACzF,mBAAmB,EAAE;AACrB;AACA,+DAA+D,+CAAE;AACjE,mBAAmB,EAAE;AACrB;AACA,YAAY,kDAAK;AACjB,YAAY,+CAAE;AACd;AACA,6BAA6B,kDAAK;AAClC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,oNAAoN,UAAU,oOAAoO,cAAc,YAAY,aAAa,sQAAsQ,YAAY;AAC3vB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB;AACzE;AACA;AACA,kBAAkB,OAAO,mDAAK,kBAAkB;AAChD,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,0DAAY,mCAAmC,gBAAgB,IAAI;AAC7F,eAAe,OAAO,uDAAS,oBAAoB,gBAAgB,IAAI;AACvE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,yEAAe;AACnC,oBAAoB,yEAAe;AACnC,oBAAoB,kEAAa;AACjC,oBAAoB,6DAAU;AAC9B,oBAAoB,gEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEwgB;AACxgB;;;;;;;;;;;;;ACh9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACiF;AACwK;AACtL;AACoE;AAClF;AACU;AACrB;AACe;AACN;AAC4C;AACtC;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,IAAI,iEAAK,eAAe,iEAAK,EAAE,sCAAsC;AACrE,IAAI,iEAAK,UAAU,iEAAK,EAAE,oBAAoB;AAC9C,IAAI,sEAAU,eAAe,mEAAO,qCAAqC,iEAAK,EAAE,gCAAgC;AAChH,IAAI,sEAAU,yBAAyB,mEAAO,wCAAwC,iEAAK,EAAE,aAAa;AAC1G;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAO;AAC5B;AACA;AACA;AACA,iBAAiB,mEAAO;AACxB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oEAAgB;AACjD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAY;AACtD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,gDAAgD,cAAc,aAAa,kBAAkB,sBAAsB,cAAc,UAAU,WAAW,YAAY,mBAAmB,mBAAmB,kCAAkC,sBAAsB,mBAAmB,oBAAoB,cAAc,eAAe,eAAe,gBAAgB,cAAc,iCAAiC,kBAAkB,gBAAgB,cAAc,oBAAoB,cAAc,aAAa,eAAe,gBAAgB,mBAAmB,oBAAoB,+BAA+B,yBAAyB,kCAAkC,uBAAuB,sDAAsD,gBAAgB,gEAAgE,cAAc,iBAAiB;AAC70B,+BAA+B,+DAAiB;AAChD;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9F,KAAK;AACL;AACA;AACA,qBAAqB,OAAO,uDAAS,SAAS,mEAAe,GAAG,eAAe,IAAI;AACnF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6DAAM;AAC7D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4EAA4E,2DAAI;AAChF;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uDAAuD,6DAAM;AAC7D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2EAA2E,2DAAI;AAC/E,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA,SAAS;AACT;AACA,kBAAkB,6DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,4DAAM,2BAA2B,4EAAc;AACpF,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4DAA4D,6DAAM;AAClE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gDAAgD,2DAAI;AACpD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA,UAAU;AACV;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA,UAAU;AACV;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4CAAO;AACrD,2CAA2C,4CAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,EAAE,KAAK,kDAAK;AACtD,oBAAoB;AACpB;AACA;AACA;AACA,sCAAsC,gEAAS;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,kEAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,6BAA6B,kEAAc;AAC3C;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,mEAAe;AACnD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,8CAA8C,yDAAW;AACzD,qDAAqD,kEAAc,qCAAqC,EAAE,yBAAyB,EAAE,MAAM,oCAAoC;AAC/K;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yEAAyE,mEAAe;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gEAAc;AAC9D,gCAAgC,gEAAc;AAC9C;AACA,wBAAwB,+CAAE;AAC1B,aAAa;AACb;AACA,mBAAmB,kEAAc;AACjC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,6CAA6C,QAAQ;AACrD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,wDAAQ,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AACxD,KAAK,sCAAsC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,uCAAuC,GAAG;AACtH,KAAK,gCAAgC,OAAO,oDAAM,uCAAuC,GAAG;AAC5F,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAC7E,KAAK,OAAO,qEAAgB;AAC5B;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY,EAAE;AACd;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,mCAAmC,OAAO,sDAAQ,EAAE,GAAG;AAC5D,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,mDAAK,+BAA+B;AAC/D,uBAAuB,OAAO,mDAAK,6BAA6B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,mCAAmC,OAAO,sDAAQ,EAAE,GAAG;AAC5D,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa,IAAI;AACjB;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wCAAwC,EAAE;AAC1C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,kEAAa;AACjC,oBAAoB,gEAAY;AAChC,oBAAoB,uEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE4Z;AAC5Z;;;;;;;;;;;;;AC3sCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACqO;AACpJ;AAC9B;AACW;AACgB;AAC7B;AACW;AACX;AAC4B;AAC9B;AACU;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,wBAAwB,mEAAO;AAC/B;AACA,QAAQ,iEAAK,UAAU,iEAAK,EAAE,0CAA0C;AACxE,QAAQ,sEAAU;AAClB,YAAY,iEAAK,EAAE,6CAA6C;AAChE,YAAY,mEAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,UAAU,OAAO,mDAAK,EAAE;AACxB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,+BAA+B,yEAAU;AACzC;AACA;AACA;AACA,UAAU;AACV;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,8BAA8B,iCAAiC;AAC/D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,mFAAqB;AACxD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0BAA0B,oCAAoC;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gFAAgF,oBAAoB;AACpG;AACA;AACA,kCAAkC,gEAAS,aAAa,EAAE;AAC1D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,sDAAsD,gEAAS;AAC/D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,QAAQ,kDAAK;AACb,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wCAAwC,gEAAS;AACjD,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yCAAyC,gEAAS;AAClD,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC,gEAAS;AAC3C,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAS,kDAAkD,2DAAI;AAC/E,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,8CAA8C,WAAW;AACzD;AACA,uBAAuB,mBAAmB;AAC1C,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,49CAA49C,sBAAsB,sQAAsQ,6wBAA6wB,WAAW;AAChhF;AACA;AACA;AACA,0CAA0C,qBAAqB,kBAAkB,gBAAgB,0BAA0B,iBAAiB,wBAAwB,kBAAkB,qBAAqB,oBAAoB,qBAAqB,s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ACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4DAA4D,SAAS;AACrE,mCAAmC,oBAAoB;AACvD;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,OAAO,iBAAiB,KAAK,eAAe;AAC3E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,6CAA6C,SAAS,KAAK,iBAAiB,MAAM,OAAO;AACzF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,SAAS,KAAK,KAAK,OAAO,SAAS,KAAK,iBAAiB;AAC5E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iBAAiB,MAAM,cAAc;AACvD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,cAAc,KAAK,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,sCAAsC,KAAK,qBAAqB;AAC9F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,sCAAsC,KAAK,qBAAqB;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+EAA+E,MAAM;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4CAA4C,kFAAoB;AAChE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,qBAAqB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,mBAAmB,2BAA2B,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;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AAc;;AAEnD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,2BAA2B,8EAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,aAAa,oFAAsB;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,iBAAiB;AAC/B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oFAAsB;AACzD,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,uCAAuC;AACxD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8CAA8C,EAAE;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,UAAU,gFAAmB,yBAAyB;AACnF,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,wDAAS,gBAAgB,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG;AACzE,KAAK,OAAO,qDAAM,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AACtD,KAAK,OAAO,iEAAkB,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,KAAK,OAAO,wEAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG,OAAO,oDAAM,qCAAqC,GAAG;AAC9H,KAAK,OAAO,uEAAe,EAAE;AAC7B,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,UAAU,OAAO,mDAAK,EAAE;AACxB,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B,yBAAyB,OAAO,mDAAK,EAAE;AACvC,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,uEAAe;AACnC,oBAAoB,+EAAkB;AACtC;AACA;AACA,oBAAoB,uEAAe;AACnC;AACA;AACA,oBAAoB,+EAAkB;AACtC;AACA;AACA;AACA,4BAA4B,wEAAiB;AAC7C,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEoH;AACpH;;;;;;;;;;;;;AC1mBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACsG;AACxB;AAC3B;AACW;AACJ;AACwE;AAC/C;AAC5B;AACgO;AAChN;AACuM;AACzK;AACxD;AAC6D;AAC3D;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mEAAO;AAC/B,QAAQ,sEAAU,cAAc,iEAAK,qBAAqB,wEAAY,MAAM,iBAAiB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mEAAO;AAC3B,QAAQ,iEAAK,SAAS,iEAAK;AAC3B;AACA;AACA;AACA,SAAS;AACT,QAAQ,iEAAK,YAAY,iEAAK;AAC9B;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,iEAAK,qBAAqB,iEAAK;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,sEAAU,cAAc,mEAAO;AACvC,QAAQ,sEAAU,cAAc,mEAAO,sBAAsB,iEAAK,EAAE,aAAa;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mEAAO;AAC1B,QAAQ,iEAAK,YAAY,iEAAK,EAAE,aAAa;AAC7C,QAAQ,sEAAU;AAClB,YAAY,iEAAK,EAAE,aAAa;AAChC,YAAY,mEAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,4BAA4B,kFAAkB,CAAC,6EAAa,CAAC,6EAAa,CAAC,+EAAe;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6CAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE,KAAK,mDAAK;AAC9D,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,4CAA4C,iEAAS,WAAW,iEAAS;AACzE,4BAA4B;AAC5B;AACA,sBAAsB,mDAAK;AAC3B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kBAAkB,2DAAG;AACrB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mBAAmB,2DAAG;AACtB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kCAAkC,qCAAqC;AACvE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,mFAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,iBAAiB;AAC/B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAoB,IAAI,iEAAS;AACnD;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C,iEAAS;AACpD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT,kCAAkC,iEAAS,QAAQ,iEAAS;AAC5D,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,4DAAI;AACtD,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8EAA8E,sBAAsB;AACpG;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uCAAuC,gEAAU,gBAAgB,8DAAQ;AACzE,wBAAwB,gEAAU,gBAAgB,iEAAW;AAC7D,mBAAmB,EAAE;AACrB,sCAAsC,2DAAK,gBAAgB,2DAAK;AAChE,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,4EAAc;AACzC,mCAAmC;AACnC;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,4BAA4B,0DAAI,gBAAgB,yDAAG;AACnD,4BAA4B,0DAAI;AAChC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uCAAuC,gEAAU,gBAAgB,8DAAQ;AACzE,mBAAmB,EAAE;AACrB;AACA,wBAAwB,0DAAI,gBAAgB,yDAAG;AAC/C;AACA,wBAAwB,0DAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAK,gBAAgB,2DAAK;AACxD,aAAa,4EAAc;AAC3B;AACA;AACA;AACA,+CAA+C,uDAAC;AAChD;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4CAA4C,4DAAI;AAChD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA;AACA;AACA;AACA,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,mDAAK;AACxC,yCAAyC,iEAAS;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,mDAAK;AACb,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uCAAuC,EAAE;AACzC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,2BAA2B,6FAA6B;AACxD,6CAA6C,wFAAwB;AACrE;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,gEAAgE,EAAE;AAClE,gCAAgC,6FAA6B;AAC7D;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,qRAAqR,yBAAyB,8HAA8H,0BAA0B,uyBAAuyB,oBAAoB;AACjwC,sCAAsC,qBAAqB,WAAW,UAAU,oBAAoB,qBAAqB,eAAe,kBAAkB,sBAAsB,yCAAyC,yBAAyB,sBAAsB,qBAAqB,i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AAU;AACV;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,iEAAc;AAClC,oBAAoB,4DAAY;AAChC,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6DAAU;AAC3C;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA,0CAA0C,iDAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,uCAAuC,EAAE;AACzC,gBAAgB,4EAAc;AAC9B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT,yBAAyB,oDAAe;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,yBAAyB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,2BAA2B;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wBAAwB,EAAE,KAAK,kDAAK;AACpC,YAAY,+CAAE;AACd,mBAAmB,EAAE;AACrB;AACA,wBAAwB,EAAE,KAAK,kDAAK;AACpC,YAAY,+CAAE;AACd,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,0DAAa;AAC1C,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,0DAAa;AACzC,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,0DAAa;AAC3C,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE6P;AAC7P;;;;;;;;;;;;;AC1vBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2U;AAC9P;AACuC;AAC+D;AACzG;AACO;AAC9B;AACyB;AACQ;AAC7B;AACuB;AACE;AACE;AACzB;AACV;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,oCAAoC,4DAAc;AAClD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,oCAAoC,GAAG;AACzF,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8BAA8B,IAAI;AACjE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,0BAA0B,6DAAS;AACnC;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,yBAAyB,4EAAa;AACtC;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC,kEAAc;AAChD;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,qBAAqB,OAAO,0DAAY,uBAAuB,gBAAgB,IAAI;AACnF,wBAAwB,OAAO,0DAAY,yBAAyB,OAAO,yDAAW,gBAAgB,IAAI;AAC1G,wBAAwB,OAAO,uDAAS,SAAS,yDAAW,GAAG,eAAe,IAAI;AAClF,iBAAiB,OAAO,mDAAK,oBAAoB;AACjD,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,sBAAsB,OAAO,mDAAK,8BAA8B;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kBAAkB,mEAAO;AACzB;AACA,QAAQ,iEAAK,0DAA0D,iEAAK,EAAE,oBAAoB;AAClG;AACA;AACA;AACA;AACA,QAAQ,iEAAK,SAAS,iEAAK,EAAE,0DAA0D;AACvF,QAAQ,iEAAK,UAAU,iEAAK,EAAE,yDAAyD;AACvF,QAAQ,sEAAU,2DAA2D,mEAAO,IAAI,mBAAmB;AAC3G,QAAQ,sEAAU;AAClB,YAAY,iEAAK,EAAE,wCAAwC;AAC3D,YAAY,mEAAO,IAAI,mBAAmB;AAC1C;AACA,QAAQ,sEAAU;AAClB,YAAY,iEAAK,EAAE,uCAAuC;AAC1D,YAAY,mEAAO,IAAI,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,+BAA+B,mEAAe;AAC9C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iDAAY;AACzC;AACA;AACA;AACA,2BAA2B,iDAAY;AACvC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,iCAAiC,OAAO,oDAAM,SAAS,gEAAU;AACtE,gCAAgC;AAChC;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAY;AAClD;AACA;AACA;AACA,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wCAAwC,2EAAoB;AAC5D,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,oBAAoB,OAAO,oDAAM,EAAE;AACnC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,mBAAmB,OAAO,oDAAM,EAAE;AAClC,gBAAgB,OAAO,mDAAK,sBAAsB;AAClD,cAAc,OAAO,mDAAK,EAAE;AAC5B,yBAAyB,OAAO,mDAAK,EAAE;AACvC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B,2FAA2F,4BAA4B,qCAAqC,EAAE;AAC9J,gDAAgD,YAAY,cAAc,oDAAoD,gBAAgB;AAC9I,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,mBAAmB,OAAO,uDAAS,SAAS,uEAAmB,GAAG,gBAAgB,IAAI;AACtF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,yEAAU,CAAC,iFAAkB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iDAAY;AAC7C;AACA;AACA;AACA,qCAAqC,iDAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,8BAA8B,uBAAuB,mFAAqB,QAAQ;AAClF;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,kFAAoB;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,6BAA6B,gCAAgC;AAC7D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,2BAA2B,8BAA8B;AACzD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,yDAAyD,qBAAqB;AAC9E;AACA,0DAA0D,MAAM;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAK;AAC1C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,cAAc,GAAG,EAAE;AACnD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kCAAkC,cAAc,GAAG,EAAE;AACrD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,oDAAM,4BAA4B,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACrG,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,mBAAmB,OAAO,oDAAM,EAAE;AAClC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,yBAAyB,OAAO,oDAAM,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,4UAA4U,2vBAA2vB,eAAe,iOAAiO;AACvzC,yCAAyC,aAAa,sBAAsB,6CAA6C,8BAA8B,eAAe,YAAY,eAAe,eAAe,sBAAsB,WAAW,gBAAgB,kBAAkB,oBAAoB,uBAAuB,mBAAmB,mBAAmB,kBAAkB,qBAAqB,UAAU,4CAA4C,UAAU,kCAAkC,qBAAqB,oBAAoB,gCAAgC,eAAe,kCAAkC,gCAAgC,YAAY,sCAAsC,oBAAoB,uBAAuB,mBAAmB,mBAAmB,kCAAkC,eAAe,WAAW,yBAAyB,eAAe,gBAAgB,yBAAyB,eAAe,gBAAgB,gEAAgE,aAAa,YAAY,sBAAsB,kBAAkB,gBAAgB,aAAa,gDAAgD,8CAA8C,gBAAgB,eAAe,cAAc,MAAM,OAAO,QAAQ,SAAS,kBAAkB,cAAc,gBAAgB,gBAAgB,kCAAkC,kBAAkB,kBAAkB,gBAAgB,UAAU,YAAY,8EAA8E,kBAAkB;AACzgD,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,oDAAM,4BAA4B,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACrG,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;AACA;AACA,aAAa,OAAO,6DAAe,mBAAmB;AACtD,uBAAuB,OAAO,uDAAS,4BAA4B,gBAAgB,IAAI;AACvF,kBAAkB,OAAO,uDAAS,uBAAuB,gBAAgB,IAAI;AAC7E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,qCAAqC,4EAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,gDAAgD,EAAE,KAAK,8FAA+B,EAAE,gBAAgB;AACxG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,sDAAS;AACrB,sBAAsB,gEAAS;AAC/B;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB,kFAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,sDAAS;AACjB,kBAAkB,gEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,QAAQ,sDAAS;AACjB,kBAAkB,gEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yDAAyD,+CAAE;AAC3D,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,kEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAK,8CAA8C,gEAAS;AACpE,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,gEAAS;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,6EAAc;AAC1B;AACA;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,gBAAgB;AAChB;AACA;AACA,8CAA8C,EAAE;AAChD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uBAAuB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0BAA0B,6BAA6B;AACvD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,0BAA0B;AACzC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;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AC3E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,uBAAuB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,gFAAyB,IAAI,GAAG;AAC/G,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB,GAAG;AAC5E,KAAK,OAAO,+DAAY,EAAE;AAC1B,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA,kCAAkC,qEAAc;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,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AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,GAAG;AACH,oCAAoC;AACpC,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA,GAAG;;;AAGH,+CAA+C;;AAE/C,iDAAiD;;AAEjD;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;;AAE9D;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA,iEAAiE;;AAEjE,sFAAsF;AACtF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;;AAE1C,mDAAmD;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;;AAE9D,qDAAqD;;AAErD;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;;AAEd;AACA;AACA,GAAG;AACH;;AAEA;AACA,iBAAiB,6BAA6B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA,2BAA2B;AAC3B,GAAG;AACH;AACA,2BAA2B;AAC3B,GAAG;AACH;AACA;;AAEA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;;AAEA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;;AAEf;AACA,sCAAsC;;AAEtC,2CAA2C;;AAE3C;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA,6CAA6C;;AAE7C;AACA,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA,2BAA2B;;AAE3B,6CAA6C;;AAE7C,wCAAwC;;AAExC,+BAA+B;;AAE/B,gCAAgC;;AAEhC,gCAAgC;;AAEhC;AACA;;AAEA;AACA,yBAAyB;;AAEzB,oDAAoD;;AAEpD,wDAAwD;;AAExD;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA,GAAG,8CAA8C;;;AAGjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qEAAqE,aAAa;AAClF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,UAAU,iBAAiB,oBAAoB,0DAA0D;AACzG,UAAU,gBAAgB,oBAAoB,yDAAyD;AACvG;AACA;AACA,kCAAkC,wCAAwC;AAC1E,UAAU,iBAAiB;AAC3B,UAAU,gBAAgB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,yBAAyB;;AAE9B;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD,uCAAuC;AACvC;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,2DAA2D,KAAK;AAChE,GAAG;AACH;AACA;AACA,sDAAsD,MAAM,QAAQ,KAAK;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA,oCAAoC;;AAEpC;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC;;AAEvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE;;AAEF;AACA,iDAAiD;;AAEjD,iBAAiB,8BAA8B;AAC/C,8BAA8B;;AAE9B;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA,0CAA0C;AAC1C,GAAG;AACH,8BAA8B;AAC9B,GAAG;AACH,mBAAmB;AACnB,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA,yBAAyB;AACzB,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B,6BAA6B;;AAE7B,0BAA0B;;AAE1B;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;;AAEA;;AAEA,qEAAqE,aAAa;AAClF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF,gDAAgD;;;AAGhD,oCAAoC;;;AAGpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC;AACD,qDAAqD;;AAErD,4CAA4C,+BAA+B,iHAAiH,SAAS,cAAc,SAAS,eAAe,oCAAoC,8BAA8B,6BAA6B,mBAAmB,yBAAyB,mBAAmB,WAAW,eAAe,kBAAkB,gBAAgB,8BAA8B,uCAAuC,8BAA8B,6BAA6B,mBAAmB,sCAAsC,mBAAmB,YAAY,uBAAuB,2BAA2B,cAAc,cAAc,uCAAuC,gBAAgB,iBAAiB,eAAe,sCAAsC,gBAAgB,WAAW,YAAY,eAAe,wCAAwC,uBAAuB,2BAA2B,cAAc,qCAAqC,UAAU,cAAc,WAAW,SAAS,yDAAyD,oBAAoB,aAAa,yBAAyB,mBAAmB,gBAAgB,gBAAgB,mEAAmE,yDAAyD,iBAAiB,uEAAuE,UAAU,WAAW,4EAA4E,WAAW,cAAc,yFAAyF,aAAa,0FAA0F,cAAc,wCAAwC,0BAA0B,WAAW,YAAY,iBAAiB,uCAAuC,iBAAiB,uBAAuB,cAAc,6CAA6C,wDAAwD,wCAAwC,qBAAqB,6EAA6E,kBAAkB,YAAY,WAAW,gCAAgC,wBAAwB,kBAAkB,0FAA0F,UAAU,WAAW,iCAAiC,yBAAyB,iCAAiC,yBAAyB,0BAA0B,2FAA2F,WAAW,aAAa,iCAAiC,yBAAyB,0BAA0B,4DAA4D,UAAU,WAAW,2DAA2D,MAAM,aAAa,cAAc,gBAAgB,oEAAoE,eAAe,gFAAgF,YAAY,aAAa,YAAY,iFAAiF,YAAY,cAAc,cAAc,gFAAgF,4DAA4D,oDAAoD,iFAAiF,6DAA6D,qDAAqD,oCAAoC,uCAAuC,+BAA+B,oCAAoC,gDAAgD,wCAAwC,iBAAiB,oBAAoB,aAAa,eAAe,aAAa,MAAM,QAAQ,SAAS,OAAO,8BAA8B,6BAA6B,mBAAmB,yBAAyB,mBAAmB,wBAAwB,uBAAuB,eAAe,kBAAkB,wCAAwC,gCAAgC,iCAAiC,qCAAqC,0BAA0B,qCAAqC,yBAAyB,2BAA2B,wBAAwB,uBAAuB,iEAAiE,wBAAwB,uBAAuB,uBAAuB,2BAA2B,gEAAgE,wBAAwB,uBAAuB,qBAAqB,yBAAyB,8BAA8B,yBAAyB,mBAAmB,uEAAuE,yBAAyB,mBAAmB,uBAAuB,2BAA2B,sEAAsE,yBAAyB,mBAAmB,qBAAqB,yBAAyB,8BAA8B,sBAAsB,qBAAqB,uEAAuE,sBAAsB,qBAAqB,uBAAuB,2BAA2B,sEAAsE,sBAAsB,qBAAqB,qBAAqB,yBAAyB,4OAA4O,gBAAgB,oDAAoD,8BAA8B,uBAAuB,mBAAmB,OAAO,mBAAmB,wBAAwB,uBAAuB,6CAA6C,8BAA8B,uBAAuB,mBAAmB,OAAO,qBAAqB,wBAAwB,uBAAuB,mCAAmC,mBAAmB,OAAO,4BAA4B,6BAA6B,sBAAsB,6IAA6I,yBAAyB,mBAAmB,2TAA2T,wBAAwB,uBAAuB,wTAAwT,sBAAsB,qBAAqB,gDAAgD,8BAA8B,uBAAuB,mBAAmB,OAAO,qBAAqB,wBAAwB,uBAAuB,oXAAoX,YAAY,mEAAmE,8BAA8B,oBAAoB,aAAa,aAAa,kBAAkB,sBAAsB,4BAA4B,6BAA6B,sBAAsB,wBAAwB,uBAAuB,WAAW,eAAe,eAAe,YAAY,sBAAsB,gBAAgB,oBAAoB,eAAe,mBAAmB,UAAU,2BAA2B,kBAAkB,cAAc,oBAAoB,aAAa,4BAA4B,6BAA6B,sBAAsB,yBAAyB,mBAAmB,aAAa,kBAAkB,eAAe,gBAAgB,UAAU,cAAc,kBAAkB,gBAAgB,kBAAkB,oBAAoB,qBAAqB,eAAe,oBAAoB,aAAa,UAAU,eAAe,yBAAyB,mBAAmB,wBAAwB,uBAAuB,WAAW,qBAAqB,2DAA2D,WAAW,uDAAuD,uGAAuG,gEAAgE,wDAAwD,uGAAuG,gEAAgE,yDAAyD,sBAAsB,YAAY,aAAa,gBAAgB,UAAU,sEAAsE,8DAA8D,+BAA+B,mBAAmB,yBAAyB,uCAAuC,kBAAkB,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,wDAAwD,kBAAkB,iBAAiB,sEAAsE,aAAa,qBAAqB,WAAW,YAAY,gBAAgB,sEAAsE,8DAA8D,sBAAsB,kBAAkB,+BAA+B,4BAA4B,cAAc,eAAe,mBAAmB,gBAAgB,gBAAgB,8BAA8B,eAAe,4BAA4B,SAAS,oBAAoB,mBAAmB,yBAAyB,WAAW,mBAAmB,2BAA2B,SAAS,oBAAoB,mBAAmB,sBAAsB,WAAW,mBAAmB,oBAAoB,UAAU,wDAAwD,gCAAgC,SAAS,cAAc,wBAAwB,uBAAuB,kBAAkB,gBAAgB,0BAA0B,cAAc,cAAc,0BAA0B,kBAAkB,SAAS,OAAO,WAAW,aAAa,0BAA0B,aAAa,eAAe,mBAAmB,aAAa,kBAAkB,UAAU,MAAM,QAAQ,wBAAwB,uBAAuB,YAAY,aAAa,UAAU,gBAAgB,sCAAsC,8BAA8B,YAAY,gBAAgB,gBAAgB,eAAe,WAAW,kBAAkB,gBAAgB,gBAAgB,eAAe,mBAAmB,uBAAuB,eAAe,eAAe,cAAc,+BAA+B,SAAS,eAAe,UAAU,wBAAwB,uBAAuB,SAAS,UAAU,cAAc,kBAAkB,gBAAgB,mBAAmB,kBAAkB,qBAAqB,oFAAoF,gBAAgB,yCAAyC,sBAAsB,WAAW,mDAAmD,2CAA2C,yBAAyB,sBAAsB,mBAAmB,2CAA2C,cAAc,kBAAkB,4FAA4F,+BAA+B,qCAAqC,2DAA2D,yBAAyB,UAAU,2BAA2B,0HAA0H,WAAW,+FAA+F,WAAW,2GAA2G,WAAW,8GAA8G,WAAW,gFAAgF,WAAW,aAAa,gBAAgB,gBAAgB,mBAAmB,UAAU,oBAAoB,UAAU,cAAc,gBAAgB,kBAAkB,uCAAuC,eAAe,UAAU,kBAAkB,oBAAoB,aAAa,eAAe,gBAAgB,0BAA0B,eAAe,YAAY,mBAAmB,kBAAkB,gBAAgB,cAAc,cAAc,cAAc,cAAc,eAAe,sBAAsB,mBAAmB,cAAc,kBAAkB,6BAA6B,yBAAyB,mBAAmB,wBAAwB,uBAAuB,gBAAgB,cAAc,yCAAyC,cAAc,kBAAkB,yCAAyC,cAAc,0BAA0B,aAAa,yBAAyB,mBAAmB,wBAAwB,uBAAuB,eAAe,gBAAgB,mBAAmB,WAAW,cAAc,gBAAgB,kCAAkC,cAAc,qBAAqB,YAAY,gBAAgB,aAAa,gBAAgB,kBAAkB,yBAAyB,WAAW,gBAAgB,kBAAkB,kBAAkB,YAAY,kBAAkB,uBAAuB,wBAAwB,uBAAuB,UAAU,WAAW,2BAA2B,+BAA+B,kBAAkB,oBAAoB,gBAAgB,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,gCAAgC,oBAAoB,aAAa,yBAAyB,mBAAmB,iBAAiB,wBAAwB,qBAAqB,cAAc,sCAAsC,kBAAkB,mBAAmB,YAAY,mDAAmD,cAAc,kBAAkB,aAAa,eAAe,eAAe,qBAAqB,yBAAyB,gEAAgE,cAAc,gCAAgC,wBAAwB,iEAAiE,UAAU,iCAAiC,yBAAyB,wCAAwC,+CAA+C,uCAAuC,sDAAsD,iDAAiD,yCAAyC,0BAA0B,qBAAqB,cAAc,uBAAuB,qBAAqB,cAAc,2BAA2B,qBAAqB,cAAc,0BAA0B,qBAAqB,cAAc,+DAA+D,kBAAkB,aAAa,aAAa,gCAAgC,wBAAwB,kBAAkB,4EAA4E,aAAa,eAAe,iCAAiC,yBAAyB,uCAAuC,+BAA+B,8BAA8B,6EAA6E,aAAa,aAAa,iCAAiC,yBAAyB,kCAAkC,0BAA0B,8BAA8B,8CAA8C,kBAAkB,UAAU,WAAW,YAAY,uBAAuB,WAAW,YAAY,wCAAwC,kBAAkB,6CAA6C,kBAAkB,UAAU,SAAS,aAAa,cAAc,eAAe,iCAAiC,yBAAyB,sDAAsD,cAAc,kBAAkB,UAAU,eAAe,qBAAqB,yBAAyB,kEAAkE,YAAY,YAAY,eAAe,gCAAgC,wBAAwB,mEAAmE,YAAY,WAAW,eAAe,iCAAiC,yBAAyB,kEAAkE,sDAAsD,8CAA8C,mEAAmE,uDAAuD,+CAA+C,6EAA6E,mEAAmE,2DAA2D,sBAAsB,yBAAyB,mBAAmB,kBAAkB,UAAU,mBAAmB,gBAAgB,yBAAyB,qBAAqB,kBAAkB,2CAA2C,WAAW,UAAU,WAAW,kBAAkB,mBAAmB,WAAW,gBAAgB,kBAAkB,sEAAsE,mBAAmB,2FAA2F,mBAAmB,WAAW,gGAAgG,mBAAmB,gDAAgD,WAAW,YAAY,YAAY,cAAc,mBAAmB,eAAe,wCAAwC,YAAY,iCAAiC,yBAAyB,YAAY,2CAA2C,mCAAmC,mBAAmB,wBAAwB,gBAAgB,yBAAyB,kBAAkB,YAAY,WAAW,YAAY,gBAAgB,wBAAwB,WAAW,OAAO,qCAAqC,QAAQ,UAAU,iCAAiC,mBAAmB,qBAAqB,oBAAoB,cAAc,mEAAmE,mBAAmB,qBAAqB,oBAAoB,cAAc,4BAA4B,mBAAmB,uCAAuC,oCAAoC,GAAG,oDAAoD,4CAA4C,IAAI,+CAA+C,uCAAuC,IAAI,oDAAoD,4CAA4C,KAAK,2CAA2C,oCAAoC,4BAA4B,GAAG,oDAAoD,4CAA4C,IAAI,+CAA+C,uCAAuC,IAAI,oDAAoD,4CAA4C,KAAK,2CAA2C,oCAAoC,oCAAoC,KAAK,gCAAgC,wBAAwB,WAAW,4BAA4B,KAAK,gCAAgC,wBAAwB,WAAW,wDAAwD,GAAG,YAAY,aAAa,QAAQ,IAAI,WAAW,YAAY,QAAQ,IAAI,WAAW,YAAY,cAAc,IAAI,aAAa,WAAW,WAAW,KAAK,YAAY,aAAa,aAAa,gDAAgD,GAAG,YAAY,aAAa,QAAQ,IAAI,WAAW,YAAY,QAAQ,IAAI,WAAW,YAAY,cAAc,IAAI,aAAa,WAAW,WAAW,KAAK,YAAY,aAAa,aAAa,yDAAyD,GAAG,YAAY,cAAc,QAAQ,IAAI,WAAW,cAAc,QAAQ,IAAI,YAAY,QAAQ,cAAc,KAAK,YAAY,cAAc,eAAe,iDAAiD,GAAG,YAAY,cAAc,QAAQ,IAAI,WAAW,cAAc,QAAQ,IAAI,YAAY,QAAQ,cAAc,KAAK,YAAY,cAAc,eAAe,8BAA8B,GAAG,4BAA4B,oBAAoB,IAAI,8BAA8B,sBAAsB,IAAI,6BAA6B,qBAAqB,KAAK,2BAA2B,oBAAoB,sBAAsB,GAAG,4BAA4B,oBAAoB,IAAI,8BAA8B,sBAAsB,IAAI,6BAA6B,qBAAqB,KAAK,2BAA2B,oBAAoB,8BAA8B,GAAG,2BAA2B,mBAAmB,UAAU,KAAK,4BAA4B,oBAAoB,WAAW,sBAAsB,GAAG,2BAA2B,mBAAmB,UAAU,KAAK,4BAA4B,oBAAoB,WAAW,kDAAkD,GAAG,aAAa,aAAa,QAAQ,IAAI,aAAa,YAAY,QAAQ,IAAI,aAAa,aAAa,cAAc,IAAI,QAAQ,cAAc,eAAe,KAAK,aAAa,YAAY,gBAAgB,0CAA0C,GAAG,aAAa,aAAa,QAAQ,IAAI,aAAa,YAAY,QAAQ,IAAI,aAAa,aAAa,cAAc,IAAI,QAAQ,cAAc,eAAe,KAAK,aAAa,YAAY,gBAAgB,mDAAmD,GAAG,YAAY,cAAc,QAAQ,IAAI,YAAY,cAAc,QAAQ,IAAI,aAAa,QAAQ,eAAe,KAAK,YAAY,WAAW,gBAAgB,2CAA2C,GAAG,YAAY,cAAc,QAAQ,IAAI,YAAY,cAAc,QAAQ,IAAI,aAAa,QAAQ,eAAe,KAAK,YAAY,WAAW,gBAAgB,sDAAsD,GAAG,iCAAiC,yBAAyB,GAAG,iCAAiC,yBAAyB,IAAI,kCAAkC,0BAA0B,KAAK,kCAAkC,2BAA2B,8CAA8C,GAAG,iCAAiC,yBAAyB,GAAG,iCAAiC,yBAAyB,IAAI,kCAAkC,0BAA0B,KAAK,kCAAkC,2BAA2B,8CAA8C,GAAG,mBAAmB,4BAA4B,oBAAoB,UAAU,IAAI,mBAAmB,4BAA4B,oBAAoB,UAAU,IAAI,mBAAmB,8BAA8B,sBAAsB,KAAK,aAAa,2BAA2B,mBAAmB,WAAW,sCAAsC,GAAG,mBAAmB,4BAA4B,oBAAoB,UAAU,IAAI,mBAAmB,4BAA4B,oBAAoB,UAAU,IAAI,mBAAmB,8BAA8B,sBAAsB,KAAK,aAAa,2BAA2B,mBAAmB,WAAW,4CAA4C,GAAG,kCAAkC,0BAA0B,UAAU,KAAK,6BAA6B,qBAAqB,WAAW,oCAAoC,GAAG,kCAAkC,0BAA0B,UAAU,KAAK,6BAA6B,qBAAqB,WAAW,wCAAwC,GAAG,4BAA4B,oBAAoB,KAAK,iCAAiC,0BAA0B,gCAAgC,GAAG,4BAA4B,oBAAoB,KAAK,iCAAiC,0BAA0B,iEAAiE,gBAAgB,uBAAuB,sBAAsB,wCAAwC,SAAS,WAAW,YAAY,UAAU,kCAAkC,uCAAuC,qDAAqD,mCAAmC,kDAAkD,MAAM,SAAS,mCAAmC,2BAA2B,+GAA+G,MAAM,OAAO,8GAA8G,MAAM,QAAQ,qDAAqD,QAAQ,SAAS,uCAAuC,+BAA+B,qHAAqH,QAAQ,OAAO,mCAAmC,2BAA2B,oHAAoH,QAAQ,QAAQ,mCAAmC,2BAA2B,qDAAqD,SAAS,SAAS,mCAAmC,2BAA2B,qHAAqH,SAAS,OAAO,oHAAoH,QAAQ,SAAS,aAAa,iEAAiE,4BAA4B,oFAAoF,aAAa,kFAAkF,2BAA2B,wCAAwC,6BAA6B,kDAAkD,MAAM,WAAW,YAAY,SAAS,mCAAmC,2BAA2B,8GAA8G,MAAM,QAAQ,YAAY,UAAU,+GAA+G,MAAM,WAAW,YAAY,OAAO,qHAAqH,QAAQ,WAAW,YAAY,OAAO,mCAAmC,2BAA2B,qDAAqD,QAAQ,WAAW,YAAY,SAAS,uCAAuC,+BAA+B,oHAAoH,QAAQ,QAAQ,YAAY,UAAU,mCAAmC,2BAA2B,qHAAqH,SAAS,WAAW,SAAS,OAAO,qDAAqD,SAAS,WAAW,SAAS,SAAS,mCAAmC,2BAA2B,oHAAoH,SAAS,QAAQ,SAAS,UAAU,qCAAqC,4BAA4B,6BAA6B,sBAAsB,0BAA0B,oBAAoB,oDAAoD,mBAAmB,OAAO,mBAAmB,aAAa,mBAAmB,oDAAoD,wBAAwB,uBAAuB,kDAAkD,WAAW,oBAAoB,cAAc,+DAA+D,cAAc,G;;;;;;;;;;;;;;;;;;ACn7F5t5B;AACM;AAU/C,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAI;AAAzB,qBAAqB;IANjC,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;ACXgB;AAMlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,iBAAiB;IAJ7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;;GACW,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;;;;;;;;;;;ACNS;AACM;AACmB;AACT;AACV;AAa7C,IAAa,cAAc,GAA3B,MAAa,cAAc;CAC1B;AADY,cAAc;IAV1B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,qEAAiB;SAClB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,8EAAqB;YACrB,4DAAY;SACb;KACF,CAAC;GACW,cAAc,CAC1B;AAD0B;;;;;;;;;;;;ACjB3B,+DAA+D,+I;;;;;;;;;;;;;;;;;ACAf;AAOhD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B;IACA,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AARY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;;GACW,eAAe,CAQ3B;AAR2B;;;;;;;;;;;;;;;;;;;;;;ACPW;AACc;AACF;AACqB;AACY;AAGpF,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;QAC1B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,sFAAmB;aAC/B;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,kGAAuB;aACnC;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,aAAa;gBACzB,SAAS,EAAE,MAAM;aAClB;SACF;KACF,CAAC,CAAC;AAMH,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAC/B;AADY,mBAAmB;IAJ/B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,mBAAmB,CAC/B;AAD+B;;;;;;;;;;;;;;;;;;AC/BkB;AAMlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAJ3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNW;AACqB;AACT;AACqB;AACY;AACrB;AACC;AACnB;AACmB;AACT;AACU;AACN;AACG;AACP;AACF;AACI;AAyBzD,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAI;AAAhB,YAAY;IAvBxB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,iEAAe;YACf,sFAAmB;YACnB,kGAAuB;SACxB;QACD,OAAO,EAAE;YACP,0EAAmB;YACnB,2DAAY;YACZ,0DAAW;YACX,4DAAY;YACZ,+EAAkB;YAClB,kEAAmB;YACnB,uEAAc;YACd,iFAAmB;YACnB,2EAAmB;YACnB,8EAAiB;YACjB,uEAAc;YACd,qEAAa;YACb,gEAAiB;YACjB,yEAAe;SAChB;KACF,CAAC;GACW,YAAY,CAAI;AAAJ;;;;;;;;;;;;ACxCzB,kCAAkC,gBAAgB,EAAE,iBAAiB,mBAAmB,EAAE,YAAY,uBAAuB,EAAE,kBAAkB,mBAAmB,iBAAiB,EAAE,qBAAqB,uBAAuB,EAAE,aAAa,mBAAmB,EAAE,eAAe,sBAAsB,EAAE,iBAAiB,iBAAiB,EAAE,+CAA+C,+hC;;;;;;;;;;;;;;;;;;;;;ACAjV;AACO;AACxB;AACgC;AAO/D,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IA2B9B,YACU,EAAe,EACf,WAAwB;QADxB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QA3BlC,4BAAuB,GAAG,IAAI,CAAC;QAC/B,mBAAc,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QACjF,sBAAiB,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QACjF,wBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7B,IAAI,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7B,IAAI,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7B,IAAI,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7B,QAAQ,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;QAIH,sBAAiB,GAAa,CAAC,MAAM,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAClE,yBAAoB,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC9D,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,IAAI,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7B,cAAc,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;QACH,cAAS,GAAU,EAAE,CAAC;QACtB,iBAAY,GAAa,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAO7D,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAClD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;QACrB,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;YACrC,+BAA+B;SAChC;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;SAC7C;IACH,CAAC;IAED,gBAAgB;QACd,aAAa;IACf,CAAC;IAED,kBAAkB;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,MAAM,UAAU,GAAG;gBACjB,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;gBACzC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK;gBAC7D,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;aAC5C,CAAC;YAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;SACtC;IACH,CAAC;IAED,aAAa,CAAC,OAAO;QACnB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe,CAAC,OAAY;QAC1B,2BAA2B;IAC7B,CAAC;IAED,gBAAgB,CAAC,QAAQ;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,uCAAuC;YAC7C,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC1E,kDAAI,CAAC,IAAI,CACP,UAAU,EACV,4BAA4B,EAC5B,SAAS,CACV,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;IAEhB,CAAC;IAED,cAAc,CAAC,QAAQ;QACrB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;CACF;;YAlFe,0DAAW;YACF,sEAAW;;AA7BvB,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,qLAA2C;;KAE5C,CAAC;2EA6Bc,0DAAW;QACF,sEAAW;GA7BvB,mBAAmB,CA8G/B;AA9G+B;;;;;;;;;;;;;;;;;;;;;;;ACVS;AACY;AAE9C,MAAM,MAAM;CAMlB;AAEM,MAAM,QAAQ;CAKpB;AAEM,MAAM,OAAO;CAMnB;AAEM,MAAM,IAAI;CAQhB;AAKD,IAAa,WAAW,GAAxB,MAAa,WAAW;IA2BtB;QAzBA,SAAI,GAAS;YACX,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,IAAI,IAAI,EAAE;YAChB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE;gBACR,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAC;gBACvE,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAC;gBACnE,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAC;gBACnE,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAC;gBACtE,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAC;aAC1E;SACF,CAAC;QAEM,mBAAc,GAAG,IAAI,oEAAe,CAAM,EAAE,CAAC,CAAC;QACtD,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAE7C,kBAAa,GAAG,IAAI,oEAAe,CAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvE,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAE3C,eAAU,GAAG,IAAI,oEAAe,CAAO,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,iBAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAI5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,uBAAuB,CAAC,IAAU;QAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;gBAChD,MAAM,WAAW,GAAa;oBAC5B,EAAE,EAAE,CAAC;oBACL,KAAK,EAAE,CAAC;oBACR,IAAI,EAAE,0EAA0E;wBAC9E,mFAAmF;wBACnF,iEAAiE;oBACnE,OAAO,EAAE,EAAE;iBACZ,CAAC;gBAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1B,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;wBACvB,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;wBACb,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,EAAE;wBACZ,MAAM,EAAE,KAAK;qBACd,CAAC,CAAC;iBACJ;gBAED,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEtE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW,CAAC,CAAS;QACnB,OAAO;YACL,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,KAAK,GAAG,CAAC,GAAG,2IAA2I;YAC7J,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,cAAc;oBACpB,MAAM,EAAE,KAAK;iBACd;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,IAAI;iBACb;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,MAAM,EAAE,KAAK;iBACd;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,KAAK;iBACd;gBACD;oBACE,IAAI,EAAE,KAAK;oBACX,MAAM,EAAE,KAAK;iBACd;aACF;SACF,CAAC;IACJ,CAAC;IAED,qBAAqB,CAAC,QAAa;QACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,mBAAmB,CAAC,KAAa;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACpD,CAAC;CACF;AApGY,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;;GACW,WAAW,CAoGvB;AApGuB;;;;;;;;;;;;ACvCxB,gCAAgC,mCAAmC,EAAE,qBAAqB,uBAAuB,gBAAgB,iBAAiB,wBAAwB,yBAAyB,2BAA2B,4BAA4B,wBAAwB,mBAAmB,sBAAsB,oBAAoB,0BAA0B,EAAE,iBAAiB,gBAAgB,qBAAqB,wBAAwB,sBAAsB,EAAE,kBAAkB,eAAe,EAAE,+CAA+C,u2C;;;;;;;;;;;;;;;;;;;ACAnf;AACe;AACP;AAOxD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IASlC,YACU,WAAwB,EACxB,EAAe;QADf,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QALzB,UAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QASrH,kBAAa,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;IAFpC,CAAC;IAID,SAAS;QACP,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,YAAY,CAAC,CAAS;QACpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,kBAAkB,CAAC,CAAS;QAC1B,KAAI,IAAI,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACvC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;SACvB;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IAEf,CAAC;CACF;;YAhDwB,sEAAW;YACpB,0DAAW;;AAXd,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,iMAA+C;;KAEhD,CAAC;2EAWuB,sEAAW;QACpB,0DAAW;GAXd,uBAAuB,CA0DnC;AA1DmC;;;;;;;;;;;;;;;;;;;;;;;;ACTG;AACc;AACK;AACA;AACA;AACA;AACX;AAG/C,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;QACxB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,GAAG,EAAE,CAAC,mJAAgC;qBACjD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;aAC7B;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,YAAY,EAAE,GAAG,EAAE,CAAC,+JAAsC;qBACvD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC/B;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,QAAQ;gBACpB,SAAS,EAAE,MAAM;aAClB;SACF;KACF,CAAC,CAAC;AAMH,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAI;AAArB,iBAAiB;IAJ7B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;ACnDoB;AAMlD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,aAAa;IAJzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;;GACW,aAAa,CAOzB;AAPyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNa;AACM;AACW;AACE;AACA;AACA;AACA;AACX;AACK;AACQ;AAChB;AAmB5C,IAAa,UAAU,GAAvB,MAAa,UAAU;CACtB;AADY,UAAU;IAhBtB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAa;YACb,wEAAe;YACf,wEAAe;YACf,wEAAe;YACf,wEAAe;SAChB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,sEAAiB;YACjB,kEAAY;YACZ,2EAAc;YACd,4DAAY;SACb;KACF,CAAC;GACW,UAAU,CACtB;AADsB;;;;;;;;;;;;AC7BvB,+DAA+D,+I;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;;;;;;;;;;ACPW;AACc;AACG;AACK;AACG;AAGhE,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;QAC5B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8EAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,SAAS;gBACrB,SAAS,EAAE,MAAM;aAClB;SACF;KACF,CAAC,CAAC;AAMH,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAI;AAAzB,qBAAqB;IAJjC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;AC/BgB;AAMlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,iBAAiB;IAJ7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;;GACW,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;;;;;;;;;;;;ACNS;AACM;AACgB;AACG;AACC;AACT;AAcxD,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAX1B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2EAAgB;YAChB,8EAAiB;YACjB,sEAAiB;SAClB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,+EAAqB;SACtB;KACF,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;;ACnB3B,+DAA+D,+J;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,+KAAwC;;KAEzC,CAAC;;GACW,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;ACP9B,+DAA+D,+J;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,4KAAuC;;KAExC,CAAC;;GACW,gBAAgB,CAO5B;AAP4B;;;;;;;;;;;;;;;;;;;;;;;ACPY;AACY;AAE9C,MAAM,MAAM;CAKlB;AAEM,MAAM,QAAQ;CAQpB;AAEM,MAAM,OAAO;CAWnB;AAEM,MAAM,UAAU;CActB;AAKD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAO5B;QAHQ,eAAU,GAAG,IAAI,oEAAe,CAAa,IAAI,CAAC,UAAU,CAAC,CAAC;QACtE,iBAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAG9C,CAAC;IAED,wBAAwB;QAEtB,iBAAiB;QACjB,MAAM,IAAI,GAAe;YACvB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,IAAI,IAAI,EAAE;YAChB,QAAQ,EAAE,CAAC;YACX,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,CAAC;YACb,UAAU,EAAE,CAAC;YACb,aAAa,EAAE,CAAC;YAChB,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,qBAAqB;QACrB,MAAM,QAAQ,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;QAC5E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,OAAO,GAAY;gBACvB,EAAE,EAAE,CAAC,GAAG,CAAC;gBACT,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;gBACjB,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;gBAC9C,KAAK,EAAE,CAAC,GAAG,CAAC;gBACZ,SAAS,EAAE,CAAC;gBACZ,UAAU,EAAE,CAAC;gBACb,UAAU,EAAE,CAAC;gBACb,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,EAAE;aACd,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,aAAa,IAAI,OAAO,CAAC,cAAc,CAAC;SAC9C;QAED,sBAAsB;QACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;gBAChD,MAAM,WAAW,GAAa;oBAC5B,EAAE,EAAE,CAAC;oBACL,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;oBACxC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;oBACrC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;oBACzC,IAAI,EAAE,0EAA0E;wBAC9E,mFAAmF;wBACnF,iEAAiE;oBACnE,OAAO,EAAE,EAAE;iBACZ,CAAC;gBAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1B,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;wBACvB,EAAE,EAAE,KAAK,GAAG,OAAO,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;wBAC9C,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,EAAE;qBACb,CAAC,CAAC;iBACJ;gBAED,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc,CAAC,UAAsB;QACnC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;QACrB,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;QACzB,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1B,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1B,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC;QAExB,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAEpC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YAClB,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;YACtB,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;YAErB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACnC,IAAI,QAAQ,CAAC,UAAU,KAAK,QAAQ,CAAC,MAAM,EAAE;oBAC3C,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC;oBAChC,OAAO,CAAC,SAAS,EAAE,CAAC;iBACrB;qBAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;oBACnC,OAAO,CAAC,UAAU,EAAE,CAAC;iBACtB;qBAAM;oBACL,OAAO,CAAC,UAAU,EAAE,CAAC;iBACtB;gBACD,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC;YAEH,UAAU,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC;YAClC,UAAU,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC;YAC1C,UAAU,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC;YAC5C,UAAU,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC;YAC5C,UAAU,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,WAAW,CAAC,aAAqB,EAAE,eAAuB;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ;aAC5B,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,SAAS;aAC3D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,KAAK,aAAa,CAAC,CAAC;IACxD,CAAC;CACF;AAxHY,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;;GACW,iBAAiB,CAwH7B;AAxH6B;;;;;;;;;;;;ACpD9B,woCAAwoC,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,8gGAA8gG,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,myCAAmyC,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,6LAA6L,kBAAkB,2BAA2B,EAAE,qEAAqE,mBAAmB,EAAE,qCAAqC,0BAA0B,EAAE,kCAAkC,kBAAkB,kCAAkC,EAAE,8CAA8C,kBAAkB,2BAA2B,4BAA4B,wBAAwB,EAAE,uCAAuC,mBAAmB,qBAAqB,mBAAmB,sBAAsB,sBAAsB,yBAAyB,EAAE,0CAA0C,kBAAkB,kCAAkC,qBAAqB,EAAE,sCAAsC,mBAAmB,uBAAuB,EAAE,sFAAsF,mBAAmB,EAAE,oCAAoC,8BAA8B,EAAE,4CAA4C,kBAAkB,kCAAkC,mBAAmB,EAAE,gCAAgC,kBAAkB,2BAA2B,uBAAuB,EAAE,yCAAyC,sBAAsB,wBAAwB,EAAE,2CAA2C,sBAAsB,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,0LAA0L,kBAAkB,2BAA2B,EAAE,+DAA+D,mBAAmB,EAAE,kCAAkC,0BAA0B,EAAE,+BAA+B,kBAAkB,kCAAkC,EAAE,2CAA2C,kBAAkB,2BAA2B,4BAA4B,wBAAwB,EAAE,oCAAoC,mBAAmB,qBAAqB,mBAAmB,sBAAsB,sBAAsB,yBAAyB,EAAE,uCAAuC,kBAAkB,kCAAkC,qBAAqB,EAAE,mCAAmC,mBAAmB,uBAAuB,EAAE,gFAAgF,mBAAmB,EAAE,iCAAiC,8BAA8B,EAAE,yCAAyC,kBAAkB,kCAAkC,mBAAmB,EAAE,6BAA6B,kBAAkB,2BAA2B,uBAAuB,EAAE,sCAAsC,sBAAsB,wBAAwB,EAAE,wCAAwC,sBAAsB,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,4LAA4L,kBAAkB,2BAA2B,EAAE,mEAAmE,mBAAmB,EAAE,oCAAoC,0BAA0B,EAAE,iCAAiC,kBAAkB,kCAAkC,EAAE,6CAA6C,kBAAkB,2BAA2B,4BAA4B,wBAAwB,EAAE,sCAAsC,mBAAmB,qBAAqB,mBAAmB,sBAAsB,sBAAsB,yBAAyB,EAAE,yCAAyC,kBAAkB,kCAAkC,qBAAqB,EAAE,qCAAqC,mBAAmB,uBAAuB,EAAE,oFAAoF,mBAAmB,EAAE,mCAAmC,8BAA8B,EAAE,2CAA2C,kBAAkB,kCAAkC,mBAAmB,EAAE,+BAA+B,kBAAkB,2BAA2B,uBAAuB,EAAE,wCAAwC,sBAAsB,wBAAwB,EAAE,0CAA0C,sBAAsB,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,+LAA+L,kBAAkB,2BAA2B,EAAE,yEAAyE,mBAAmB,EAAE,uCAAuC,0BAA0B,EAAE,oCAAoC,kBAAkB,kCAAkC,EAAE,gDAAgD,kBAAkB,2BAA2B,4BAA4B,wBAAwB,EAAE,yCAAyC,mBAAmB,qBAAqB,mBAAmB,sBAAsB,sBAAsB,yBAAyB,EAAE,4CAA4C,kBAAkB,kCAAkC,qBAAqB,EAAE,wCAAwC,mBAAmB,uBAAuB,EAAE,0FAA0F,mBAAmB,EAAE,sCAAsC,8BAA8B,EAAE,8CAA8C,kBAAkB,kCAAkC,mBAAmB,EAAE,kCAAkC,kBAAkB,2BAA2B,uBAAuB,EAAE,2CAA2C,sBAAsB,wBAAwB,EAAE,6CAA6C,sBAAsB,EAAE,+CAA+C,2m/P;;;;;;;;;;;;;;;;;;ACA1tiD;AACoB;AAOpE,IAAa,eAAe,GAA5B,MAAa,eAAe;IAK1B,YACU,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAH9C,YAAO,GAAa,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAK9C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACzD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAE7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,EAAE,CAAC;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAb8B,sEAAiB;;AANnC,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;2EAO6B,sEAAiB;GANnC,eAAe,CAmB3B;AAnB2B;;;;;;;;;;;;ACR5B,+DAA+D,+I;;;;;;;;;;;;;;;;;;ACAf;AACM;AAOtD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YACU,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAE9B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IACpD,CAAC;CAEF;;YARoB,gEAAW;;AAHnB,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;2EAImB,gEAAW;GAHnB,eAAe,CAW3B;AAX2B;;;;;;;;;;;;ACR5B,+DAA+D,mI;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oJAAoC;;KAErC,CAAC;;GACW,aAAa,CAOzB;AAPyB;;;;;;;;;;;;ACP1B,woCAAwoC,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,8gGAA8gG,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,myCAAmyC,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,gMAAgM,oBAAoB,uBAAuB,aAAa,8BAA8B,EAAE,wCAAwC,aAAa,2CAA2C,2CAA2C,EAAE,uCAAuC,YAAY,6CAA6C,6CAA6C,EAAE,wCAAwC,qBAAqB,EAAE,wCAAwC,iBAAiB,mBAAmB,iBAAiB,EAAE,0CAA0C,gBAAgB,iBAAiB,EAAE,0CAA0C,uBAAuB,aAAa,2CAA2C,2CAA2C,gBAAgB,mBAAmB,iBAAiB,gBAAgB,iBAAiB,wBAAwB,4BAA4B,EAAE,gCAAgC,uBAAuB,cAAc,2CAA2C,2CAA2C,mBAAmB,iBAAiB,iBAAiB,gBAAgB,8BAA8B,EAAE,2CAA2C,uBAAuB,EAAE,mCAAmC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,4CAA4C,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,6LAA6L,oBAAoB,uBAAuB,aAAa,8BAA8B,EAAE,qCAAqC,aAAa,2CAA2C,2CAA2C,EAAE,oCAAoC,YAAY,6CAA6C,6CAA6C,EAAE,qCAAqC,qBAAqB,EAAE,qCAAqC,iBAAiB,mBAAmB,iBAAiB,EAAE,uCAAuC,gBAAgB,iBAAiB,EAAE,uCAAuC,uBAAuB,aAAa,2CAA2C,2CAA2C,gBAAgB,mBAAmB,iBAAiB,gBAAgB,iBAAiB,wBAAwB,4BAA4B,EAAE,6BAA6B,uBAAuB,cAAc,2CAA2C,2CAA2C,mBAAmB,iBAAiB,iBAAiB,gBAAgB,8BAA8B,EAAE,wCAAwC,uBAAuB,EAAE,gCAAgC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,yCAAyC,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,+LAA+L,oBAAoB,uBAAuB,aAAa,8BAA8B,EAAE,uCAAuC,aAAa,2CAA2C,2CAA2C,EAAE,sCAAsC,YAAY,6CAA6C,6CAA6C,EAAE,uCAAuC,qBAAqB,EAAE,uCAAuC,iBAAiB,mBAAmB,iBAAiB,EAAE,yCAAyC,gBAAgB,iBAAiB,EAAE,yCAAyC,uBAAuB,aAAa,2CAA2C,2CAA2C,gBAAgB,mBAAmB,iBAAiB,gBAAgB,iBAAiB,wBAAwB,4BAA4B,EAAE,+BAA+B,uBAAuB,cAAc,2CAA2C,2CAA2C,mBAAmB,iBAAiB,iBAAiB,gBAAgB,8BAA8B,EAAE,0CAA0C,uBAAuB,EAAE,kCAAkC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,2CAA2C,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,kMAAkM,oBAAoB,uBAAuB,aAAa,8BAA8B,EAAE,0CAA0C,aAAa,2CAA2C,2CAA2C,EAAE,yCAAyC,YAAY,6CAA6C,6CAA6C,EAAE,0CAA0C,qBAAqB,EAAE,0CAA0C,iBAAiB,mBAAmB,iBAAiB,EAAE,4CAA4C,gBAAgB,iBAAiB,EAAE,4CAA4C,uBAAuB,aAAa,2CAA2C,2CAA2C,gBAAgB,mBAAmB,iBAAiB,gBAAgB,iBAAiB,wBAAwB,4BAA4B,EAAE,kCAAkC,uBAAuB,cAAc,2CAA2C,2CAA2C,mBAAmB,iBAAiB,iBAAiB,gBAAgB,8BAA8B,EAAE,6CAA6C,uBAAuB,EAAE,qCAAqC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,8CAA8C,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,+CAA+C,+khQ;;;;;;;;;;;;;;;;;ACA9skD;AAOlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qKAAwC;;KAEzC,CAAC;;GACW,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;ACP9B,woCAAwoC,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,8gGAA8gG,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,myCAAmyC,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,wLAAwL,iBAAiB,EAAE,kCAAkC,oBAAoB,EAAE,2CAA2C,uBAAuB,EAAE,mCAAmC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,4CAA4C,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,wCAAwC,yBAAyB,qBAAqB,kBAAkB,2BAA2B,EAAE,sCAAsC,oBAAoB,mBAAmB,EAAE,oCAAoC,8BAA8B,EAAE,sCAAsC,iBAAiB,kBAAkB,kCAAkC,mBAAmB,EAAE,sCAAsC,iBAAiB,kBAAkB,2BAA2B,uBAAuB,EAAE,2CAA2C,oBAAoB,wBAAwB,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,qLAAqL,iBAAiB,EAAE,+BAA+B,oBAAoB,EAAE,wCAAwC,uBAAuB,EAAE,gCAAgC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,yCAAyC,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,qCAAqC,yBAAyB,qBAAqB,kBAAkB,2BAA2B,EAAE,mCAAmC,oBAAoB,mBAAmB,EAAE,iCAAiC,8BAA8B,EAAE,mCAAmC,iBAAiB,kBAAkB,kCAAkC,mBAAmB,EAAE,mCAAmC,iBAAiB,kBAAkB,2BAA2B,uBAAuB,EAAE,wCAAwC,oBAAoB,wBAAwB,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,uLAAuL,iBAAiB,EAAE,iCAAiC,oBAAoB,EAAE,0CAA0C,uBAAuB,EAAE,kCAAkC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,2CAA2C,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,uCAAuC,yBAAyB,qBAAqB,kBAAkB,2BAA2B,EAAE,qCAAqC,oBAAoB,mBAAmB,EAAE,mCAAmC,8BAA8B,EAAE,qCAAqC,iBAAiB,kBAAkB,kCAAkC,mBAAmB,EAAE,qCAAqC,iBAAiB,kBAAkB,2BAA2B,uBAAuB,EAAE,0CAA0C,oBAAoB,wBAAwB,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,0LAA0L,iBAAiB,EAAE,oCAAoC,oBAAoB,EAAE,6CAA6C,uBAAuB,EAAE,qCAAqC,cAAc,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,EAAE,8CAA8C,cAAc,uBAAuB,aAAa,wCAAwC,wCAAwC,EAAE,0CAA0C,yBAAyB,qBAAqB,kBAAkB,2BAA2B,EAAE,wCAAwC,oBAAoB,mBAAmB,EAAE,sCAAsC,8BAA8B,EAAE,wCAAwC,iBAAiB,kBAAkB,kCAAkC,mBAAmB,EAAE,wCAAwC,iBAAiB,kBAAkB,2BAA2B,uBAAuB,EAAE,6CAA6C,oBAAoB,wBAAwB,EAAE,+CAA+C,u27P;;;;;;;;;;;;;;;;;ACAjygD;AAQ3G,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAM/B,YAAoB,GAAsB;QAAtB,QAAG,GAAH,GAAG,CAAmB;QAH1C,SAAI,GAAU,EAAE,CAAC;QAIb,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG;YACR,8DAA8D;gBAC9D,gDAAgD;YAEhD,qDAAqD;gBACrD,yDAAyD;SAC5D,CAAC;IACN,CAAC;IAED,QAAQ;IACR,CAAC;IAED,MAAM;QACF,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,eAAe;QACX,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;CAEJ;;YAzB4B,+DAAiB;;AANjC,sBAAsB;IANlC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,uLAA8C;QAE9C,eAAe,EAAE,qEAAuB,CAAC,MAAM;;KAClD,CAAC;2EAO2B,+DAAiB;GANjC,sBAAsB,CA+BlC;AA/BkC;;;;;;;;;;;;;;;;;;;;;ACRI;AACc;AAEY;AACC;AAElE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAsB;QACjC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,gFAAiB;aAC7B;SACF;KACF;CACF,CAAC;AAMF,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;CACtC;AADY,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CACtC;AADsC;;;;;;;;;;;;;;;;;;ACvBC;AAMxC,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAClC;AADY,sBAAsB;IAJlC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;GACW,sBAAsB,CAClC;AADkC;;;;;;;;;;;;;;;;;;;;;;;ACNI;AACqB;AAEN;AACoB;AACT;AACC;AAclE,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAC/B;AADY,mBAAmB;IAZ/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,+DAAW;YACX,2DAAY;YACZ,6DAAc;YACd,wFAA0B;SAC3B;QACD,YAAY,EAAE;YACZ,+EAAsB;YACtB,gFAAiB;SAClB;KACF,CAAC;GACW,mBAAmB,CAC/B;AAD+B;;;;;;;;;;;;ACpBhC,kCAAkC,iBAAiB,EAAE,kBAAkB,kBAAkB,EAAE,YAAY,uBAAuB,EAAE,gBAAgB,uBAAuB,mBAAmB,wBAAwB,EAAE,kBAAkB,wBAAwB,EAAE,+CAA+C,+1B;;;;;;;;;;;;;;;;;;ACAlQ;AACL;AAOxC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAoB,WAA0B;QAA1B,gBAAW,GAAX,WAAW,CAAe;IAC9C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAClC,CAAC;CACF;;YANkC,4DAAa;;AAFnC,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QAEzB,gLAAyC;;KAC1C,CAAC;2EAGiC,4DAAa;GAFnC,iBAAiB,CAQ7B;AAR6B;;;;;;;;;;;;;ACN9B;AAAA;AAAO,MAAM,UAAU,GAAiB;IACtC;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,cAAc;QACpB,IAAI,EAAE,aAAa;QACnB,IAAI,EAAE,IAAI;KACX;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,aAAa;QACnB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,oBAAoB;aAC3B;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,oBAAoB;aAC3B;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,oBAAoB;aAC3B;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,uBAAuB;aAC9B;SACF;KACF;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,aAAa;QACnB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,MAAM;gBACb,IAAI,EAAE,oBAAoB;aAC3B;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,oBAAoB;aAC3B;SACF;KACF;IACD;QACE,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,mBAAmB;QACzB,IAAI,EAAE,iBAAiB;QACvB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,kBAAkB;gBACzB,IAAI,EAAE,kCAAkC;aACzC;YACD;gBACE,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,+BAA+B;aACtC;YACD;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,mCAAmC;aAC1C;SACF;KACF;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,mBAAmB;QACzB,IAAI,EAAE,eAAe;QACrB,QAAQ,EAAE;YACR;gBACE,KAAK,EAAE,gBAAgB;gBACvB,IAAI,EAAE,8BAA8B;aACrC;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,2BAA2B;aAClC;YACD;gBACE,KAAK,EAAE,iBAAiB;gBACxB,IAAI,EAAE,+BAA+B;aACtC;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;ACrFmD;AACd;AAEU;AAC8B;AAC3B;AAEpD,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;QACzB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,kEAAa;aACzB;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,GAAG,EAAE,CAAC,sIAA4B;qBAC7C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;aAC3B;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,GAAG,EAAE,CAAC,sIAA4B;qBAC7C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;aAC3B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,YAAY,EAAE,GAAG,EAAE,CAAC,sJAAoC;qBACrD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC/B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,GAAG,EAAE,CAAC,8IAAgC;qBACjD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;aAC7B;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,MAAM;gBAClB,SAAS,EAAE,MAAM;aAClB;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,SAAS,EAAE,6FAAiB;aAC7B;SACF;KACF,CAAC,CAAC;AAMH,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAC9B;AADY,kBAAkB;IAJ9B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,kBAAkB,CAC9B;AAD8B;;;;;;;;;;;;ACnD/B,woCAAwoC,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,8gGAA8gG,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,kkEAAkkE,+GAA+G,+CAA+C,EAAE,eAAe,KAAK,GAAG,6CAA6C,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,sBAAsB,iBAAiB,yBAAyB,kBAAkB,KAAK,GAAG,yEAAyE,UAAU,0DAA0D,UAAU,8bAA8b,wBAAwB,cAAc,GAAG,uFAAuF,OAAO,yBAAyB,MAAM,KAAK,GAAG,mnCAAmnC,kHAAkH,EAAE,EAAE,mBAAmB,SAAS,OAAO,myCAAmyC,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,4MAA4M,mBAAmB,+BAA+B,+BAA+B,EAAE,2BAA2B,UAAU,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAE,mBAAmB,UAAU,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,yMAAyM,mBAAmB,+BAA+B,+BAA+B,EAAE,mBAAmB,UAAU,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,2MAA2M,mBAAmB,+BAA+B,+BAA+B,EAAE,mBAAmB,UAAU,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAE,qYAAqY,8BAA8B,8BAA8B,WAAW,4EAA4E,0BAA0B,8MAA8M,mBAAmB,+BAA+B,+BAA+B,EAAE,mBAAmB,UAAU,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAE,+CAA+C,2prP;;;;;;;;;;;;;;;;;;ACA3u5C;AAEA;AAY1C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAV3B;QAYE,SAAI,GAAG,sDAAU,CAAC;IACpB,CAAC;CAAA;AAHY,cAAc;IAV1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QAErB,QAAQ,EAAE;;;;;GAKT;;KACF,CAAC;GACW,cAAc,CAG1B;AAH0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdY;AAC+C;AAEnC;AACF;AACS;AACc;AACpB;AACN;AACA;AACY;AACN;AACiB;AACiB;AAuBtF,IAAa,WAAW,GAAxB,MAAa,WAAW;CACvB;AADY,WAAW;IArBvB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,wEAAkB;YAClB,+DAAW;YACX,2DAAY;YACZ,sFAAmB;YACnB,4DAAU;YACV,4DAAU;YACV,yEAAc;YACd,mEAAY;YACZ,2DAAY;YACZ,2DAAY;YACZ,2DAAY;SACb;QACD,YAAY,EAAE;YACZ,+DAAc;YACd,kEAAa;YACb,oFAAiB;YACjB,qGAAsB;SACvB;KACF,CAAC;GACW,WAAW,CACvB;AADuB;;;;;;;;;;;;;;;;;;;ACpCe;AACM;AAS7C,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAC/B;AADY,mBAAmB;IAN/B,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,mBAAmB,CAC/B;AAD+B;;;;;;;;;;;;;;;;;;ACVgB;AAMhD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B;IACA,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AARY,eAAe;IAJ3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;;GACW,eAAe,CAQ3B;AAR2B;;;;;;;;;;;;;;;;;;;;;;ACNW;AACM;AACe;AACT;AACN;AAa7C,IAAa,YAAY,GAAzB,MAAa,YAAY;CACxB;AADY,YAAY;IAVxB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,iEAAe;SAChB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,0EAAmB;YACnB,4DAAY;SACb;KACF,CAAC;GACW,YAAY,CACxB;AADwB;;;;;;;;;;;;;ACfzB;AAAA;AAAe,MAAM,WAAW;IAI9B,MAAM,CAAC,SAAS,CAAC,GAAG;QAClB,OAAO,OAAO,GAAG,KAAK,WAAW;YAC/B,GAAG,KAAK,MAAM;YACd,CAAC,GAAG;YACJ,GAAG,CAAC,MAAM,IAAI,CAAC;YACf,GAAG,KAAK,EAAE;YACV,GAAG,KAAK,EAAE;YACV,GAAG,KAAK,SAAS;YACjB,GAAG,KAAK,IAAI,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,MAAM;QACrB,OAAO,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,CAAC;IAC5D,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;ACpBwC;AACgC;AAC3B;AAEX;AACc;AAClB;AAK/B,IAAa,WAAW,GAAxB,MAAa,WAAW;IACtB,YACU,IAAgB,EAChB,OAA0B;QAD1B,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAmB;IAEpC,CAAC;IAED,IAAI,CAAI,GAAW,EAAE,MAAmB;QACtC,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC9B,MAAM,CAAC,cAAc,EAAE,yCAAyC,CAAC;aACjE,MAAM,CAAC,QAAQ,EAAE,yCAAyC,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE;YAC7B,MAAM;YACN,YAAY,EAAE,aAAuB;YACrC,OAAO,EAAE,UAAoB;YAC7B,OAAO;SACR,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAC5B,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,GAAG,CAAI,GAAW,EAAE,EAAW,EAAE,MAAmB;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,GAAG,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAChE,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAI,GAAW,EAAE,IAAY;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAC7D,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,GAAG,CAAI,GAAW,EAAE,IAAY;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAC5D,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,MAAM,CAAI,GAAW,EAAE,EAAW;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAC9D,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,GAAI,EAAE,EAAG;QAChC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,OAAO,CAAC;QACZ,QAAQ,MAAM,EAAE;YACd,KAAK,KAAK;gBACR,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACxB,MAAM;YACR,KAAK,MAAM;gBACT,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC9B,MAAM;YACR,KAAK,KAAK;gBACR,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC7B,MAAM;YACR,KAAK,QAAQ;gBACX,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC3B,MAAM;SACT;QACD,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3B,IAAI,4DAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAC1C,IAAI,EAAE,EAAE;oBACN,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACrB;aACF;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,kDAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,qBAAqB,CAAC,CAAC;aACtD;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,kDAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA3EiB,+DAAU;YACP,6DAAiB;;AAHzB,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAGgB,+DAAU;QACP,6DAAiB;GAHzB,WAAW,CA6EvB;AA7EuB;;;;;;;;;;;;ACXxB,+DAA+D,+I;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,kKAAuC;;KAExC,CAAC;;GACW,gBAAgB,CAO5B;AAP4B;;;;;;;;;;;;ACP7B,+DAA+D,+I;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;ACP5B,+DAA+D,+I;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;ACP5B,+DAA+D,uI;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yJAAoC;;KAErC,CAAC;;GACW,aAAa,CAOzB;AAPyB;;;;;;;;;;;;ACP1B,kCAAkC,eAAe,EAAE,UAAU,oBAAoB,mBAAmB,EAAE,+CAA+C,2f;;;;;;;;;;;;;;;;;ACArG;AAOhD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAG1B;QAFA,aAAQ,GAAU,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;IAGnG,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AATY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;;GACW,eAAe,CAS3B;AAT2B;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACc;AACK;AACA;AACA;AACN;AACS;AACd;AAG/C,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;QACxB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,kEAAa;aACzB;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,QAAQ;gBACpB,SAAS,EAAE,MAAM;aAClB;SACF;KACF,CAAC,CAAC;AAMH,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAI;AAArB,iBAAiB;IAJ7B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;AC9CkB;AAMhD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB;IACA,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AARY,aAAa;IAJzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;;GACW,aAAa,CAQzB;AARyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNa;AACM;AACW;AACE;AACA;AACA;AACN;AACS;AACd;AACH;AACoB;AACT;AACE;AAqBzD,IAAa,UAAU,GAAvB,MAAa,UAAU;CACtB;AADY,UAAU;IAlBtB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAa;YACb,2EAAgB;YAChB,wEAAe;YACf,wEAAe;YACf,kEAAa;YACb,wEAAe;SAChB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,sEAAiB;YACjB,4DAAY;YACZ,gFAAkB;YAClB,uEAAc;YACd,yEAAe;SAChB;KACF,CAAC;GACW,UAAU,CACtB;AADsB","file":"app-pages-pages-module-es2015.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of the Angular Component Development Kit.\n * @type {?}\n */\nconst VERSION = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { Directive, ElementRef, EventEmitter, Injectable, NgZone, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { coerceElement, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ngInjectableDef = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkAutofill]',\n            },] },\n];\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = value;\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = value;\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight === undefined) {\n            return;\n        }\n        this._textareaElement.style.height = this._initialHeight;\n    }\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.decorators = [\n    { type: Directive, args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1',\n                    '(input)': '_noopInputHandler()',\n                },\n            },] },\n];\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n//# sourceMappingURL=text-field.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatRipple, mixinColor, mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.decorators = [\n    { type: Component, args: [{selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-focus-overlay,.mat-stroked-button .mat-button-ripple.mat-ripple{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:#fff}}@media (-ms-high-contrast:black-on-white){.mat-button-focus-overlay{background-color:#000}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple, { static: false },] }]\n};\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.decorators = [\n    { type: Component, args: [{selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-focus-overlay,.mat-stroked-button .mat-button-ripple.mat-ripple{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:#fff}}@media (-ms-high-contrast:black-on-white){.mat-button-focus-overlay{background-color:#000}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatButtonModule, MatButton, MatAnchor };\n//# sourceMappingURL=button.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, ɵɵdefineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION } from '@angular/cdk';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nconst VERSION$1 = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$2 = new Version('8.2.3');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     * @param {?=} _hammerLoader\n     */\n    constructor(_sanityChecksEnabled, _hammerLoader) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        this._hammerLoader = _hammerLoader;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @private\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        if (VERSION$2.full !== VERSION.full) {\n            console.warn('The Angular Material version (' + VERSION$2.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !((/** @type {?} */ (this._window)))['Hammer'] && !this._hammerLoader) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule],\n                exports: [BidiModule],\n            },] },\n];\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ],\n            },] },\n];\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.decorators = [\n    { type: Injectable },\n];\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            },] },\n];\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = RippleState.HIDDEN;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            },] },\n];\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.decorators = [\n    { type: Component, args: [{encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.decorators = [\n    { type: Component, args: [{selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId',\n                }\n            },] },\n];\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.decorators = [\n    { type: Component, args: [{selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option',\n                },\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION$1 as VERSION, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n//# sourceMappingURL=core.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /**\n     * Formats a range of years.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ MatDatepickerIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.decorators = [\n    { type: Component, args: [{selector: '[mat-calendar-body]',\n                template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" role=\\\"button\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.decorators = [\n    { type: Component, args: [{selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] },\n];\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.decorators = [\n    { type: Component, args: [{selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] },\n];\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.decorators = [\n    { type: Component, args: [{selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] },\n];\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        /** @type {?} */\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        /** @type {?} */\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.decorators = [\n    { type: Component, args: [{selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.decorators = [\n    { type: Component, args: [{selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n                host: {\n                    'class': 'mat-calendar',\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView, { static: false },] }],\n    yearView: [{ type: ViewChild, args: [MatYearView, { static: false },] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super(elementRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n}\nMatDatepickerContent.decorators = [\n    { type: Component, args: [{selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '\"enter\"',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n            },] },\n];\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar, { static: false },] }]\n};\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._setColor();\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            this._setColor();\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._popupRef.updatePosition();\n            }));\n        }\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @private\n     * @return {?}\n     */\n    _setColor() {\n        /** @type {?} */\n        const color = this.color;\n        if (this._popupComponentRef) {\n            this._popupComponentRef.instance.color = color;\n        }\n        if (this._dialogRef) {\n            this._dialogRef.componentInstance.color = color;\n        }\n    }\n}\nMatDatepicker.decorators = [\n    { type: Component, args: [{selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                },\n                exportAs: 'matDatepickerInput',\n            },] },\n];\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.decorators = [\n    { type: Directive, args: [{\n                selector: '[matDatepickerToggleIcon]'\n            },] },\n];\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.decorators = [\n    { type: Component, args: [{selector: 'mat-datepicker-toggle',\n                template: \"<button #button mat-icon-button type=\\\"button\\\" [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': '-1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()',\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon, { static: false },] }],\n    _button: [{ type: ViewChild, args: ['button', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMultiYearView, yearsPerPage, yearsPerRow, MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView };\n//# sourceMappingURL=datepicker.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Inject, Optional, ChangeDetectorRef, ViewChild, ViewEncapsulation, ChangeDetectionStrategy, Injectable, InjectionToken, Injector, SkipSelf, TemplateRef, Directive, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, Location, CommonModule } from '@angular/common';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, PortalInjector, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst animationBody = [\n    // Note: The `enter` animation transitions to `transform: none`, because for some reason\n    // specifying the transform explicitly, causes IE both to blur the dialog content and\n    // decimate the animation performance. Leaving it as `none` solves both issues.\n    state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n    state('enter', style({ transform: 'none' })),\n    transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n    transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n];\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', animationBody),\n    /**\n     * @deprecated \\@breaking-change 8.0.0 Use `matDialogAnimations.dialogContainer` instead.\n     */\n    slideDialog: trigger('slideDialog', animationBody)\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._document = _document;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.decorators = [\n    { type: Component, args: [{selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\",\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}@media (-ms-high-contrast:active){.mat-dialog-container{outline:solid 1px}}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\"],\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)',\n                },\n            },] },\n];\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} _location\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, \n    // @breaking-change 8.0.0 `_location` parameter to be removed.\n    _location, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._state = 2 /* CLOSED */;\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.dispose();\n            }), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @deprecated Use `afterOpened` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    afterOpen() {\n        return this.afterOpened();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @deprecated Use `beforeClosed` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    beforeClose() {\n        return this.beforeClosed();\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._location = _location;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @deprecated Use `afterOpened` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get afterOpen() {\n        return this.afterOpened;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state$$1 = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state$$1.backdropClass = dialogConfig.backdropClass;\n        }\n        return state$$1;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatDialogConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, this._location, config.id);\n        // When the dialog backdrop is clicked, we want to close it.\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (!dialogRef.disableClose) {\n                    dialogRef.close();\n                }\n            }));\n        }\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, undefined, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const injectionTokens = new WeakMap([\n            [MatDialogContainer, dialogContainer],\n            [MAT_DIALOG_DATA, config.data],\n            [MatDialogRef, dialogRef]\n        ]);\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            injectionTokens.set(Directionality, {\n                value: config.direction,\n                change: of()\n            });\n        }\n        return new PortalInjector(userInjector || this._injector, injectionTokens);\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign({}, defaultOptions, config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type',\n                }\n            },] },\n];\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id',\n                },\n            },] },\n];\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.decorators = [\n    { type: Directive, args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            },] },\n];\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.decorators = [\n    { type: Directive, args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            },] },\n];\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatDialogModule, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MatDialog, throwMatDialogContentAlreadyAttachedError, MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogConfig, MatDialogRef, matDialogAnimations };\n//# sourceMappingURL=dialog.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id',\n                }\n            },] },\n];\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null',\n                }\n            },] },\n];\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-label'\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-placeholder'\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.decorators = [\n    { type: Directive, args: [{\n                selector: '[matPrefix]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.decorators = [\n    { type: Directive, args: [{\n                selector: '[matSuffix]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        /* Holds the previous direction emitted by directionality service change emitter.\n             This is used in updateOutlineGap() method to update the width and position of the gap in the\n             outline. Only relevant for the outline appearance. The direction is getting updated in the\n             UI after directionality service change emission. So the outlines gaps are getting\n             updated in updateOutlineGap() method before connectionContainer child direction change\n             in UI. We may get wrong calculations. So we are storing the previous direction to get the\n             correct outline calculations*/\n        this._previousDirection = 'ltr';\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._labelOptions.float || 'auto';\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._labelOptions.float || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n        // and ViewEngine. We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateOutlineGap();\n                this._previousDirection = this._dir.value;\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!(/** @type {?} */ (document.documentElement)).contains(this._elementRef.nativeElement)) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls.item(i).style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls.item(i).style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return this._previousDirection === 'rtl' ? rect.right : rect.left;\n    }\n}\nMatFormField.decorators = [\n    { type: Component, args: [{selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" (cdkObserveContent)=\\\"updateOutlineGap()\\\" [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n                // MatInput is a directive and can't have styles, so we need to include its styles here\n                // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n                // big deal for people who aren't using MatInput.\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"],\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled',\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline', { static: false },] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer', { static: false },] }],\n    _label: [{ type: ViewChild, args: ['label', { static: false },] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: false },] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel, { static: false },] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder, { static: false },] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError,] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint,] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix,] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n//# sourceMappingURL=form-field.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Component, ViewEncapsulation, ElementRef, Input, Optional, ContentChildren, Directive, ChangeDetectionStrategy, Inject, NgModule } from '@angular/core';\nimport { MatLine, setLines, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.decorators = [\n    { type: Component, args: [{selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                },\n                template: \"<figure class=\\\"mat-figure\\\"><ng-content></ng-content></figure>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.decorators = [\n    { type: Component, args: [{selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content><div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine,] }]\n};\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            },] },\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            },] },\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.decorators = [\n    { type: Component, args: [{selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div><ng-content></ng-content></div>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\"],\n                host: {\n                    'class': 'mat-grid-list',\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatGridListModule, MatGridList, MatGridTile, MatGridTileText, MatGridAvatarCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MAT_GRID_LIST as ɵa11 };\n//# sourceMappingURL=grid-list.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Inject, NgZone, Optional, Self, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.decorators = [\n    { type: Directive, args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1',\n                    '(input)': '_noopInputHandler()',\n                },\n            },] },\n];\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @protected\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.decorators = [\n    { type: Directive, args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()',\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n            },] },\n];\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    CommonModule,\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTextareaAutosize, MatInput, getMatInputUnsupportedTypeError, MatInputModule, MAT_INPUT_VALUE_ACCESSOR };\n//# sourceMappingURL=input.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, animateChild, query, state, style, transition, trigger } from '@angular/animations';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { A, DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, isDevMode, NgZone, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, ErrorStateMatcher, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisabled, mixinDisableRipple, mixinErrorState, mixinTabIndex, MatCommonModule, MatOptionModule } from '@angular/material/core';\nimport { MatFormField, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { defer, merge, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     * @deprecated Not used anymore. To be removed.\n     * \\@breaking-change 8.0.0\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformPanel = matSelectAnimations.transformPanel;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInContent = matSelectAnimations.fadeInContent;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-select-trigger'\n            },] },\n];\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?=} _liveAnnouncer\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * \\@breaking-change 8.0.0\n     * @param {?} value\n     * @return {?}\n     */\n    set focused(value) {\n        this._focused = value;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            // @breaking-change 8.0.0 remove null check for _liveAnnouncer.\n            if (this._liveAnnouncer && selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        }\n        else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this.typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.decorators = [\n    { type: Component, args: [{selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin class=\\\"mat-select-trigger\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger><div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\"><span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\u00A0'}}</span> <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content></span></div><div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\" [cdkConnectedOverlayOrigin]=\\\"origin\\\" [cdkConnectedOverlayOpen]=\\\"panelOpen\\\" [cdkConnectedOverlayPositions]=\\\"_positions\\\" [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\" [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\" (backdropClick)=\\\"close()\\\" (attach)=\\\"_onAttached()\\\" (detach)=\\\"close()\\\"><div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]><div #panel class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\" [ngClass]=\\\"panelClass\\\" [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\" (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [style.font-size.px]=\\\"_triggerFontSize\\\" (keydown)=\\\"_handleKeydown($event)\\\"><ng-content></ng-content></div></div></ng-template>\",\n                styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform .4s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}@media (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\"],\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n            },] },\n];\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger', { static: false },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: false },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup,] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger, { static: false },] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSelectModule, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectTrigger, MatSelect, matSelectAnimations, transformPanel, fadeInContent };\n//# sourceMappingURL=select.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.decorators = [\n    { type: Component, args: [{selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n                host: {\n                    'class': 'mat-table',\n                },\n                providers: [{ provide: CdkTable, useExisting: MatTable }],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            },] },\n];\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            },] },\n];\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            },] },\n];\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matColumnDef]',\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ],\n            },] },\n];\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }],\n    sticky: [{ type: Input }],\n    stickyEnd: [{ type: Input }]\n};\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader',\n                },\n            },] },\n];\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell',\n                },\n            },] },\n];\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell',\n                },\n            },] },\n];\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n            },] },\n];\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n            },] },\n];\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n            },] },\n];\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.decorators = [\n    { type: Component, args: [{selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n            },] },\n];\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.decorators = [\n    { type: Component, args: [{selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n            },] },\n];\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.decorators = [\n    { type: Component, args: [{selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.decorators = [\n    { type: Component, args: [{selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CdkTableModule,\n                    CommonModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTableModule, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, MatTable, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource, MatTextColumn };\n//# sourceMappingURL=table.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, Optional, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                },\n            },] },\n];\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: Directive, args: [{ selector: '[matTabContent]' },] },\n];\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.decorators = [\n    { type: Component, args: [{selector: 'mat-tab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                inputs: ['disabled'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab',\n            },] },\n];\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabBodyHost]'\n            },] },\n];\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] }\n];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-body-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-group-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color', 'disableRipple'],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-paginated-tab-header'\n            },] },\n];\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-header-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div #tabList class=\\\"mat-tab-list\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}\"],\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-nav-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.decorators = [\n    { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-links\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}\"],\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-link-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                    (/** @type {?} */ (\n                    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n                    MatPaginatedTabHeader)),\n                    (/** @type {?} */ (_MatTabGroupBase)),\n                    (/** @type {?} */ (_MatTabNavBase)),\n                    (/** @type {?} */ (_MatTabBodyBase)),\n                    (/** @type {?} */ (_MatTabHeaderBase)),\n                    (/** @type {?} */ (_MatTabLinkBase)),\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTabsModule, MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, _MatTabBodyBase, MatTabBodyPortal, MatTabHeader, _MatTabHeaderBase, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase, MatTabContent, MatTabChangeEvent, MAT_TABS_CONFIG, _MatTabGroupBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa24, MatPaginatedTabHeader as ɵb24 };\n//# sourceMappingURL=tabs.js.map\n","module.exports = \"\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    <h4>General Exam Info</h4>\\n    <button type=\\\"button\\\"\\n            *ngIf=\\\"!generalExamInfoEditMode\\\"\\n            (click)=\\\"generalExamInfoEditMode = true\\\"\\n            class=\\\"btn btn-outline-primary float-right\\\">\\n      <i class=\\\"far fa-edit\\\"></i> Edit\\n    </button>\\n    <button type=\\\"button\\\"\\n            *ngIf=\\\"generalExamInfoEditMode\\\"\\n            (click)=\\\"onSubmitExamGeneralInfo()\\\"\\n            class=\\\"btn btn-outline-success float-right\\\">\\n      <i class=\\\"far fa-save\\\"></i> Save\\n    </button>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n\\n    <form [formGroup]=\\\"examGeneralInfoForm\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-sm-6 form-field\\\"\\n             *ngFor=\\\"let property of examProperties; let i = index;\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-3\\\">\\n              <label>{{examProperties[i].toUpperCase()}}</label>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n              <p *ngIf=\\\"!generalExamInfoEditMode\\\">{{examGeneralInfoForm.get(property).value}}</p>\\n              <mat-form-field *ngIf=\\\"generalExamInfoEditMode && examPropertyTypes[i] !== 'date'\\\">\\n                <input matInput\\n                       [placeholder]=\\\"property.toUpperCase()\\\"\\n                       [formControl]=\\\"examGeneralInfoForm.get(property)\\\"\\n                       type=\\\"{{examPropertyTypes[i]}}\\\"\\n                >\\n                <mat-error *ngIf=\\\"!examGeneralInfoForm.get(property).valid\\\">This field required</mat-error>\\n              </mat-form-field>\\n              <mat-form-field *ngIf=\\\"examPropertyTypes[i] === 'date' && generalExamInfoEditMode\\\">\\n                <input matInput\\n                       [placeholder]=\\\"property.toUpperCase()\\\"\\n                       [matDatepicker]=\\\"picker\\\"\\n                       [formControl]=\\\"examGeneralInfoForm.get(property)\\\"\\n                >\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n                <mat-error *ngIf=\\\"!examGeneralInfoForm.get(property).valid\\\">This field required</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </form>\\n  </nb-card-body>\\n\\n</nb-card>\\n\\n\\n<nb-card>\\n  <nb-card-header>\\n    <h4>Subjects</h4>\\n    <button type=\\\"button\\\"\\n            (click)=\\\"onSubmitSubjects()\\\"\\n            class=\\\"btn btn-outline-success float-right\\\">\\n      <i class=\\\"far fa-save\\\"></i> Save\\n    </button>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n\\n    <div class=\\\"w-75 mx-auto\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <form [formGroup]=\\\"subjectsForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-3\\\" *ngFor=\\\"let property of subjectProperties; let i = index;\\\">\\n              <mat-form-field>\\n                <input matInput\\n                       [placeholder]=\\\"property.toUpperCase().replace('_', ' ')\\\"\\n                       [formControl]=\\\"subjectsForm.get(property)\\\"\\n                       type=\\\"{{subjectPropertyTypes[i]}}\\\"\\n                >\\n                <mat-error *ngIf=\\\"!subjectsForm.get(property).valid\\\">This field required</mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col-sm-3\\\">\\n              <button type=\\\"button\\\"\\n                      (click)=\\\"onSubmitNewSubject()\\\"\\n                      class=\\\"btn btn-outline-primary add-subject\\\">\\n                <i class=\\\"fas fa-plus\\\"></i> Add\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"table-responsive-sm mt-3\\\">\\n          <table class=\\\"table table-hover table-borderless\\\">\\n            <thead class=\\\"thead-light\\\">\\n            <th scope=\\\"col\\\" *ngFor=\\\"let property of subjectProperties\\\">{{property.toUpperCase().replace('_', ' ')}}</th>\\n            <th scope=\\\"col\\\">ACTION</th>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let subject of subjects\\\">\\n              <td *ngFor=\\\"let property of subjectProperties\\\">\\n                {{subject[property]}}\\n              </td>\\n              <td>\\n                <button type=\\\"button\\\"\\n                        (click)=\\\"removeSubject(subject)\\\"\\n                        class=\\\"btn btn-outline-danger my-auto\\\">\\n                  <i class=\\\"far fa-trash-alt\\\"></i>\\n                </button>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </nb-card-body>\\n\\n</nb-card>\\n\\n\\n<nb-card>\\n  <nb-card-header>\\n    <h4>Questions</h4>\\n    <button type=\\\"button\\\"\\n            (click)=\\\"onAddNewQuestion()\\\"\\n            class=\\\"btn btn-outline-primary add-subject float-right\\\">\\n      <i class=\\\"fas fa-plus\\\"></i> Add New\\n    </button>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n\\n    <mat-tab-group>\\n      <mat-tab *ngFor=\\\"let subject of subjects\\\" label=\\\"{{subject.name.toUpperCase()}}\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-sm-4\\\" *ngFor=\\\"let question of questions\\\">\\n            <nb-card>\\n              <nb-card-header>\\n                <h4 class=\\\"p-2 question-order\\\">{{question.order}}</h4>\\n                <button type=\\\"button\\\"\\n                        (click)=\\\"onQuestionDelete(question)\\\"\\n                        class=\\\"btn btn-outline-danger float-right\\\">\\n                  <i class=\\\"far fa-trash-alt\\\"></i> Delete\\n                </button>\\n                <button type=\\\"button\\\"\\n                        class=\\\"btn btn-outline-primary float-right mr-2\\\"\\n                        (click)=\\\"onQuestionEdit(question)\\\"\\n                        routerLink=\\\"/pages/exam/editor/question-editor\\\"\\n                        routerLinkActive=\\\"active\\\">\\n                  <i class=\\\"far fa-edit\\\"></i> Edit\\n                </button>\\n              </nb-card-header>\\n              <nb-card-body>{{question.body}}</nb-card-body>\\n              <nb-card-footer>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col option m-2 p-2\\\"\\n                       [ngClass]=\\\"{'': option.isTrue}\\\"\\n                       *ngFor=\\\"let option of question.options; let i = index\\\">\\n                    {{optionLabels[i] + option.body}}\\n                    <i *ngIf=\\\"option.isTrue\\\" class=\\\"fas fa-check-circle btn-outline-success ml-3\\\"></i>\\n                  </div>\\n                </div>\\n              </nb-card-footer>\\n            </nb-card>\\n          </div>\\n\\n        </div>\\n\\n      </mat-tab>\\n    </mat-tab-group>\\n  </nb-card-body>\\n</nb-card>\\n\"","module.exports = \"<nb-card>\\n  <div class=\\\"row m-3\\\">\\n    <div class=\\\"col-sm-9\\\">\\n\\n      <div class=\\\"row justify-content-end\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mt-3 mr-3\\\">Yeni Sual</button>\\n      </div>\\n\\n\\n      <div class=\\\"row my-3\\\">\\n        <div class=\\\"col-sm-8 p-0\\\">\\n          <div class=\\\"md-form\\\">\\n            <textarea type=\\\"text\\\" class=\\\"md-textarea form-control\\\" rows=\\\"8\\\" cols=\\\"14\\\"\\n              [(ngModel)]=\\\"question.body\\\"></textarea>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n          <select class=\\\"custom-select\\\" (change)=\\\"onChangeSubject()\\\">\\n            <option selected disabled>Subjects</option>\\n            <option *ngFor=\\\"let subject of exam.subjects\\\" [value]=\\\"subject\\\">{{subject.name}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"row mb-2\\\" *ngFor=\\\"let option of question.options; let i=index\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-squared-default btn-success\\\" (click)=\\\"correctOptionClick(i)\\\">\\n                  <i class=\\\"fas fa-check\\\"></i>\\n                </button>\\n              </div>\\n              <input type=\\\"text\\\" class=\\\"form-control col-sm-10\\\" placeholder=\\\"variant giriniz\\\" [(ngModel)]=\\\"option.body\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-squared-default btn-danger\\\" (click)=\\\"deleteOption(i)\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"newOption()\\\">Yeni Variant</button>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row justify-content-end\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success mt-3 mr-3\\\">Uygula</button>\\n      </div>\\n\\n      <div class=\\\"row justify-content-center\\\">\\n        <nav>\\n          <ul class=\\\"pagination pg-blue\\\">\\n            <li class=\\\"page-item disabled\\\">\\n              <a class=\\\"page-link\\\"><i class=\\\"fas fa-arrow-circle-left\\\"></i></a>\\n            </li>\\n\\n            <li class=\\\"page-item\\\" *ngIf=\\\"currentPage>1\\\"><a class=\\\"page-link\\\">{{currentPage-1}}</a></li>\\n            <li class=\\\"page-item active\\\"><a class=\\\"page-link\\\">{{currentPage}}</a></li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"currentPage<pages.length\\\"><a class=\\\"page-link\\\">{{currentPage+1}}</a></li>\\n\\n            <li class=\\\"page-item\\\">\\n              <a class=\\\"page-link\\\"><i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\n            </li>\\n          </ul>\\n        </nav>\\n      </div>\\n\\n\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <nb-accordion>\\n        <nb-accordion-item *ngFor=\\\"let subject of subjects\\\">\\n          <nb-accordion-item-header>\\n            {{subject.name}}\\n          </nb-accordion-item-header>\\n          <nb-accordion-item-body class=\\\"d-flex flex-wrap\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary rounded-button\\\"\\n              *ngFor=\\\"let item of getArr(subject.question_Count); let i=index\\\"\\n              (click)=\\\"goToQuestion(i+1)\\\">{{i+1}}</button>\\n          </nb-accordion-item-body>\\n        </nb-accordion-item>\\n      </nb-accordion>\\n    </div>\\n  </div>\\n</nb-card>\"","module.exports = \"<p>filter works!</p>\\n\"","module.exports = \"<p>question works!</p>\\n\"","module.exports = \"<p>subject works!</p>\\n\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    <h1>Exam Result</h1>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-sm-6 mt-2\\\">\\n        <span>NAME</span>\\n        <h3>{{examResult.name}}</h3>\\n      </div>\\n\\n      <div class=\\\"col-sm-6 mt-2\\\">\\n        <span>EXAM CODE</span>\\n        <h3>{{examResult.code}}</h3>\\n      </div>\\n\\n      <div class=\\\"col-sm-6 mt-2\\\">\\n        <span>CATEGORY</span>\\n        <h3>{{examResult.type}}</h3>\\n      </div>\\n\\n      <div class=\\\"col-sm-6 mt-2\\\">\\n        <span>DATE</span>\\n        <h3>{{examResult.date.getDate() + '.' + (examResult.date.getMonth() + 1) + '.' + examResult.date.getFullYear()}}</h3>\\n      </div>\\n\\n      <div class=\\\"col-sm-6 mt-2\\\">\\n        <span>TIME</span>\\n        <h3>{{examResult.date.getHours() + ' : ' + examResult.date.getMinutes()}}</h3>\\n      </div>\\n\\n      <div class=\\\"col-sm-6 mt-2\\\">\\n        <span>DURATION</span>\\n        <h3>{{examResult.duration}}</h3>\\n      </div>\\n\\n      <div class=\\\"col-sm-6 mt-2\\\">\\n        <span>SCORE</span>\\n        <h3>{{examResult.score + ' / ' + examResult.maxScore}}</h3>\\n      </div>\\n    </div>\\n  </nb-card-body>\\n</nb-card>\\n\\n<nb-card>\\n  <nb-card-body>\\n    <div class=\\\"today\\\">\\n      <span class=\\\"today-temperature h1\\\">SUMMARY</span>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2 d-flex flex-column justify-content-end align-items-end\\\">\\n        <span class=\\\"text-secondary text-center\\\">STATUS</span>\\n        <br>\\n        <h5 class=\\\"font-weight-light\\\">TOTAL</h5>\\n        <h5 class=\\\"font-weight-light text-success\\\">TRUE</h5>\\n        <h5 class=\\\"font-weight-light text-danger\\\">FALSE</h5>\\n        <h5 class=\\\"font-weight-light text-secondary\\\">BLANK</h5>\\n        <h5 class=\\\"font-weight-light text-info\\\">POINT</h5>\\n      </div>\\n      <div class=\\\"col d-flex flex-column justify-content-end align-items-center\\\">\\n        <i class=\\\"far fa-question-circle weather-icon\\\"></i>\\n        <i class=\\\"far fa-check-circle weather-icon text-success\\\"></i>\\n        <i class=\\\"far fa-times-circle weather-icon text-danger\\\"></i>\\n        <i class=\\\"far fa-eye-slash weather-icon text-secondary\\\"></i>\\n        <i class=\\\"fas fa-poll weather-icon text-info\\\"></i>\\n      </div>\\n      <div class=\\\"col d-flex flex-column justify-content-end align-items-center\\\"\\n           *ngFor=\\\"let subject of examResult.subjects\\\">\\n        <span class=\\\"text-secondary text-center\\\">{{subject.name.toUpperCase()}}</span>\\n        <br>\\n        <h5 class=\\\"font-weight-light\\\">{{subject.question_Count}}</h5>\\n        <h5 class=\\\"font-weight-light text-success\\\">{{subject.trueCount}}</h5>\\n        <h5 class=\\\"font-weight-light text-danger\\\">{{subject.falseCount}}</h5>\\n        <h5 class=\\\"font-weight-light text-secondary\\\">{{subject.blankCount}}</h5>\\n        <h5 class=\\\"font-weight-light text-info\\\">{{subject.score}}</h5>\\n      </div>\\n      <div class=\\\"col d-flex flex-column justify-content-end align-items-center\\\">\\n        <h6 class=\\\"text-secondary text-center\\\">TOTAL</h6>\\n        <br>\\n        <h5 >{{examResult.questionCount}}</h5>\\n        <h5 class=\\\"text-success\\\">{{examResult.trueCount}}</h5>\\n        <h5 class=\\\"text-danger\\\">{{examResult.falseCount}}</h5>\\n        <h5 class=\\\"text-secondary\\\">{{examResult.blankCount}}</h5>\\n        <h5 class=\\\"text-info border border-info rounded px-2\\\">{{examResult.score}}</h5>\\n      </div>\\n    </div>\\n\\n  </nb-card-body>\\n</nb-card>\\n\\n<nb-card *ngFor=\\\"let subject of examResult.subjects\\\">\\n  <nb-card-header>\\n    <h2>{{subject.name.toUpperCase()}}</h2>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <div class=\\\"row d-flex justify-content-start\\\">\\n      <div class=\\\"col-sm-2 d-flex flex-column justify-content-end align-items-end\\\">\\n        <h5 class=\\\"font-weight-light text-secondary text-center\\\">QUESTION</h5>\\n        <h5 class=\\\"font-weight-light text-success\\\">TRUE</h5>\\n        <h5 class=\\\"font-weight-light text-danger\\\">ANSWER</h5>\\n        <h5 class=\\\"font-weight-light text-info\\\">POINT</h5>\\n      </div>\\n      <div class=\\\"col question-check d-flex flex-column justify-content-end align-items-center\\\"\\n           *ngFor=\\\"let question of subject.questions\\\">\\n        <h5 class=\\\"font-weight-light text-secondary text-center\\\">{{question.order}}</h5>\\n        <h5 class=\\\"font-weight-light\\\">{{options[question.trueOption]}}</h5>\\n        <h5 class=\\\"font-weight-light text-danger\\\"\\n            [ngClass]=\\\"{'text-success': question.trueOption === question.answer, 'text-danger': question.trueOption !== question.answer}\\\">\\n          {{options[question.answer]}}\\n        </h5>\\n        <h5 class=\\\"font-weight-light text-info\\\">{{question.point}}</h5>\\n      </div>\\n    </div>\\n  </nb-card-body>\\n</nb-card>\\n\"","module.exports = \"<p>search works!</p>\\n\"","module.exports = \"<ngx-upcoming-exams></ngx-upcoming-exams>\\n<ngx-timeline></ngx-timeline>\\n\"","module.exports = \"<nb-card>\\n\\t<nb-card-body>\\n\\t\\t<div class = \\\"row\\\"\\n\\t\\t\\t\\t*ngFor = \\\"let i of [5,4,3,2,1]\\\">\\n\\t\\t\\t<div class = \\\"col-sm-5\\\">\\n\\t\\t\\t\\t<div class = \\\"float-right\\\"\\n\\t\\t\\t\\t\\t\\t*ngIf = \\\"i % 2 === 0\\\">\\n          <nb-card>Merhaba</nb-card>\\n        </div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class = \\\"col-sm-2\\\">\\n\\t\\t\\t\\t<div class = \\\"rod\\\"></div>\\n\\t\\t\\t\\t<div class = \\\"parent-circle center-wrapper\\\">\\n\\t\\t\\t\\t\\t<div class = \\\"chaild-circle rounded-circle border border-info center center-wrapper\\\">\\n\\t\\t\\t\\t\\t\\t<span class = \\\"center text-info text-center\\\">0{{i}} Dec 2019</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class = \\\"col-sm-5\\\">\\n\\t\\t\\t\\t<div class = \\\"float-left\\\"\\n\\t\\t\\t\\t\\t\\t*ngIf = \\\"i % 2 === 1\\\">\\n          <nb-card>Merhaba</nb-card>\\n        </div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</nb-card-body>\\n</nb-card>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <nb-list style=\\\"display: contents;\\\">\\n    <nb-list-item *ngFor=\\\"let i of [1,2,3]\\\">\\n      <nb-card size=\\\"medium\\\">\\n        <nb-card-header>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-9\\\">\\n              <h2 class=\\\"vertical-center\\\">Math</h2>\\n            </div>\\n            <div class=\\\"col-sm-3\\\">\\n              <nb-icon (click)=\\\"change()\\\"\\n                       icon=\\\"info-outline\\\"\\n                       pack=\\\"eva\\\"\\n                       class=\\\"info-icon\\\"></nb-icon>\\n            </div>\\n          </div>\\n        </nb-card-header>\\n\\n        <nb-card-body class=\\\"center-wrapper\\\">\\n          <img\\n            [ngClass]=\\\"{\\n\\t\\t\\t\\t\\t\\t\\t\\t'center': true,\\n\\t\\t\\t\\t\\t\\t\\t\\t'h-100': thisImg.width/thisImg.height > 1.625,\\n\\t\\t\\t\\t\\t\\t\\t\\t'w-100': thisImg.width/thisImg.height < 1.625\\n\\t\\t\\t\\t\\t\\t\\t}\\\"\\n            src=\\\"{{url}}\\\"\\n            #thisImg\\n          >\\n          <span class=\\\"date\\\">Yaygın inancın tersine, Lorem Ipsum rastgele sözcüklerden oluşmaz. Kökleri M.Ö. 45 tarihinden bu yana klasik Latin edebiyatına kadar uzanan 2000 yıllık bir geçmişi vardır. Virginia'daki Hampden-Sydney College'dan Latince profesörü Richard McClintock, bir Lorem Ipsum pasajında geçen ve anlaşılması en güç sözcüklerden biri olan 'consectetur' sözcüğünün klasik edebiyattaki örneklerini incelediğinde kesin bir kaynağa ulaşmıştır. Lorm Ipsum, Çiçero tarafından M.Ö. 45 tarihinde kaleme alınan \\\"de Finibus Bonorum et Malorum\\\" (İyi ve Kötünün Uç Sınırları) eserinin 1.10.32 ve 1.10.33 sayılı bölümlerinden gelmektedir. Bu kitap, ahlak kuramı üzerine bir tezdir ve Rönesans döneminde çok popüler olmuştur. Lorem Ipsum pasajının ilk satırı olan \\\"Lorem ipsum dolor sit amet\\\" 1.10.32 sayılı bölümdeki bir satırdan gelmektedir.</span>\\n        </nb-card-body>\\n\\n        <nb-card-footer>\\n          <div class=\\\"info-band\\\">\\n            <div class=\\\"info-item\\\">\\n              <span class=\\\"caption\\\">Time</span>\\n              <i class=\\\"info-band-icon fas fa-clock\\\"></i>\\n              <span>13:30</span>\\n            </div>\\n            <div class=\\\"info-item\\\">\\n              <span class=\\\"caption\\\">Date</span>\\n              <i class=\\\"info-band-icon fas fa-calendar-alt\\\"></i>\\n              <span>7 Dec</span>\\n            </div>\\n            <div class=\\\"info-item\\\">\\n              <span class=\\\"caption\\\">Duration</span>\\n              <i class=\\\"info-band-icon fas fa-hourglass-start\\\"></i>\\n              <span>60'</span>\\n            </div>\\n            <div class=\\\"info-item\\\">\\n              <span class=\\\"caption\\\">Price</span>\\n              <i class=\\\"info-band-icon fas fa-money-bill-alt\\\"></i>\\n              <span>3 ₼</span>\\n            </div>\\n            <div class=\\\"info-item\\\">\\n              <span class=\\\"caption\\\">Language</span>\\n              <i class=\\\"info-band-icon fas fa-globe\\\"></i>\\n              <span>AZ</span>\\n            </div>\\n          </div>\\n          <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col\\\">\\n              <i class=\\\"fas fa-user-edit text-success\\\"></i> | <i class=\\\"fas fa-school text-success\\\"></i>\\n              <span class=\\\"text-secondary owner\\\"> OWNER: </span> Emil Mammadov\\n            </div>\\n          </div>\\n          <br>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success w-100\\\">Register</button>\\n        </nb-card-footer>\\n      </nb-card>\\n    </nb-list-item>\\n  </nb-list>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <div class=\\\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\\\">\\n          <h2 class=\\\"title\\\">404 Page Not Found</h2>\\n          <small class=\\\"sub-title\\\">The page you were looking for doesn't exist</small>\\n          <button nbButton fullWidth (click)=\\\"goToHome()\\\" type=\\\"button\\\" class=\\\"home-button\\\">\\n            Take me home\\n          </button>\\n        </div>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    <h1>User Info</h1>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary float-right\\\">\\n      <i class=\\\"far fa-edit\\\"></i>Edit\\n    </button>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-3\\\">\\n        <img\\n          src=\\\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQgxcDdDfSCHVe815qM8zPJac-J8vCR003TrmCNKzrv3yAizv87\\\"\\n          alt=\\\"User photo\\\" class=\\\"w-100 my-3 rounded-circle\\\">\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-7\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">USERNAME</span>\\n          <h1>username</h1>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">NAME</span>\\n          <h1>Ilyas</h1>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">SURNAME</span>\\n          <h1>Ziyaoglu</h1>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">PHONE</span>\\n          <h1 class=\\\"text-info\\\">+90 506 110 74 43</h1>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">E-MAIL</span>\\n          <h3 class=\\\"text-info\\\">ilyasziyaoglu@gmail.com</h3>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">BIRTH DATE</span>\\n          <h1>07 Dec 1996</h1>\\n        </div>\\n      </div>\\n    </div>\\n    <br>\\n    <br>\\n    <br>\\n    <div class=\\\"row w-75 mx-auto\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <span class=\\\"text-secondary\\\">GENDER</span>\\n        <h1>Male</h1>\\n      </div>\\n    </div>\\n    <br>\\n    <br>\\n  </nb-card-body>\\n</nb-card>\\n\"","module.exports = \"<p>create works!</p>\\n\"","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    <h1>User Info</h1>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary float-right\\\">\\n      <i class=\\\"far fa-edit\\\"></i>Edit\\n    </button>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-3\\\">\\n        <img\\n          src=\\\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQgxcDdDfSCHVe815qM8zPJac-J8vCR003TrmCNKzrv3yAizv87\\\"\\n          alt=\\\"User photo\\\" class=\\\"w-100 my-3 rounded-circle\\\">\\n      </div>\\n      <div class=\\\"col-sm-1\\\"></div>\\n      <div class=\\\"col-sm-7\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">USERNAME</span>\\n          <h1>username</h1>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">NAME</span>\\n          <h1>Ilyas</h1>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">SURNAME</span>\\n          <h1>Ziyaoglu</h1>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">E-MAIL</span>\\n          <h3 class=\\\"text-info\\\">ilyasziyaoglu@gmail.com</h3>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <span class=\\\"text-secondary\\\">BIRTH DATE</span>\\n          <h1>07 Dec 1996</h1>\\n        </div>\\n      </div>\\n    </div>\\n    <br>\\n    <br>\\n    <br>\\n    <div class=\\\"row w-75 mx-auto\\\">\\n      <div class=\\\"col-sm-12 \\\">\\n        <h2>Lorem Ipsum Nedir?</h2>\\n        <br>\\n        <p class=\\\"text-justify\\\">\\n          Lorem Ipsum, dizgi ve baskı endüstrisinde kullanılan mıgır metinlerdir. Lorem Ipsum, adı bilinmeyen bir\\n          matbaacının bir hurufat numune kitabı oluşturmak üzere bir yazı galerisini alarak karıştırdığı 1500'lerden\\n          beri endüstri standardı sahte metinler olarak kullanılmıştır. Beşyüz yıl boyunca varlığını sürdürmekle\\n          kalmamış, aynı zamanda pek değişmeden elektronik dizgiye de sıçramıştır. 1960'larda Lorem Ipsum pasajları da\\n          içeren Letraset yapraklarının yayınlanması ile ve yakın zamanda Aldus PageMaker gibi Lorem Ipsum sürümleri\\n          içeren masaüstü yayıncılık yazılımları ile popüler olmuştur.</p>\\n      </div>\\n    </div>\\n    <br>\\n    <br>\\n  </nb-card-body>\\n</nb-card>\\n\"","module.exports = \"<p>edit works!</p>\\n\"","module.exports = \"<nb-card>\\n\\n  <nb-card-header>\\n    <h1>User Filter</h1>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"USERNAME\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"NAME\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"SURNAME\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"E-MAIL\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"CITY\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Teacher\\\">\\n            <mat-option *ngFor=\\\"let teacher of teachers\\\" [value]=\\\"teacher\\\">{{teacher}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n    </div>\\n  </nb-card-body>\\n\\n  <nb-card-footer>\\n    <button type=\\\"button\\\"\\n            class=\\\"btn btn-outline-primary float-right\\\"\\n    >\\n      <i class=\\\"fas fa-search\\\"></i> Search\\n    </button>\\n  </nb-card-footer>\\n</nb-card>\\n\\n\\n<nb-card>\\n  <nb-card-header>\\n    <h1 class=\\\"mb-0\\\">Users</h1>\\n  </nb-card-header>\\n  <!-- Table -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table align-items-center table-flush\\\">\\n            <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">USER</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">SUBJECT</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">SUBJECT</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">SUBJECT</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">CLASS</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let i of [1,2,3,4,5,6]\\\">\\n              <th scope=\\\"row\\\">\\n                <div class=\\\"media align-items-center text-center\\\">\\n                  <img class=\\\"avatar rounded-circle mr-3\\\" height=\\\"32\\\" alt=\\\"Image placeholder\\\"\\n                       src=\\\"https://i7.pngguru.com/preview/826/491/736/user-computer-icons-gravatar-blog-happy-woman.jpg\\\">\\n                  <div class=\\\"media-body\\\">\\n                    <h6 class=\\\"mb-0 text-sm\\\">Name Surname</h6>\\n                  </div>\\n                </div>\\n              </th>\\n              <td>\\n                <h6 class=\\\"text-center\\\">Math</h6>\\n              </td>\\n              <td>\\n                <h6 class=\\\"text-center\\\">Math</h6>\\n              </td>\\n              <td>\\n                <h6 class=\\\"text-center\\\">Math</h6>\\n              </td>\\n              <td class=\\\"text-center\\\">\\n                A\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"card-footer py-4\\\">\\n          <nav aria-label=\\\"...\\\">\\n            <ul class=\\\"pagination justify-content-end mb-0\\\">\\n              <li class=\\\"page-item disabled\\\">\\n                <a class=\\\"page-link\\\" href=\\\"javascript:void(0)\\\" tabindex=\\\"-1\\\">\\n                  <i class=\\\"fas fa-angle-left\\\"></i>\\n                  <span class=\\\"sr-only\\\">Previous</span>\\n                </a>\\n              </li>\\n              <li class=\\\"page-item active\\\">\\n                <a class=\\\"page-link\\\" href=\\\"javascript:void(0)\\\">1</a>\\n              </li>\\n              <li class=\\\"page-item\\\">\\n                <a class=\\\"page-link\\\" href=\\\"javascript:void(0)\\\">2 <span class=\\\"sr-only\\\">(current)</span></a>\\n              </li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"javascript:void(0)\\\">3</a></li>\\n              <li class=\\\"page-item\\\">\\n                <a class=\\\"page-link\\\" href=\\\"javascript:void(0)\\\">\\n                  <i class=\\\"fas fa-angle-right\\\"></i>\\n                  <span class=\\\"sr-only\\\">Next</span>\\n                </a>\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</nb-card>\\n\"","export { BehaviorSubject } from 'rxjs';\n//# sourceMappingURL=BehaviorSubject.js.map","/*!\n* sweetalert2 v9.4.2\n* Released under the MIT License.\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Sweetalert2 = factory());\n}(this, (function () { 'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nvar consolePrefix = 'SweetAlert2:';\n/**\n * Filter the unique values into a new array\n * @param arr\n */\n\nvar uniqueArray = function uniqueArray(arr) {\n  var result = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (result.indexOf(arr[i]) === -1) {\n      result.push(arr[i]);\n    }\n  }\n\n  return result;\n};\n/**\n * Capitalize the first letter of a string\n * @param str\n */\n\nvar capitalizeFirstLetter = function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n/**\n * Returns the array ob object values (Object.values isn't supported in IE11)\n * @param obj\n */\n\nvar objectValues = function objectValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n};\n/**\n * Convert NodeList to Array\n * @param nodeList\n */\n\nvar toArray = function toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n};\n/**\n * Standardise console warnings\n * @param message\n */\n\nvar warn = function warn(message) {\n  console.warn(\"\".concat(consolePrefix, \" \").concat(message));\n};\n/**\n * Standardise console errors\n * @param message\n */\n\nvar error = function error(message) {\n  console.error(\"\".concat(consolePrefix, \" \").concat(message));\n};\n/**\n * Private global state for `warnOnce`\n * @type {Array}\n * @private\n */\n\nvar previousWarnOnceMessages = [];\n/**\n * Show a console warning, but only if it hasn't already been shown\n * @param message\n */\n\nvar warnOnce = function warnOnce(message) {\n  if (!(previousWarnOnceMessages.indexOf(message) !== -1)) {\n    previousWarnOnceMessages.push(message);\n    warn(message);\n  }\n};\n/**\n * Show a one-time console warning about deprecated params/methods\n */\n\nvar warnAboutDepreation = function warnAboutDepreation(deprecatedParam, useInstead) {\n  warnOnce(\"\\\"\".concat(deprecatedParam, \"\\\" is deprecated and will be removed in the next major release. Please use \\\"\").concat(useInstead, \"\\\" instead.\"));\n};\n/**\n * If `arg` is a function, call it (with no arguments or context) and return the result.\n * Otherwise, just pass the value through\n * @param arg\n */\n\nvar callIfFunction = function callIfFunction(arg) {\n  return typeof arg === 'function' ? arg() : arg;\n};\nvar isPromise = function isPromise(arg) {\n  return arg && Promise.resolve(arg) === arg;\n};\n\nvar DismissReason = Object.freeze({\n  cancel: 'cancel',\n  backdrop: 'backdrop',\n  close: 'close',\n  esc: 'esc',\n  timer: 'timer'\n});\n\nvar isJqueryElement = function isJqueryElement(elem) {\n  return _typeof(elem) === 'object' && elem.jquery;\n};\n\nvar isElement = function isElement(elem) {\n  return elem instanceof Element || isJqueryElement(elem);\n};\n\nvar argsToParams = function argsToParams(args) {\n  var params = {};\n\n  if (_typeof(args[0]) === 'object' && !isElement(args[0])) {\n    _extends(params, args[0]);\n  } else {\n    ['title', 'html', 'icon'].forEach(function (name, index) {\n      var arg = args[index];\n\n      if (typeof arg === 'string' || isElement(arg)) {\n        params[name] = arg;\n      } else if (arg !== undefined) {\n        error(\"Unexpected type of \".concat(name, \"! Expected \\\"string\\\" or \\\"Element\\\", got \").concat(_typeof(arg)));\n      }\n    });\n  }\n\n  return params;\n};\n\nvar swalPrefix = 'swal2-';\nvar prefix = function prefix(items) {\n  var result = {};\n\n  for (var i in items) {\n    result[items[i]] = swalPrefix + items[i];\n  }\n\n  return result;\n};\nvar swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'toast', 'toast-shown', 'toast-column', 'show', 'hide', 'close', 'title', 'header', 'content', 'html-container', 'actions', 'confirm', 'cancel', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'scrollbar-measure']);\nvar iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\nvar getContainer = function getContainer() {\n  return document.body.querySelector(\".\".concat(swalClasses.container));\n};\nvar elementBySelector = function elementBySelector(selectorString) {\n  var container = getContainer();\n  return container ? container.querySelector(selectorString) : null;\n};\n\nvar elementByClass = function elementByClass(className) {\n  return elementBySelector(\".\".concat(className));\n};\n\nvar getPopup = function getPopup() {\n  return elementByClass(swalClasses.popup);\n};\nvar getIcons = function getIcons() {\n  var popup = getPopup();\n  return toArray(popup.querySelectorAll(\".\".concat(swalClasses.icon)));\n};\nvar getIcon = function getIcon() {\n  var visibleIcon = getIcons().filter(function (icon) {\n    return isVisible(icon);\n  });\n  return visibleIcon.length ? visibleIcon[0] : null;\n};\nvar getTitle = function getTitle() {\n  return elementByClass(swalClasses.title);\n};\nvar getContent = function getContent() {\n  return elementByClass(swalClasses.content);\n};\nvar getHtmlContainer = function getHtmlContainer() {\n  return elementByClass(swalClasses['html-container']);\n};\nvar getImage = function getImage() {\n  return elementByClass(swalClasses.image);\n};\nvar getProgressSteps = function getProgressSteps() {\n  return elementByClass(swalClasses['progress-steps']);\n};\nvar getValidationMessage = function getValidationMessage() {\n  return elementByClass(swalClasses['validation-message']);\n};\nvar getConfirmButton = function getConfirmButton() {\n  return elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.confirm));\n};\nvar getCancelButton = function getCancelButton() {\n  return elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.cancel));\n};\nvar getActions = function getActions() {\n  return elementByClass(swalClasses.actions);\n};\nvar getHeader = function getHeader() {\n  return elementByClass(swalClasses.header);\n};\nvar getFooter = function getFooter() {\n  return elementByClass(swalClasses.footer);\n};\nvar getTimerProgressBar = function getTimerProgressBar() {\n  return elementByClass(swalClasses['timer-progress-bar']);\n};\nvar getCloseButton = function getCloseButton() {\n  return elementByClass(swalClasses.close);\n}; // https://github.com/jkup/focusable/blob/master/index.js\n\nvar focusable = \"\\n  a[href],\\n  area[href],\\n  input:not([disabled]),\\n  select:not([disabled]),\\n  textarea:not([disabled]),\\n  button:not([disabled]),\\n  iframe,\\n  object,\\n  embed,\\n  [tabindex=\\\"0\\\"],\\n  [contenteditable],\\n  audio[controls],\\n  video[controls],\\n  summary\\n\";\nvar getFocusableElements = function getFocusableElements() {\n  var focusableElementsWithTabindex = toArray(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])')) // sort according to tabindex\n  .sort(function (a, b) {\n    a = parseInt(a.getAttribute('tabindex'));\n    b = parseInt(b.getAttribute('tabindex'));\n\n    if (a > b) {\n      return 1;\n    } else if (a < b) {\n      return -1;\n    }\n\n    return 0;\n  });\n  var otherFocusableElements = toArray(getPopup().querySelectorAll(focusable)).filter(function (el) {\n    return el.getAttribute('tabindex') !== '-1';\n  });\n  return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(function (el) {\n    return isVisible(el);\n  });\n};\nvar isModal = function isModal() {\n  return !isToast() && !document.body.classList.contains(swalClasses['no-backdrop']);\n};\nvar isToast = function isToast() {\n  return document.body.classList.contains(swalClasses['toast-shown']);\n};\nvar isLoading = function isLoading() {\n  return getPopup().hasAttribute('data-loading');\n};\n\nvar states = {\n  previousBodyPadding: null\n};\nvar hasClass = function hasClass(elem, className) {\n  if (!className) {\n    return false;\n  }\n\n  var classList = className.split(/\\s+/);\n\n  for (var i = 0; i < classList.length; i++) {\n    if (!elem.classList.contains(classList[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar removeCustomClasses = function removeCustomClasses(elem, params) {\n  toArray(elem.classList).forEach(function (className) {\n    if (!(objectValues(swalClasses).indexOf(className) !== -1) && !(objectValues(iconTypes).indexOf(className) !== -1) && !(objectValues(params.showClass).indexOf(className) !== -1)) {\n      elem.classList.remove(className);\n    }\n  });\n};\n\nvar applyCustomClass = function applyCustomClass(elem, params, className) {\n  removeCustomClasses(elem, params);\n\n  if (params.customClass && params.customClass[className]) {\n    if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n      return warn(\"Invalid type of customClass.\".concat(className, \"! Expected string or iterable object, got \\\"\").concat(_typeof(params.customClass[className]), \"\\\"\"));\n    }\n\n    addClass(elem, params.customClass[className]);\n  }\n};\nfunction getInput(content, inputType) {\n  if (!inputType) {\n    return null;\n  }\n\n  switch (inputType) {\n    case 'select':\n    case 'textarea':\n    case 'file':\n      return getChildByClass(content, swalClasses[inputType]);\n\n    case 'checkbox':\n      return content.querySelector(\".\".concat(swalClasses.checkbox, \" input\"));\n\n    case 'radio':\n      return content.querySelector(\".\".concat(swalClasses.radio, \" input:checked\")) || content.querySelector(\".\".concat(swalClasses.radio, \" input:first-child\"));\n\n    case 'range':\n      return content.querySelector(\".\".concat(swalClasses.range, \" input\"));\n\n    default:\n      return getChildByClass(content, swalClasses.input);\n  }\n}\nvar focusInput = function focusInput(input) {\n  input.focus(); // place cursor at end of text in text input\n\n  if (input.type !== 'file') {\n    // http://stackoverflow.com/a/2345915\n    var val = input.value;\n    input.value = '';\n    input.value = val;\n  }\n};\nvar toggleClass = function toggleClass(target, classList, condition) {\n  if (!target || !classList) {\n    return;\n  }\n\n  if (typeof classList === 'string') {\n    classList = classList.split(/\\s+/).filter(Boolean);\n  }\n\n  classList.forEach(function (className) {\n    if (target.forEach) {\n      target.forEach(function (elem) {\n        condition ? elem.classList.add(className) : elem.classList.remove(className);\n      });\n    } else {\n      condition ? target.classList.add(className) : target.classList.remove(className);\n    }\n  });\n};\nvar addClass = function addClass(target, classList) {\n  toggleClass(target, classList, true);\n};\nvar removeClass = function removeClass(target, classList) {\n  toggleClass(target, classList, false);\n};\nvar getChildByClass = function getChildByClass(elem, className) {\n  for (var i = 0; i < elem.childNodes.length; i++) {\n    if (hasClass(elem.childNodes[i], className)) {\n      return elem.childNodes[i];\n    }\n  }\n};\nvar applyNumericalStyle = function applyNumericalStyle(elem, property, value) {\n  if (value || parseInt(value) === 0) {\n    elem.style[property] = typeof value === 'number' ? \"\".concat(value, \"px\") : value;\n  } else {\n    elem.style.removeProperty(property);\n  }\n};\nvar show = function show(elem) {\n  var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n  elem.style.opacity = '';\n  elem.style.display = display;\n};\nvar hide = function hide(elem) {\n  elem.style.opacity = '';\n  elem.style.display = 'none';\n};\nvar toggle = function toggle(elem, condition, display) {\n  condition ? show(elem, display) : hide(elem);\n}; // borrowed from jquery $(elem).is(':visible') implementation\n\nvar isVisible = function isVisible(elem) {\n  return !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n};\n/* istanbul ignore next */\n\nvar isScrollable = function isScrollable(elem) {\n  return !!(elem.scrollHeight > elem.clientHeight);\n}; // borrowed from https://stackoverflow.com/a/46352119\n\nvar hasCssAnimation = function hasCssAnimation(elem) {\n  var style = window.getComputedStyle(elem);\n  var animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n  var transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n  return animDuration > 0 || transDuration > 0;\n};\nvar contains = function contains(haystack, needle) {\n  if (typeof haystack.contains === 'function') {\n    return haystack.contains(needle);\n  }\n};\nvar animateTimerProgressBar = function animateTimerProgressBar(timer) {\n  var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var timerProgressBar = getTimerProgressBar();\n\n  if (isVisible(timerProgressBar)) {\n    if (reset) {\n      timerProgressBar.style.transition = 'none';\n      timerProgressBar.style.width = '100%';\n    }\n\n    setTimeout(function () {\n      timerProgressBar.style.transition = \"width \".concat(timer / 1000, \"s linear\");\n      timerProgressBar.style.width = '0%';\n    }, 10);\n  }\n};\nvar stopTimerProgressBar = function stopTimerProgressBar() {\n  var timerProgressBar = getTimerProgressBar();\n  var timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n  timerProgressBar.style.removeProperty('transition');\n  timerProgressBar.style.width = '100%';\n  var timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n  var timerProgressBarPercent = parseInt(timerProgressBarWidth / timerProgressBarFullWidth * 100);\n  timerProgressBar.style.removeProperty('transition');\n  timerProgressBar.style.width = \"\".concat(timerProgressBarPercent, \"%\");\n};\n\n// Detect Node env\nvar isNodeEnv = function isNodeEnv() {\n  return typeof window === 'undefined' || typeof document === 'undefined';\n};\n\nvar sweetHTML = \"\\n <div aria-labelledby=\\\"\".concat(swalClasses.title, \"\\\" aria-describedby=\\\"\").concat(swalClasses.content, \"\\\" class=\\\"\").concat(swalClasses.popup, \"\\\" tabindex=\\\"-1\\\">\\n   <div class=\\\"\").concat(swalClasses.header, \"\\\">\\n     <ul class=\\\"\").concat(swalClasses['progress-steps'], \"\\\"></ul>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.error, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.question, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.warning, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.info, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.success, \"\\\"></div>\\n     <img class=\\\"\").concat(swalClasses.image, \"\\\" />\\n     <h2 class=\\\"\").concat(swalClasses.title, \"\\\" id=\\\"\").concat(swalClasses.title, \"\\\"></h2>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.close, \"\\\"></button>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.content, \"\\\">\\n     <div id=\\\"\").concat(swalClasses.content, \"\\\" class=\\\"\").concat(swalClasses['html-container'], \"\\\"></div>\\n     <input class=\\\"\").concat(swalClasses.input, \"\\\" />\\n     <input type=\\\"file\\\" class=\\\"\").concat(swalClasses.file, \"\\\" />\\n     <div class=\\\"\").concat(swalClasses.range, \"\\\">\\n       <input type=\\\"range\\\" />\\n       <output></output>\\n     </div>\\n     <select class=\\\"\").concat(swalClasses.select, \"\\\"></select>\\n     <div class=\\\"\").concat(swalClasses.radio, \"\\\"></div>\\n     <label for=\\\"\").concat(swalClasses.checkbox, \"\\\" class=\\\"\").concat(swalClasses.checkbox, \"\\\">\\n       <input type=\\\"checkbox\\\" />\\n       <span class=\\\"\").concat(swalClasses.label, \"\\\"></span>\\n     </label>\\n     <textarea class=\\\"\").concat(swalClasses.textarea, \"\\\"></textarea>\\n     <div class=\\\"\").concat(swalClasses['validation-message'], \"\\\" id=\\\"\").concat(swalClasses['validation-message'], \"\\\"></div>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.actions, \"\\\">\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.confirm, \"\\\">OK</button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.cancel, \"\\\">Cancel</button>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.footer, \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses['timer-progress-bar'], \"\\\"></div>\\n </div>\\n\").replace(/(^|\\n)\\s*/g, '');\n\nvar resetOldContainer = function resetOldContainer() {\n  var oldContainer = getContainer();\n\n  if (!oldContainer) {\n    return;\n  }\n\n  oldContainer.parentNode.removeChild(oldContainer);\n  removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n};\n\nvar oldInputVal; // IE11 workaround, see #1109 for details\n\nvar resetValidationMessage = function resetValidationMessage(e) {\n  if (Swal.isVisible() && oldInputVal !== e.target.value) {\n    Swal.resetValidationMessage();\n  }\n\n  oldInputVal = e.target.value;\n};\n\nvar addInputChangeListeners = function addInputChangeListeners() {\n  var content = getContent();\n  var input = getChildByClass(content, swalClasses.input);\n  var file = getChildByClass(content, swalClasses.file);\n  var range = content.querySelector(\".\".concat(swalClasses.range, \" input\"));\n  var rangeOutput = content.querySelector(\".\".concat(swalClasses.range, \" output\"));\n  var select = getChildByClass(content, swalClasses.select);\n  var checkbox = content.querySelector(\".\".concat(swalClasses.checkbox, \" input\"));\n  var textarea = getChildByClass(content, swalClasses.textarea);\n  input.oninput = resetValidationMessage;\n  file.onchange = resetValidationMessage;\n  select.onchange = resetValidationMessage;\n  checkbox.onchange = resetValidationMessage;\n  textarea.oninput = resetValidationMessage;\n\n  range.oninput = function (e) {\n    resetValidationMessage(e);\n    rangeOutput.value = range.value;\n  };\n\n  range.onchange = function (e) {\n    resetValidationMessage(e);\n    range.nextSibling.value = range.value;\n  };\n};\n\nvar getTarget = function getTarget(target) {\n  return typeof target === 'string' ? document.querySelector(target) : target;\n};\n\nvar setupAccessibility = function setupAccessibility(params) {\n  var popup = getPopup();\n  popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n  popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n\n  if (!params.toast) {\n    popup.setAttribute('aria-modal', 'true');\n  }\n};\n\nvar setupRTL = function setupRTL(targetElement) {\n  if (window.getComputedStyle(targetElement).direction === 'rtl') {\n    addClass(getContainer(), swalClasses.rtl);\n  }\n};\n/*\n * Add modal + backdrop to DOM\n */\n\n\nvar init = function init(params) {\n  // Clean up the old popup container if it exists\n  resetOldContainer();\n  /* istanbul ignore if */\n\n  if (isNodeEnv()) {\n    error('SweetAlert2 requires document to initialize');\n    return;\n  }\n\n  var container = document.createElement('div');\n  container.className = swalClasses.container;\n  container.innerHTML = sweetHTML;\n  var targetElement = getTarget(params.target);\n  targetElement.appendChild(container);\n  setupAccessibility(params);\n  setupRTL(targetElement);\n  addInputChangeListeners();\n};\n\nvar parseHtmlToContainer = function parseHtmlToContainer(param, target) {\n  // DOM element\n  if (param instanceof HTMLElement) {\n    target.appendChild(param); // JQuery element(s)\n  } else if (_typeof(param) === 'object') {\n    handleJqueryElem(target, param); // Plain string\n  } else if (param) {\n    target.innerHTML = param;\n  }\n};\n\nvar handleJqueryElem = function handleJqueryElem(target, elem) {\n  target.innerHTML = '';\n\n  if (0 in elem) {\n    for (var i = 0; i in elem; i++) {\n      target.appendChild(elem[i].cloneNode(true));\n    }\n  } else {\n    target.appendChild(elem.cloneNode(true));\n  }\n};\n\nvar animationEndEvent = function () {\n  // Prevent run in Node env\n\n  /* istanbul ignore if */\n  if (isNodeEnv()) {\n    return false;\n  }\n\n  var testEl = document.createElement('div');\n  var transEndEventNames = {\n    WebkitAnimation: 'webkitAnimationEnd',\n    OAnimation: 'oAnimationEnd oanimationend',\n    animation: 'animationend'\n  };\n\n  for (var i in transEndEventNames) {\n    if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n      return transEndEventNames[i];\n    }\n  }\n\n  return false;\n}();\n\n// https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n\nvar measureScrollbar = function measureScrollbar() {\n  var scrollDiv = document.createElement('div');\n  scrollDiv.className = swalClasses['scrollbar-measure'];\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n};\n\nvar renderActions = function renderActions(instance, params) {\n  var actions = getActions();\n  var confirmButton = getConfirmButton();\n  var cancelButton = getCancelButton(); // Actions (buttons) wrapper\n\n  if (!params.showConfirmButton && !params.showCancelButton) {\n    hide(actions);\n  } // Custom class\n\n\n  applyCustomClass(actions, params, 'actions'); // Render confirm button\n\n  renderButton(confirmButton, 'confirm', params); // render Cancel Button\n\n  renderButton(cancelButton, 'cancel', params);\n\n  if (params.buttonsStyling) {\n    handleButtonsStyling(confirmButton, cancelButton, params);\n  } else {\n    removeClass([confirmButton, cancelButton], swalClasses.styled);\n    confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = '';\n    cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = '';\n  }\n\n  if (params.reverseButtons) {\n    confirmButton.parentNode.insertBefore(cancelButton, confirmButton);\n  }\n};\n\nfunction handleButtonsStyling(confirmButton, cancelButton, params) {\n  addClass([confirmButton, cancelButton], swalClasses.styled); // Buttons background colors\n\n  if (params.confirmButtonColor) {\n    confirmButton.style.backgroundColor = params.confirmButtonColor;\n  }\n\n  if (params.cancelButtonColor) {\n    cancelButton.style.backgroundColor = params.cancelButtonColor;\n  } // Loading state\n\n\n  var confirmButtonBackgroundColor = window.getComputedStyle(confirmButton).getPropertyValue('background-color');\n  confirmButton.style.borderLeftColor = confirmButtonBackgroundColor;\n  confirmButton.style.borderRightColor = confirmButtonBackgroundColor;\n}\n\nfunction renderButton(button, buttonType, params) {\n  toggle(button, params[\"show\".concat(capitalizeFirstLetter(buttonType), \"Button\")], 'inline-block');\n  button.innerHTML = params[\"\".concat(buttonType, \"ButtonText\")]; // Set caption text\n\n  button.setAttribute('aria-label', params[\"\".concat(buttonType, \"ButtonAriaLabel\")]); // ARIA label\n  // Add buttons custom classes\n\n  button.className = swalClasses[buttonType];\n  applyCustomClass(button, params, \"\".concat(buttonType, \"Button\"));\n  addClass(button, params[\"\".concat(buttonType, \"ButtonClass\")]);\n}\n\nfunction handleBackdropParam(container, backdrop) {\n  if (typeof backdrop === 'string') {\n    container.style.background = backdrop;\n  } else if (!backdrop) {\n    addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n  }\n}\n\nfunction handlePositionParam(container, position) {\n  if (position in swalClasses) {\n    addClass(container, swalClasses[position]);\n  } else {\n    warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n    addClass(container, swalClasses.center);\n  }\n}\n\nfunction handleGrowParam(container, grow) {\n  if (grow && typeof grow === 'string') {\n    var growClass = \"grow-\".concat(grow);\n\n    if (growClass in swalClasses) {\n      addClass(container, swalClasses[growClass]);\n    }\n  }\n}\n\nvar renderContainer = function renderContainer(instance, params) {\n  var container = getContainer();\n\n  if (!container) {\n    return;\n  }\n\n  handleBackdropParam(container, params.backdrop);\n\n  if (!params.backdrop && params.allowOutsideClick) {\n    warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n  }\n\n  handlePositionParam(container, params.position);\n  handleGrowParam(container, params.grow); // Custom class\n\n  applyCustomClass(container, params, 'container'); // Set queue step attribute for getQueueStep() method\n\n  var queueStep = document.body.getAttribute('data-swal2-queue-step');\n\n  if (queueStep) {\n    container.setAttribute('data-queue-step', queueStep);\n    document.body.removeAttribute('data-swal2-queue-step');\n  }\n};\n\n/**\n * This module containts `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\nvar privateProps = {\n  promise: new WeakMap(),\n  innerParams: new WeakMap(),\n  domCache: new WeakMap()\n};\n\nvar inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\nvar renderInput = function renderInput(instance, params) {\n  var content = getContent();\n  var innerParams = privateProps.innerParams.get(instance);\n  var rerender = !innerParams || params.input !== innerParams.input;\n  inputTypes.forEach(function (inputType) {\n    var inputClass = swalClasses[inputType];\n    var inputContainer = getChildByClass(content, inputClass); // set attributes\n\n    setAttributes(inputType, params.inputAttributes); // set class\n\n    inputContainer.className = inputClass;\n\n    if (rerender) {\n      hide(inputContainer);\n    }\n  });\n\n  if (params.input) {\n    if (rerender) {\n      showInput(params);\n    } // set custom class\n\n\n    setCustomClass(params);\n  }\n};\n\nvar showInput = function showInput(params) {\n  if (!renderInputType[params.input]) {\n    return error(\"Unexpected type of input! Expected \\\"text\\\", \\\"email\\\", \\\"password\\\", \\\"number\\\", \\\"tel\\\", \\\"select\\\", \\\"radio\\\", \\\"checkbox\\\", \\\"textarea\\\", \\\"file\\\" or \\\"url\\\", got \\\"\".concat(params.input, \"\\\"\"));\n  }\n\n  var inputContainer = getInputContainer(params.input);\n  var input = renderInputType[params.input](inputContainer, params);\n  show(input); // input autofocus\n\n  setTimeout(function () {\n    focusInput(input);\n  });\n};\n\nvar removeAttributes = function removeAttributes(input) {\n  for (var i = 0; i < input.attributes.length; i++) {\n    var attrName = input.attributes[i].name;\n\n    if (!(['type', 'value', 'style'].indexOf(attrName) !== -1)) {\n      input.removeAttribute(attrName);\n    }\n  }\n};\n\nvar setAttributes = function setAttributes(inputType, inputAttributes) {\n  var input = getInput(getContent(), inputType);\n\n  if (!input) {\n    return;\n  }\n\n  removeAttributes(input);\n\n  for (var attr in inputAttributes) {\n    // Do not set a placeholder for <input type=\"range\">\n    // it'll crash Edge, #1298\n    if (inputType === 'range' && attr === 'placeholder') {\n      continue;\n    }\n\n    input.setAttribute(attr, inputAttributes[attr]);\n  }\n};\n\nvar setCustomClass = function setCustomClass(params) {\n  var inputContainer = getInputContainer(params.input);\n\n  if (params.customClass) {\n    addClass(inputContainer, params.customClass.input);\n  }\n};\n\nvar setInputPlaceholder = function setInputPlaceholder(input, params) {\n  if (!input.placeholder || params.inputPlaceholder) {\n    input.placeholder = params.inputPlaceholder;\n  }\n};\n\nvar getInputContainer = function getInputContainer(inputType) {\n  var inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input;\n  return getChildByClass(getContent(), inputClass);\n};\n\nvar renderInputType = {};\n\nrenderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = function (input, params) {\n  if (typeof params.inputValue === 'string' || typeof params.inputValue === 'number') {\n    input.value = params.inputValue;\n  } else if (!isPromise(params.inputValue)) {\n    warn(\"Unexpected type of inputValue! Expected \\\"string\\\", \\\"number\\\" or \\\"Promise\\\", got \\\"\".concat(_typeof(params.inputValue), \"\\\"\"));\n  }\n\n  setInputPlaceholder(input, params);\n  input.type = params.input;\n  return input;\n};\n\nrenderInputType.file = function (input, params) {\n  setInputPlaceholder(input, params);\n  return input;\n};\n\nrenderInputType.range = function (range, params) {\n  var rangeInput = range.querySelector('input');\n  var rangeOutput = range.querySelector('output');\n  rangeInput.value = params.inputValue;\n  rangeInput.type = params.input;\n  rangeOutput.value = params.inputValue;\n  return range;\n};\n\nrenderInputType.select = function (select, params) {\n  select.innerHTML = '';\n\n  if (params.inputPlaceholder) {\n    var placeholder = document.createElement('option');\n    placeholder.innerHTML = params.inputPlaceholder;\n    placeholder.value = '';\n    placeholder.disabled = true;\n    placeholder.selected = true;\n    select.appendChild(placeholder);\n  }\n\n  return select;\n};\n\nrenderInputType.radio = function (radio) {\n  radio.innerHTML = '';\n  return radio;\n};\n\nrenderInputType.checkbox = function (checkboxContainer, params) {\n  var checkbox = getInput(getContent(), 'checkbox');\n  checkbox.value = 1;\n  checkbox.id = swalClasses.checkbox;\n  checkbox.checked = Boolean(params.inputValue);\n  var label = checkboxContainer.querySelector('span');\n  label.innerHTML = params.inputPlaceholder;\n  return checkboxContainer;\n};\n\nrenderInputType.textarea = function (textarea, params) {\n  textarea.value = params.inputValue;\n  setInputPlaceholder(textarea, params);\n\n  if ('MutationObserver' in window) {\n    // #1699\n    var initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n    var popupPadding = parseInt(window.getComputedStyle(getPopup()).paddingLeft) + parseInt(window.getComputedStyle(getPopup()).paddingRight);\n\n    var outputsize = function outputsize() {\n      var contentWidth = textarea.offsetWidth + popupPadding;\n\n      if (contentWidth > initialPopupWidth) {\n        getPopup().style.width = \"\".concat(contentWidth, \"px\");\n      } else {\n        getPopup().style.width = null;\n      }\n    };\n\n    new MutationObserver(outputsize).observe(textarea, {\n      attributes: true,\n      attributeFilter: ['style']\n    });\n  }\n\n  return textarea;\n};\n\nvar renderContent = function renderContent(instance, params) {\n  var content = getContent().querySelector(\"#\".concat(swalClasses.content)); // Content as HTML\n\n  if (params.html) {\n    parseHtmlToContainer(params.html, content);\n    show(content, 'block'); // Content as plain text\n  } else if (params.text) {\n    content.textContent = params.text;\n    show(content, 'block'); // No content\n  } else {\n    hide(content);\n  }\n\n  renderInput(instance, params); // Custom class\n\n  applyCustomClass(getContent(), params, 'content');\n};\n\nvar renderFooter = function renderFooter(instance, params) {\n  var footer = getFooter();\n  toggle(footer, params.footer);\n\n  if (params.footer) {\n    parseHtmlToContainer(params.footer, footer);\n  } // Custom class\n\n\n  applyCustomClass(footer, params, 'footer');\n};\n\nvar renderCloseButton = function renderCloseButton(instance, params) {\n  var closeButton = getCloseButton();\n  closeButton.innerHTML = params.closeButtonHtml; // Custom class\n\n  applyCustomClass(closeButton, params, 'closeButton');\n  toggle(closeButton, params.showCloseButton);\n  closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n};\n\nvar renderIcon = function renderIcon(instance, params) {\n  var innerParams = privateProps.innerParams.get(instance); // if the give icon already rendered, apply the custom class without re-rendering the icon\n\n  if (innerParams && params.icon === innerParams.icon && getIcon()) {\n    applyCustomClass(getIcon(), params, 'icon');\n    return;\n  }\n\n  hideAllIcons();\n\n  if (!params.icon) {\n    return;\n  }\n\n  if (Object.keys(iconTypes).indexOf(params.icon) !== -1) {\n    var icon = elementBySelector(\".\".concat(swalClasses.icon, \".\").concat(iconTypes[params.icon]));\n    show(icon); // Custom or default content\n\n    setContent(icon, params);\n    adjustSuccessIconBackgoundColor(); // Custom class\n\n    applyCustomClass(icon, params, 'icon'); // Animate icon\n\n    addClass(icon, params.showClass.icon);\n  } else {\n    error(\"Unknown icon! Expected \\\"success\\\", \\\"error\\\", \\\"warning\\\", \\\"info\\\" or \\\"question\\\", got \\\"\".concat(params.icon, \"\\\"\"));\n  }\n};\n\nvar hideAllIcons = function hideAllIcons() {\n  var icons = getIcons();\n\n  for (var i = 0; i < icons.length; i++) {\n    hide(icons[i]);\n  }\n}; // Adjust success icon background color to match the popup background color\n\n\nvar adjustSuccessIconBackgoundColor = function adjustSuccessIconBackgoundColor() {\n  var popup = getPopup();\n  var popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n  var successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n\n  for (var i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.backgroundColor = popupBackgroundColor;\n  }\n};\n\nvar setContent = function setContent(icon, params) {\n  icon.innerHTML = '';\n\n  if (params.iconHtml) {\n    icon.innerHTML = iconContent(params.iconHtml);\n  } else if (params.icon === 'success') {\n    icon.innerHTML = \"\\n      <div class=\\\"swal2-success-circular-line-left\\\"></div>\\n      <span class=\\\"swal2-success-line-tip\\\"></span> <span class=\\\"swal2-success-line-long\\\"></span>\\n      <div class=\\\"swal2-success-ring\\\"></div> <div class=\\\"swal2-success-fix\\\"></div>\\n      <div class=\\\"swal2-success-circular-line-right\\\"></div>\\n    \";\n  } else if (params.icon === 'error') {\n    icon.innerHTML = \"\\n      <span class=\\\"swal2-x-mark\\\">\\n        <span class=\\\"swal2-x-mark-line-left\\\"></span>\\n        <span class=\\\"swal2-x-mark-line-right\\\"></span>\\n      </span>\\n    \";\n  } else {\n    var defaultIconHtml = {\n      question: '?',\n      warning: '!',\n      info: 'i'\n    };\n    icon.innerHTML = iconContent(defaultIconHtml[params.icon]);\n  }\n};\n\nvar iconContent = function iconContent(content) {\n  return \"<div class=\\\"\".concat(swalClasses['icon-content'], \"\\\">\").concat(content, \"</div>\");\n};\n\nvar renderImage = function renderImage(instance, params) {\n  var image = getImage();\n\n  if (!params.imageUrl) {\n    return hide(image);\n  }\n\n  show(image); // Src, alt\n\n  image.setAttribute('src', params.imageUrl);\n  image.setAttribute('alt', params.imageAlt); // Width, height\n\n  applyNumericalStyle(image, 'width', params.imageWidth);\n  applyNumericalStyle(image, 'height', params.imageHeight); // Class\n\n  image.className = swalClasses.image;\n  applyCustomClass(image, params, 'image');\n};\n\nvar currentSteps = [];\n/*\n * Global function for chaining sweetAlert popups\n */\n\nvar queue = function queue(steps) {\n  var Swal = this;\n  currentSteps = steps;\n\n  var resetAndResolve = function resetAndResolve(resolve, value) {\n    currentSteps = [];\n    resolve(value);\n  };\n\n  var queueResult = [];\n  return new Promise(function (resolve) {\n    (function step(i, callback) {\n      if (i < currentSteps.length) {\n        document.body.setAttribute('data-swal2-queue-step', i);\n        Swal.fire(currentSteps[i]).then(function (result) {\n          if (typeof result.value !== 'undefined') {\n            queueResult.push(result.value);\n            step(i + 1, callback);\n          } else {\n            resetAndResolve(resolve, {\n              dismiss: result.dismiss\n            });\n          }\n        });\n      } else {\n        resetAndResolve(resolve, {\n          value: queueResult\n        });\n      }\n    })(0);\n  });\n};\n/*\n * Global function for getting the index of current popup in queue\n */\n\nvar getQueueStep = function getQueueStep() {\n  return getContainer().getAttribute('data-queue-step');\n};\n/*\n * Global function for inserting a popup to the queue\n */\n\nvar insertQueueStep = function insertQueueStep(step, index) {\n  if (index && index < currentSteps.length) {\n    return currentSteps.splice(index, 0, step);\n  }\n\n  return currentSteps.push(step);\n};\n/*\n * Global function for deleting a popup from the queue\n */\n\nvar deleteQueueStep = function deleteQueueStep(index) {\n  if (typeof currentSteps[index] !== 'undefined') {\n    currentSteps.splice(index, 1);\n  }\n};\n\nvar createStepElement = function createStepElement(step) {\n  var stepEl = document.createElement('li');\n  addClass(stepEl, swalClasses['progress-step']);\n  stepEl.innerHTML = step;\n  return stepEl;\n};\n\nvar createLineElement = function createLineElement(params) {\n  var lineEl = document.createElement('li');\n  addClass(lineEl, swalClasses['progress-step-line']);\n\n  if (params.progressStepsDistance) {\n    lineEl.style.width = params.progressStepsDistance;\n  }\n\n  return lineEl;\n};\n\nvar renderProgressSteps = function renderProgressSteps(instance, params) {\n  var progressStepsContainer = getProgressSteps();\n\n  if (!params.progressSteps || params.progressSteps.length === 0) {\n    return hide(progressStepsContainer);\n  }\n\n  show(progressStepsContainer);\n  progressStepsContainer.innerHTML = '';\n  var currentProgressStep = parseInt(params.currentProgressStep === undefined ? getQueueStep() : params.currentProgressStep);\n\n  if (currentProgressStep >= params.progressSteps.length) {\n    warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n  }\n\n  params.progressSteps.forEach(function (step, index) {\n    var stepEl = createStepElement(step);\n    progressStepsContainer.appendChild(stepEl);\n\n    if (index === currentProgressStep) {\n      addClass(stepEl, swalClasses['active-progress-step']);\n    }\n\n    if (index !== params.progressSteps.length - 1) {\n      var lineEl = createLineElement(step);\n      progressStepsContainer.appendChild(lineEl);\n    }\n  });\n};\n\nvar renderTitle = function renderTitle(instance, params) {\n  var title = getTitle();\n  toggle(title, params.title || params.titleText);\n\n  if (params.title) {\n    parseHtmlToContainer(params.title, title);\n  }\n\n  if (params.titleText) {\n    title.innerText = params.titleText;\n  } // Custom class\n\n\n  applyCustomClass(title, params, 'title');\n};\n\nvar renderHeader = function renderHeader(instance, params) {\n  var header = getHeader(); // Custom class\n\n  applyCustomClass(header, params, 'header'); // Progress steps\n\n  renderProgressSteps(instance, params); // Icon\n\n  renderIcon(instance, params); // Image\n\n  renderImage(instance, params); // Title\n\n  renderTitle(instance, params); // Close button\n\n  renderCloseButton(instance, params);\n};\n\nvar renderPopup = function renderPopup(instance, params) {\n  var popup = getPopup(); // Width\n\n  applyNumericalStyle(popup, 'width', params.width); // Padding\n\n  applyNumericalStyle(popup, 'padding', params.padding); // Background\n\n  if (params.background) {\n    popup.style.background = params.background;\n  } // Default Class\n\n\n  popup.className = swalClasses.popup;\n\n  if (params.toast) {\n    addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n    addClass(popup, swalClasses.toast);\n  } else {\n    addClass(popup, swalClasses.modal);\n  } // Custom class\n\n\n  applyCustomClass(popup, params, 'popup');\n\n  if (typeof params.customClass === 'string') {\n    addClass(popup, params.customClass);\n  } // Add showClass when updating Swal.update({})\n\n\n  if (isVisible(popup)) {\n    addClass(popup, params.showClass.popup);\n  }\n};\n\nvar render = function render(instance, params) {\n  renderPopup(instance, params);\n  renderContainer(instance, params);\n  renderHeader(instance, params);\n  renderContent(instance, params);\n  renderActions(instance, params);\n  renderFooter(instance, params);\n\n  if (typeof params.onRender === 'function') {\n    params.onRender(getPopup());\n  }\n};\n\n/*\n * Global function to determine if SweetAlert2 popup is shown\n */\n\nvar isVisible$1 = function isVisible$$1() {\n  return isVisible(getPopup());\n};\n/*\n * Global function to click 'Confirm' button\n */\n\nvar clickConfirm = function clickConfirm() {\n  return getConfirmButton() && getConfirmButton().click();\n};\n/*\n * Global function to click 'Cancel' button\n */\n\nvar clickCancel = function clickCancel() {\n  return getCancelButton() && getCancelButton().click();\n};\n\nfunction fire() {\n  var Swal = this;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _construct(Swal, args);\n}\n\n/**\n * Returns an extended version of `Swal` containing `params` as defaults.\n * Useful for reusing Swal configuration.\n *\n * For example:\n *\n * Before:\n * const textPromptOptions = { input: 'text', showCancelButton: true }\n * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n *\n * After:\n * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n * const {value: firstName} = await TextPrompt('What is your first name?')\n * const {value: lastName} = await TextPrompt('What is your last name?')\n *\n * @param mixinParams\n */\nfunction mixin(mixinParams) {\n  var MixinSwal =\n  /*#__PURE__*/\n  function (_this) {\n    _inherits(MixinSwal, _this);\n\n    function MixinSwal() {\n      _classCallCheck(this, MixinSwal);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(MixinSwal).apply(this, arguments));\n    }\n\n    _createClass(MixinSwal, [{\n      key: \"_main\",\n      value: function _main(params) {\n        return _get(_getPrototypeOf(MixinSwal.prototype), \"_main\", this).call(this, _extends({}, mixinParams, params));\n      }\n    }]);\n\n    return MixinSwal;\n  }(this);\n\n  return MixinSwal;\n}\n\n/**\n * Show spinner instead of Confirm button\n */\n\nvar showLoading = function showLoading() {\n  var popup = getPopup();\n\n  if (!popup) {\n    Swal.fire();\n  }\n\n  popup = getPopup();\n  var actions = getActions();\n  var confirmButton = getConfirmButton();\n  show(actions);\n  show(confirmButton, 'inline-block');\n  addClass([popup, actions], swalClasses.loading);\n  confirmButton.disabled = true;\n  popup.setAttribute('data-loading', true);\n  popup.setAttribute('aria-busy', true);\n  popup.focus();\n};\n\nvar RESTORE_FOCUS_TIMEOUT = 100;\n\nvar globalState = {};\nvar focusPreviousActiveElement = function focusPreviousActiveElement() {\n  if (globalState.previousActiveElement && globalState.previousActiveElement.focus) {\n    globalState.previousActiveElement.focus();\n    globalState.previousActiveElement = null;\n  } else if (document.body) {\n    document.body.focus();\n  }\n}; // Restore previous active (focused) element\n\n\nvar restoreActiveElement = function restoreActiveElement() {\n  return new Promise(function (resolve) {\n    var x = window.scrollX;\n    var y = window.scrollY;\n    globalState.restoreFocusTimeout = setTimeout(function () {\n      focusPreviousActiveElement();\n      resolve();\n    }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n    if (typeof x !== 'undefined' && typeof y !== 'undefined') {\n      // IE doesn't have scrollX/scrollY support\n      window.scrollTo(x, y);\n    }\n  });\n};\n\n/**\n * If `timer` parameter is set, returns number of milliseconds of timer remained.\n * Otherwise, returns undefined.\n */\n\nvar getTimerLeft = function getTimerLeft() {\n  return globalState.timeout && globalState.timeout.getTimerLeft();\n};\n/**\n * Stop timer. Returns number of milliseconds of timer remained.\n * If `timer` parameter isn't set, returns undefined.\n */\n\nvar stopTimer = function stopTimer() {\n  if (globalState.timeout) {\n    stopTimerProgressBar();\n    return globalState.timeout.stop();\n  }\n};\n/**\n * Resume timer. Returns number of milliseconds of timer remained.\n * If `timer` parameter isn't set, returns undefined.\n */\n\nvar resumeTimer = function resumeTimer() {\n  if (globalState.timeout) {\n    var remaining = globalState.timeout.start();\n    animateTimerProgressBar(remaining);\n    return remaining;\n  }\n};\n/**\n * Resume timer. Returns number of milliseconds of timer remained.\n * If `timer` parameter isn't set, returns undefined.\n */\n\nvar toggleTimer = function toggleTimer() {\n  var timer = globalState.timeout;\n  return timer && (timer.running ? stopTimer() : resumeTimer());\n};\n/**\n * Increase timer. Returns number of milliseconds of an updated timer.\n * If `timer` parameter isn't set, returns undefined.\n */\n\nvar increaseTimer = function increaseTimer(n) {\n  if (globalState.timeout) {\n    var remaining = globalState.timeout.increase(n);\n    animateTimerProgressBar(remaining, true);\n    return remaining;\n  }\n};\n/**\n * Check if timer is running. Returns true if timer is running\n * or false if timer is paused or stopped.\n * If `timer` parameter isn't set, returns undefined\n */\n\nvar isTimerRunning = function isTimerRunning() {\n  return globalState.timeout && globalState.timeout.isRunning();\n};\n\nvar defaultParams = {\n  title: '',\n  titleText: '',\n  text: '',\n  html: '',\n  footer: '',\n  icon: undefined,\n  iconHtml: undefined,\n  toast: false,\n  animation: true,\n  showClass: {\n    popup: 'swal2-show',\n    backdrop: 'swal2-backdrop-show',\n    icon: 'swal2-icon-show'\n  },\n  hideClass: {\n    popup: 'swal2-hide',\n    backdrop: 'swal2-backdrop-hide',\n    icon: 'swal2-icon-hide'\n  },\n  customClass: undefined,\n  target: 'body',\n  backdrop: true,\n  heightAuto: true,\n  allowOutsideClick: true,\n  allowEscapeKey: true,\n  allowEnterKey: true,\n  stopKeydownPropagation: true,\n  keydownListenerCapture: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  preConfirm: undefined,\n  confirmButtonText: 'OK',\n  confirmButtonAriaLabel: '',\n  confirmButtonColor: undefined,\n  cancelButtonText: 'Cancel',\n  cancelButtonAriaLabel: '',\n  cancelButtonColor: undefined,\n  buttonsStyling: true,\n  reverseButtons: false,\n  focusConfirm: true,\n  focusCancel: false,\n  showCloseButton: false,\n  closeButtonHtml: '&times;',\n  closeButtonAriaLabel: 'Close this dialog',\n  showLoaderOnConfirm: false,\n  imageUrl: undefined,\n  imageWidth: undefined,\n  imageHeight: undefined,\n  imageAlt: '',\n  timer: undefined,\n  timerProgressBar: false,\n  width: undefined,\n  padding: undefined,\n  background: undefined,\n  input: undefined,\n  inputPlaceholder: '',\n  inputValue: '',\n  inputOptions: {},\n  inputAutoTrim: true,\n  inputAttributes: {},\n  inputValidator: undefined,\n  validationMessage: undefined,\n  grow: false,\n  position: 'center',\n  progressSteps: [],\n  currentProgressStep: undefined,\n  progressStepsDistance: undefined,\n  onBeforeOpen: undefined,\n  onOpen: undefined,\n  onRender: undefined,\n  onClose: undefined,\n  onAfterClose: undefined,\n  scrollbarPadding: true\n};\nvar updatableParams = ['title', 'titleText', 'text', 'html', 'icon', 'customClass', 'showConfirmButton', 'showCancelButton', 'confirmButtonText', 'confirmButtonAriaLabel', 'confirmButtonColor', 'cancelButtonText', 'cancelButtonAriaLabel', 'cancelButtonColor', 'buttonsStyling', 'reverseButtons', 'imageUrl', 'imageWidth', 'imageHeight', 'imageAlt', 'progressSteps', 'currentProgressStep'];\nvar deprecatedParams = {\n  animation: 'showClass\" and \"hideClass'\n};\nvar toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusCancel', 'heightAuto', 'keydownListenerCapture'];\n/**\n * Is valid parameter\n * @param {String} paramName\n */\n\nvar isValidParameter = function isValidParameter(paramName) {\n  return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n};\n/**\n * Is valid parameter for Swal.update() method\n * @param {String} paramName\n */\n\nvar isUpdatableParameter = function isUpdatableParameter(paramName) {\n  return updatableParams.indexOf(paramName) !== -1;\n};\n/**\n * Is deprecated parameter\n * @param {String} paramName\n */\n\nvar isDeprecatedParameter = function isDeprecatedParameter(paramName) {\n  return deprecatedParams[paramName];\n};\n\nvar checkIfParamIsValid = function checkIfParamIsValid(param) {\n  if (!isValidParameter(param)) {\n    warn(\"Unknown parameter \\\"\".concat(param, \"\\\"\"));\n  }\n};\n\nvar checkIfToastParamIsValid = function checkIfToastParamIsValid(param) {\n  if (toastIncompatibleParams.indexOf(param) !== -1) {\n    warn(\"The parameter \\\"\".concat(param, \"\\\" is incompatible with toasts\"));\n  }\n};\n\nvar checkIfParamIsDeprecated = function checkIfParamIsDeprecated(param) {\n  if (isDeprecatedParameter(param)) {\n    warnAboutDepreation(param, isDeprecatedParameter(param));\n  }\n};\n/**\n * Show relevant warnings for given params\n *\n * @param params\n */\n\n\nvar showWarningsForParams = function showWarningsForParams(params) {\n  for (var param in params) {\n    checkIfParamIsValid(param);\n\n    if (params.toast) {\n      checkIfToastParamIsValid(param);\n    }\n\n    checkIfParamIsDeprecated(param);\n  }\n};\n\n\n\nvar staticMethods = Object.freeze({\n\tisValidParameter: isValidParameter,\n\tisUpdatableParameter: isUpdatableParameter,\n\tisDeprecatedParameter: isDeprecatedParameter,\n\targsToParams: argsToParams,\n\tisVisible: isVisible$1,\n\tclickConfirm: clickConfirm,\n\tclickCancel: clickCancel,\n\tgetContainer: getContainer,\n\tgetPopup: getPopup,\n\tgetTitle: getTitle,\n\tgetContent: getContent,\n\tgetHtmlContainer: getHtmlContainer,\n\tgetImage: getImage,\n\tgetIcon: getIcon,\n\tgetIcons: getIcons,\n\tgetCloseButton: getCloseButton,\n\tgetActions: getActions,\n\tgetConfirmButton: getConfirmButton,\n\tgetCancelButton: getCancelButton,\n\tgetHeader: getHeader,\n\tgetFooter: getFooter,\n\tgetFocusableElements: getFocusableElements,\n\tgetValidationMessage: getValidationMessage,\n\tisLoading: isLoading,\n\tfire: fire,\n\tmixin: mixin,\n\tqueue: queue,\n\tgetQueueStep: getQueueStep,\n\tinsertQueueStep: insertQueueStep,\n\tdeleteQueueStep: deleteQueueStep,\n\tshowLoading: showLoading,\n\tenableLoading: showLoading,\n\tgetTimerLeft: getTimerLeft,\n\tstopTimer: stopTimer,\n\tresumeTimer: resumeTimer,\n\ttoggleTimer: toggleTimer,\n\tincreaseTimer: increaseTimer,\n\tisTimerRunning: isTimerRunning\n});\n\n/**\n * Enables buttons and hide loader.\n */\n\nfunction hideLoading() {\n  // do nothing if popup is closed\n  var innerParams = privateProps.innerParams.get(this);\n\n  if (!innerParams) {\n    return;\n  }\n\n  var domCache = privateProps.domCache.get(this);\n\n  if (!innerParams.showConfirmButton) {\n    hide(domCache.confirmButton);\n\n    if (!innerParams.showCancelButton) {\n      hide(domCache.actions);\n    }\n  }\n\n  removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n  domCache.popup.removeAttribute('aria-busy');\n  domCache.popup.removeAttribute('data-loading');\n  domCache.confirmButton.disabled = false;\n  domCache.cancelButton.disabled = false;\n}\n\nfunction getInput$1(instance) {\n  var innerParams = privateProps.innerParams.get(instance || this);\n  var domCache = privateProps.domCache.get(instance || this);\n\n  if (!domCache) {\n    return null;\n  }\n\n  return getInput(domCache.content, innerParams.input);\n}\n\nvar fixScrollbar = function fixScrollbar() {\n  // for queues, do not do this more than once\n  if (states.previousBodyPadding !== null) {\n    return;\n  } // if the body has overflow\n\n\n  if (document.body.scrollHeight > window.innerHeight) {\n    // add padding so the content doesn't shift after removal of scrollbar\n    states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n    document.body.style.paddingRight = \"\".concat(states.previousBodyPadding + measureScrollbar(), \"px\");\n  }\n};\nvar undoScrollbar = function undoScrollbar() {\n  if (states.previousBodyPadding !== null) {\n    document.body.style.paddingRight = \"\".concat(states.previousBodyPadding, \"px\");\n    states.previousBodyPadding = null;\n  }\n};\n\n/* istanbul ignore next */\n\nvar iOSfix = function iOSfix() {\n  var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n\n  if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n    var offset = document.body.scrollTop;\n    document.body.style.top = \"\".concat(offset * -1, \"px\");\n    addClass(document.body, swalClasses.iosfix);\n    lockBodyScroll();\n  }\n};\n/* istanbul ignore next */\n\nvar lockBodyScroll = function lockBodyScroll() {\n  // #1246\n  var container = getContainer();\n  var preventTouchMove;\n\n  container.ontouchstart = function (e) {\n    preventTouchMove = e.target === container || !isScrollable(container) && e.target.tagName !== 'INPUT' // #1603\n    ;\n  };\n\n  container.ontouchmove = function (e) {\n    if (preventTouchMove) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n};\n/* istanbul ignore next */\n\n\nvar undoIOSfix = function undoIOSfix() {\n  if (hasClass(document.body, swalClasses.iosfix)) {\n    var offset = parseInt(document.body.style.top, 10);\n    removeClass(document.body, swalClasses.iosfix);\n    document.body.style.top = '';\n    document.body.scrollTop = offset * -1;\n  }\n};\n\nvar isIE11 = function isIE11() {\n  return !!window.MSInputMethodContext && !!document.documentMode;\n}; // Fix IE11 centering sweetalert2/issues/933\n\n/* istanbul ignore next */\n\n\nvar fixVerticalPositionIE = function fixVerticalPositionIE() {\n  var container = getContainer();\n  var popup = getPopup();\n  container.style.removeProperty('align-items');\n\n  if (popup.offsetTop < 0) {\n    container.style.alignItems = 'flex-start';\n  }\n};\n/* istanbul ignore next */\n\n\nvar IEfix = function IEfix() {\n  if (typeof window !== 'undefined' && isIE11()) {\n    fixVerticalPositionIE();\n    window.addEventListener('resize', fixVerticalPositionIE);\n  }\n};\n/* istanbul ignore next */\n\nvar undoIEfix = function undoIEfix() {\n  if (typeof window !== 'undefined' && isIE11()) {\n    window.removeEventListener('resize', fixVerticalPositionIE);\n  }\n};\n\n// Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n// elements not within the active modal dialog will not be surfaced if a user opens a screen\n// reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\nvar setAriaHidden = function setAriaHidden() {\n  var bodyChildren = toArray(document.body.children);\n  bodyChildren.forEach(function (el) {\n    if (el === getContainer() || contains(el, getContainer())) {\n      return;\n    }\n\n    if (el.hasAttribute('aria-hidden')) {\n      el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n    }\n\n    el.setAttribute('aria-hidden', 'true');\n  });\n};\nvar unsetAriaHidden = function unsetAriaHidden() {\n  var bodyChildren = toArray(document.body.children);\n  bodyChildren.forEach(function (el) {\n    if (el.hasAttribute('data-previous-aria-hidden')) {\n      el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n      el.removeAttribute('data-previous-aria-hidden');\n    } else {\n      el.removeAttribute('aria-hidden');\n    }\n  });\n};\n\n/**\n * This module containts `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\nvar privateMethods = {\n  swalPromiseResolve: new WeakMap()\n};\n\n/*\n * Instance method to close sweetAlert\n */\n\nfunction removePopupAndResetState(instance, container, isToast, onAfterClose) {\n  if (isToast) {\n    triggerOnAfterCloseAndDispose(instance, onAfterClose);\n  } else {\n    restoreActiveElement().then(function () {\n      return triggerOnAfterCloseAndDispose(instance, onAfterClose);\n    });\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = false;\n  }\n\n  if (container.parentNode) {\n    container.parentNode.removeChild(container);\n  }\n\n  if (isModal()) {\n    undoScrollbar();\n    undoIOSfix();\n    undoIEfix();\n    unsetAriaHidden();\n  }\n\n  removeBodyClasses();\n}\n\nfunction removeBodyClasses() {\n  removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['toast-column']]);\n}\n\nfunction disposeSwal(instance) {\n  // Unset this.params so GC will dispose it (#1569)\n  delete instance.params; // Unset globalState props so GC will dispose globalState (#1569)\n\n  delete globalState.keydownHandler;\n  delete globalState.keydownTarget; // Unset WeakMaps so GC will be able to dispose them (#1569)\n\n  unsetWeakMaps(privateProps);\n  unsetWeakMaps(privateMethods);\n}\n\nfunction close(resolveValue) {\n  var popup = getPopup();\n\n  if (!popup) {\n    return;\n  }\n\n  var innerParams = privateProps.innerParams.get(this);\n\n  if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n    return;\n  }\n\n  var swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n  removeClass(popup, innerParams.showClass.popup);\n  addClass(popup, innerParams.hideClass.popup);\n  var backdrop = getContainer();\n  removeClass(backdrop, innerParams.showClass.backdrop);\n  addClass(backdrop, innerParams.hideClass.backdrop);\n  handlePopupAnimation(this, popup, innerParams); // Resolve Swal promise\n\n  swalPromiseResolve(resolveValue || {});\n}\n\nvar handlePopupAnimation = function handlePopupAnimation(instance, popup, innerParams) {\n  var container = getContainer(); // If animation is supported, animate\n\n  var animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n  var onClose = innerParams.onClose,\n      onAfterClose = innerParams.onAfterClose;\n\n  if (onClose !== null && typeof onClose === 'function') {\n    onClose(popup);\n  }\n\n  if (animationIsSupported) {\n    animatePopup(instance, popup, container, onAfterClose);\n  } else {\n    // Otherwise, remove immediately\n    removePopupAndResetState(instance, container, isToast(), onAfterClose);\n  }\n};\n\nvar animatePopup = function animatePopup(instance, popup, container, onAfterClose) {\n  globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, isToast(), onAfterClose);\n  popup.addEventListener(animationEndEvent, function (e) {\n    if (e.target === popup) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n  });\n};\n\nvar unsetWeakMaps = function unsetWeakMaps(obj) {\n  for (var i in obj) {\n    obj[i] = new WeakMap();\n  }\n};\n\nvar triggerOnAfterCloseAndDispose = function triggerOnAfterCloseAndDispose(instance, onAfterClose) {\n  setTimeout(function () {\n    if (onAfterClose !== null && typeof onAfterClose === 'function') {\n      onAfterClose();\n    }\n\n    if (!getPopup()) {\n      disposeSwal(instance);\n    }\n  });\n};\n\nfunction setButtonsDisabled(instance, buttons, disabled) {\n  var domCache = privateProps.domCache.get(instance);\n  buttons.forEach(function (button) {\n    domCache[button].disabled = disabled;\n  });\n}\n\nfunction setInputDisabled(input, disabled) {\n  if (!input) {\n    return false;\n  }\n\n  if (input.type === 'radio') {\n    var radiosContainer = input.parentNode.parentNode;\n    var radios = radiosContainer.querySelectorAll('input');\n\n    for (var i = 0; i < radios.length; i++) {\n      radios[i].disabled = disabled;\n    }\n  } else {\n    input.disabled = disabled;\n  }\n}\n\nfunction enableButtons() {\n  setButtonsDisabled(this, ['confirmButton', 'cancelButton'], false);\n}\nfunction disableButtons() {\n  setButtonsDisabled(this, ['confirmButton', 'cancelButton'], true);\n}\nfunction enableInput() {\n  return setInputDisabled(this.getInput(), false);\n}\nfunction disableInput() {\n  return setInputDisabled(this.getInput(), true);\n}\n\nfunction showValidationMessage(error) {\n  var domCache = privateProps.domCache.get(this);\n  domCache.validationMessage.innerHTML = error;\n  var popupComputedStyle = window.getComputedStyle(domCache.popup);\n  domCache.validationMessage.style.marginLeft = \"-\".concat(popupComputedStyle.getPropertyValue('padding-left'));\n  domCache.validationMessage.style.marginRight = \"-\".concat(popupComputedStyle.getPropertyValue('padding-right'));\n  show(domCache.validationMessage);\n  var input = this.getInput();\n\n  if (input) {\n    input.setAttribute('aria-invalid', true);\n    input.setAttribute('aria-describedBy', swalClasses['validation-message']);\n    focusInput(input);\n    addClass(input, swalClasses.inputerror);\n  }\n} // Hide block with validation message\n\nfunction resetValidationMessage$1() {\n  var domCache = privateProps.domCache.get(this);\n\n  if (domCache.validationMessage) {\n    hide(domCache.validationMessage);\n  }\n\n  var input = this.getInput();\n\n  if (input) {\n    input.removeAttribute('aria-invalid');\n    input.removeAttribute('aria-describedBy');\n    removeClass(input, swalClasses.inputerror);\n  }\n}\n\nfunction getProgressSteps$1() {\n  var domCache = privateProps.domCache.get(this);\n  return domCache.progressSteps;\n}\n\nvar Timer =\n/*#__PURE__*/\nfunction () {\n  function Timer(callback, delay) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.remaining = delay;\n    this.running = false;\n    this.start();\n  }\n\n  _createClass(Timer, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n\n      return this.remaining;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date() - this.started;\n      }\n\n      return this.remaining;\n    }\n  }, {\n    key: \"increase\",\n    value: function increase(n) {\n      var running = this.running;\n\n      if (running) {\n        this.stop();\n      }\n\n      this.remaining += n;\n\n      if (running) {\n        this.start();\n      }\n\n      return this.remaining;\n    }\n  }, {\n    key: \"getTimerLeft\",\n    value: function getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n\n      return this.remaining;\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this.running;\n    }\n  }]);\n\n  return Timer;\n}();\n\nvar defaultInputValidators = {\n  email: function email(string, validationMessage) {\n    return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n  },\n  url: function url(string, validationMessage) {\n    // taken from https://stackoverflow.com/a/3809435 with a small change from #1306\n    return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n  }\n};\n\nfunction setDefaultInputValidators(params) {\n  // Use default `inputValidator` for supported input types if not provided\n  if (!params.inputValidator) {\n    Object.keys(defaultInputValidators).forEach(function (key) {\n      if (params.input === key) {\n        params.inputValidator = defaultInputValidators[key];\n      }\n    });\n  }\n}\n\nfunction validateCustomTargetElement(params) {\n  // Determine if the custom target element is valid\n  if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n    warn('Target parameter is not valid, defaulting to \"body\"');\n    params.target = 'body';\n  }\n}\n/**\n * Set type, text and actions on popup\n *\n * @param params\n * @returns {boolean}\n */\n\n\nfunction setParameters(params) {\n  setDefaultInputValidators(params); // showLoaderOnConfirm && preConfirm\n\n  if (params.showLoaderOnConfirm && !params.preConfirm) {\n    warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n  } // params.animation will be actually used in renderPopup.js\n  // but in case when params.animation is a function, we need to call that function\n  // before popup (re)initialization, so it'll be possible to check Swal.isVisible()\n  // inside the params.animation function\n\n\n  params.animation = callIfFunction(params.animation);\n  validateCustomTargetElement(params); // Replace newlines with <br> in title\n\n  if (typeof params.title === 'string') {\n    params.title = params.title.split('\\n').join('<br />');\n  }\n\n  init(params);\n}\n\nfunction swalOpenAnimationFinished(popup, container) {\n  popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n  container.style.overflowY = 'auto';\n}\n/**\n * Open popup, add necessary classes and styles, fix scrollbar\n *\n * @param {Array} params\n */\n\n\nvar openPopup = function openPopup(params) {\n  var container = getContainer();\n  var popup = getPopup();\n\n  if (typeof params.onBeforeOpen === 'function') {\n    params.onBeforeOpen(popup);\n  }\n\n  addClasses(container, popup, params); // scrolling is 'hidden' until animation is done, after that 'auto'\n\n  setScrollingVisibility(container, popup);\n\n  if (isModal()) {\n    fixScrollContainer(container, params.scrollbarPadding);\n  }\n\n  if (!isToast() && !globalState.previousActiveElement) {\n    globalState.previousActiveElement = document.activeElement;\n  }\n\n  if (typeof params.onOpen === 'function') {\n    setTimeout(function () {\n      return params.onOpen(popup);\n    });\n  }\n};\n\nvar setScrollingVisibility = function setScrollingVisibility(container, popup) {\n  if (animationEndEvent && hasCssAnimation(popup)) {\n    container.style.overflowY = 'hidden';\n    popup.addEventListener(animationEndEvent, swalOpenAnimationFinished.bind(null, popup, container));\n  } else {\n    container.style.overflowY = 'auto';\n  }\n};\n\nvar fixScrollContainer = function fixScrollContainer(container, scrollbarPadding) {\n  iOSfix();\n  IEfix();\n  setAriaHidden();\n\n  if (scrollbarPadding) {\n    fixScrollbar();\n  } // sweetalert2/issues/1247\n\n\n  setTimeout(function () {\n    container.scrollTop = 0;\n  });\n};\n\nvar addClasses = function addClasses(container, popup, params) {\n  addClass(container, params.showClass.backdrop);\n  show(popup); // Animate popup right after showing it\n\n  addClass(popup, params.showClass.popup);\n  addClass([document.documentElement, document.body], swalClasses.shown);\n\n  if (params.heightAuto && params.backdrop && !params.toast) {\n    addClass([document.documentElement, document.body], swalClasses['height-auto']);\n  }\n};\n\nvar handleInputOptionsAndValue = function handleInputOptionsAndValue(instance, params) {\n  if (params.input === 'select' || params.input === 'radio') {\n    handleInputOptions(instance, params);\n  } else if (['text', 'email', 'number', 'tel', 'textarea'].indexOf(params.input) !== -1 && isPromise(params.inputValue)) {\n    handleInputValue(instance, params);\n  }\n};\nvar getInputValue = function getInputValue(instance, innerParams) {\n  var input = instance.getInput();\n\n  if (!input) {\n    return null;\n  }\n\n  switch (innerParams.input) {\n    case 'checkbox':\n      return getCheckboxValue(input);\n\n    case 'radio':\n      return getRadioValue(input);\n\n    case 'file':\n      return getFileValue(input);\n\n    default:\n      return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n  }\n};\n\nvar getCheckboxValue = function getCheckboxValue(input) {\n  return input.checked ? 1 : 0;\n};\n\nvar getRadioValue = function getRadioValue(input) {\n  return input.checked ? input.value : null;\n};\n\nvar getFileValue = function getFileValue(input) {\n  return input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n};\n\nvar handleInputOptions = function handleInputOptions(instance, params) {\n  var content = getContent();\n\n  var processInputOptions = function processInputOptions(inputOptions) {\n    return populateInputOptions[params.input](content, formatInputOptions(inputOptions), params);\n  };\n\n  if (isPromise(params.inputOptions)) {\n    showLoading();\n    params.inputOptions.then(function (inputOptions) {\n      instance.hideLoading();\n      processInputOptions(inputOptions);\n    });\n  } else if (_typeof(params.inputOptions) === 'object') {\n    processInputOptions(params.inputOptions);\n  } else {\n    error(\"Unexpected type of inputOptions! Expected object, Map or Promise, got \".concat(_typeof(params.inputOptions)));\n  }\n};\n\nvar handleInputValue = function handleInputValue(instance, params) {\n  var input = instance.getInput();\n  hide(input);\n  params.inputValue.then(function (inputValue) {\n    input.value = params.input === 'number' ? parseFloat(inputValue) || 0 : \"\".concat(inputValue);\n    show(input);\n    input.focus();\n    instance.hideLoading();\n  })[\"catch\"](function (err) {\n    error(\"Error in inputValue promise: \".concat(err));\n    input.value = '';\n    show(input);\n    input.focus();\n    instance.hideLoading();\n  });\n};\n\nvar populateInputOptions = {\n  select: function select(content, inputOptions, params) {\n    var select = getChildByClass(content, swalClasses.select);\n    inputOptions.forEach(function (inputOption) {\n      var optionValue = inputOption[0];\n      var optionLabel = inputOption[1];\n      var option = document.createElement('option');\n      option.value = optionValue;\n      option.innerHTML = optionLabel;\n\n      if (params.inputValue.toString() === optionValue.toString()) {\n        option.selected = true;\n      }\n\n      select.appendChild(option);\n    });\n    select.focus();\n  },\n  radio: function radio(content, inputOptions, params) {\n    var radio = getChildByClass(content, swalClasses.radio);\n    inputOptions.forEach(function (inputOption) {\n      var radioValue = inputOption[0];\n      var radioLabel = inputOption[1];\n      var radioInput = document.createElement('input');\n      var radioLabelElement = document.createElement('label');\n      radioInput.type = 'radio';\n      radioInput.name = swalClasses.radio;\n      radioInput.value = radioValue;\n\n      if (params.inputValue.toString() === radioValue.toString()) {\n        radioInput.checked = true;\n      }\n\n      var label = document.createElement('span');\n      label.innerHTML = radioLabel;\n      label.className = swalClasses.label;\n      radioLabelElement.appendChild(radioInput);\n      radioLabelElement.appendChild(label);\n      radio.appendChild(radioLabelElement);\n    });\n    var radios = radio.querySelectorAll('input');\n\n    if (radios.length) {\n      radios[0].focus();\n    }\n  }\n};\n/**\n * Converts `inputOptions` into an array of `[value, label]`s\n * @param inputOptions\n */\n\nvar formatInputOptions = function formatInputOptions(inputOptions) {\n  var result = [];\n\n  if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n    inputOptions.forEach(function (value, key) {\n      result.push([key, value]);\n    });\n  } else {\n    Object.keys(inputOptions).forEach(function (key) {\n      result.push([key, inputOptions[key]]);\n    });\n  }\n\n  return result;\n};\n\nvar handleConfirmButtonClick = function handleConfirmButtonClick(instance, innerParams) {\n  instance.disableButtons();\n\n  if (innerParams.input) {\n    handleConfirmWithInput(instance, innerParams);\n  } else {\n    confirm(instance, innerParams, true);\n  }\n};\nvar handleCancelButtonClick = function handleCancelButtonClick(instance, dismissWith) {\n  instance.disableButtons();\n  dismissWith(DismissReason.cancel);\n};\n\nvar handleConfirmWithInput = function handleConfirmWithInput(instance, innerParams) {\n  var inputValue = getInputValue(instance, innerParams);\n\n  if (innerParams.inputValidator) {\n    instance.disableInput();\n    var validationPromise = Promise.resolve().then(function () {\n      return innerParams.inputValidator(inputValue, innerParams.validationMessage);\n    });\n    validationPromise.then(function (validationMessage) {\n      instance.enableButtons();\n      instance.enableInput();\n\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else {\n        confirm(instance, innerParams, inputValue);\n      }\n    });\n  } else if (!instance.getInput().checkValidity()) {\n    instance.enableButtons();\n    instance.showValidationMessage(innerParams.validationMessage);\n  } else {\n    confirm(instance, innerParams, inputValue);\n  }\n};\n\nvar succeedWith = function succeedWith(instance, value) {\n  instance.closePopup({\n    value: value\n  });\n};\n\nvar confirm = function confirm(instance, innerParams, value) {\n  if (innerParams.showLoaderOnConfirm) {\n    showLoading(); // TODO: make showLoading an *instance* method\n  }\n\n  if (innerParams.preConfirm) {\n    instance.resetValidationMessage();\n    var preConfirmPromise = Promise.resolve().then(function () {\n      return innerParams.preConfirm(value, innerParams.validationMessage);\n    });\n    preConfirmPromise.then(function (preConfirmValue) {\n      if (isVisible(getValidationMessage()) || preConfirmValue === false) {\n        instance.hideLoading();\n      } else {\n        succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n      }\n    });\n  } else {\n    succeedWith(instance, value);\n  }\n};\n\nvar addKeydownHandler = function addKeydownHandler(instance, globalState, innerParams, dismissWith) {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = false;\n  }\n\n  if (!innerParams.toast) {\n    globalState.keydownHandler = function (e) {\n      return keydownHandler(instance, e, innerParams, dismissWith);\n    };\n\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = true;\n  }\n}; // Focus handling\n\nvar setFocus = function setFocus(innerParams, index, increment) {\n  var focusableElements = getFocusableElements(); // search for visible elements and select the next possible match\n\n  for (var i = 0; i < focusableElements.length; i++) {\n    index = index + increment; // rollover to first item\n\n    if (index === focusableElements.length) {\n      index = 0; // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1;\n    }\n\n    return focusableElements[index].focus();\n  } // no visible focusable elements, focus the popup\n\n\n  getPopup().focus();\n};\nvar arrowKeys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Left', 'Right', 'Up', 'Down' // IE11\n];\nvar escKeys = ['Escape', 'Esc' // IE11\n];\n\nvar keydownHandler = function keydownHandler(instance, e, innerParams, dismissWith) {\n  if (innerParams.stopKeydownPropagation) {\n    e.stopPropagation();\n  } // ENTER\n\n\n  if (e.key === 'Enter') {\n    handleEnter(instance, e, innerParams); // TAB\n  } else if (e.key === 'Tab') {\n    handleTab(e, innerParams); // ARROWS - switch focus between buttons\n  } else if (arrowKeys.indexOf(e.key) !== -1) {\n    handleArrows(); // ESC\n  } else if (escKeys.indexOf(e.key) !== -1) {\n    handleEsc(e, innerParams, dismissWith);\n  }\n};\n\nvar handleEnter = function handleEnter(instance, e, innerParams) {\n  // #720 #721\n  if (e.isComposing) {\n    return;\n  }\n\n  if (e.target && instance.getInput() && e.target.outerHTML === instance.getInput().outerHTML) {\n    if (['textarea', 'file'].indexOf(innerParams.input) !== -1) {\n      return; // do not submit\n    }\n\n    clickConfirm();\n    e.preventDefault();\n  }\n};\n\nvar handleTab = function handleTab(e, innerParams) {\n  var targetElement = e.target;\n  var focusableElements = getFocusableElements();\n  var btnIndex = -1;\n\n  for (var i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i;\n      break;\n    }\n  }\n\n  if (!e.shiftKey) {\n    // Cycle to the next button\n    setFocus(innerParams, btnIndex, 1);\n  } else {\n    // Cycle to the prev button\n    setFocus(innerParams, btnIndex, -1);\n  }\n\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nvar handleArrows = function handleArrows() {\n  var confirmButton = getConfirmButton();\n  var cancelButton = getCancelButton(); // focus Cancel button if Confirm button is currently focused\n\n  if (document.activeElement === confirmButton && isVisible(cancelButton)) {\n    cancelButton.focus(); // and vice versa\n  } else if (document.activeElement === cancelButton && isVisible(confirmButton)) {\n    confirmButton.focus();\n  }\n};\n\nvar handleEsc = function handleEsc(e, innerParams, dismissWith) {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    e.preventDefault();\n    dismissWith(DismissReason.esc);\n  }\n};\n\nvar handlePopupClick = function handlePopupClick(domCache, innerParams, dismissWith) {\n  if (innerParams.toast) {\n    handleToastClick(domCache, innerParams, dismissWith);\n  } else {\n    // Ignore click events that had mousedown on the popup but mouseup on the container\n    // This can happen when the user drags a slider\n    handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup\n\n    handleContainerMousedown(domCache);\n    handleModalClick(domCache, innerParams, dismissWith);\n  }\n};\n\nvar handleToastClick = function handleToastClick(domCache, innerParams, dismissWith) {\n  // Closing toast by internal click\n  domCache.popup.onclick = function () {\n    if (innerParams.showConfirmButton || innerParams.showCancelButton || innerParams.showCloseButton || innerParams.input) {\n      return;\n    }\n\n    dismissWith(DismissReason.close);\n  };\n};\n\nvar ignoreOutsideClick = false;\n\nvar handleModalMousedown = function handleModalMousedown(domCache) {\n  domCache.popup.onmousedown = function () {\n    domCache.container.onmouseup = function (e) {\n      domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't\n      // have any other direct children aside of the popup\n\n      if (e.target === domCache.container) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\n\nvar handleContainerMousedown = function handleContainerMousedown(domCache) {\n  domCache.container.onmousedown = function () {\n    domCache.popup.onmouseup = function (e) {\n      domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup\n\n      if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\n\nvar handleModalClick = function handleModalClick(domCache, innerParams, dismissWith) {\n  domCache.container.onclick = function (e) {\n    if (ignoreOutsideClick) {\n      ignoreOutsideClick = false;\n      return;\n    }\n\n    if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n      dismissWith(DismissReason.backdrop);\n    }\n  };\n};\n\nfunction _main(userParams) {\n  showWarningsForParams(userParams); // Check if there is another Swal closing\n\n  if (getPopup() && globalState.swalCloseEventFinishedCallback) {\n    globalState.swalCloseEventFinishedCallback();\n    delete globalState.swalCloseEventFinishedCallback;\n  } // Check if there is a swal disposal defer timer\n\n\n  if (globalState.deferDisposalTimer) {\n    clearTimeout(globalState.deferDisposalTimer);\n    delete globalState.deferDisposalTimer;\n  }\n\n  var innerParams = prepareParams(userParams);\n  setParameters(innerParams);\n  Object.freeze(innerParams); // clear the previous timer\n\n  if (globalState.timeout) {\n    globalState.timeout.stop();\n    delete globalState.timeout;\n  } // clear the restore focus timeout\n\n\n  clearTimeout(globalState.restoreFocusTimeout);\n  var domCache = populateDomCache(this);\n  render(this, innerParams);\n  privateProps.innerParams.set(this, innerParams);\n  return swalPromise(this, domCache, innerParams);\n}\n\nvar prepareParams = function prepareParams(userParams) {\n  var showClass = _extends({}, defaultParams.showClass, userParams.showClass);\n\n  var hideClass = _extends({}, defaultParams.hideClass, userParams.hideClass);\n\n  var params = _extends({}, defaultParams, userParams);\n\n  params.showClass = showClass;\n  params.hideClass = hideClass; // @deprecated\n\n  if (userParams.animation === false) {\n    params.showClass = {\n      popup: '',\n      backdrop: 'swal2-backdrop-show swal2-noanimation'\n    };\n    params.hideClass = {};\n  }\n\n  return params;\n};\n\nvar swalPromise = function swalPromise(instance, domCache, innerParams) {\n  return new Promise(function (resolve) {\n    // functions to handle all closings/dismissals\n    var dismissWith = function dismissWith(dismiss) {\n      instance.closePopup({\n        dismiss: dismiss\n      });\n    };\n\n    privateMethods.swalPromiseResolve.set(instance, resolve);\n    setupTimer(globalState, innerParams, dismissWith);\n\n    domCache.confirmButton.onclick = function () {\n      return handleConfirmButtonClick(instance, innerParams);\n    };\n\n    domCache.cancelButton.onclick = function () {\n      return handleCancelButtonClick(instance, dismissWith);\n    };\n\n    domCache.closeButton.onclick = function () {\n      return dismissWith(DismissReason.close);\n    };\n\n    handlePopupClick(domCache, innerParams, dismissWith);\n    addKeydownHandler(instance, globalState, innerParams, dismissWith);\n\n    if (innerParams.toast && (innerParams.input || innerParams.footer || innerParams.showCloseButton)) {\n      addClass(document.body, swalClasses['toast-column']);\n    } else {\n      removeClass(document.body, swalClasses['toast-column']);\n    }\n\n    handleInputOptionsAndValue(instance, innerParams);\n    openPopup(innerParams);\n    initFocus(domCache, innerParams); // Scroll container to top on open (#1247)\n\n    domCache.container.scrollTop = 0;\n  });\n};\n\nvar populateDomCache = function populateDomCache(instance) {\n  var domCache = {\n    popup: getPopup(),\n    container: getContainer(),\n    content: getContent(),\n    actions: getActions(),\n    confirmButton: getConfirmButton(),\n    cancelButton: getCancelButton(),\n    closeButton: getCloseButton(),\n    validationMessage: getValidationMessage(),\n    progressSteps: getProgressSteps()\n  };\n  privateProps.domCache.set(instance, domCache);\n  return domCache;\n};\n\nvar setupTimer = function setupTimer(globalState$$1, innerParams, dismissWith) {\n  var timerProgressBar = getTimerProgressBar();\n  hide(timerProgressBar);\n\n  if (innerParams.timer) {\n    globalState$$1.timeout = new Timer(function () {\n      dismissWith('timer');\n      delete globalState$$1.timeout;\n    }, innerParams.timer);\n\n    if (innerParams.timerProgressBar) {\n      show(timerProgressBar);\n      setTimeout(function () {\n        animateTimerProgressBar(innerParams.timer);\n      });\n    }\n  }\n};\n\nvar initFocus = function initFocus(domCache, innerParams) {\n  if (innerParams.toast) {\n    return;\n  }\n\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return blurActiveElement();\n  }\n\n  if (innerParams.focusCancel && isVisible(domCache.cancelButton)) {\n    return domCache.cancelButton.focus();\n  }\n\n  if (innerParams.focusConfirm && isVisible(domCache.confirmButton)) {\n    return domCache.confirmButton.focus();\n  }\n\n  setFocus(innerParams, -1, 1);\n};\n\nvar blurActiveElement = function blurActiveElement() {\n  if (document.activeElement && typeof document.activeElement.blur === 'function') {\n    document.activeElement.blur();\n  }\n};\n\n/**\n * Updates popup parameters.\n */\n\nfunction update(params) {\n  var popup = getPopup();\n  var innerParams = privateProps.innerParams.get(this);\n\n  if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n    return warn(\"You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.\");\n  }\n\n  var validUpdatableParams = {}; // assign valid params from `params` to `defaults`\n\n  Object.keys(params).forEach(function (param) {\n    if (Swal.isUpdatableParameter(param)) {\n      validUpdatableParams[param] = params[param];\n    } else {\n      warn(\"Invalid parameter to update: \\\"\".concat(param, \"\\\". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\"));\n    }\n  });\n\n  var updatedParams = _extends({}, innerParams, validUpdatableParams);\n\n  render(this, updatedParams);\n  privateProps.innerParams.set(this, updatedParams);\n  Object.defineProperties(this, {\n    params: {\n      value: _extends({}, this.params, params),\n      writable: false,\n      enumerable: true\n    }\n  });\n}\n\n\n\nvar instanceMethods = Object.freeze({\n\thideLoading: hideLoading,\n\tdisableLoading: hideLoading,\n\tgetInput: getInput$1,\n\tclose: close,\n\tclosePopup: close,\n\tcloseModal: close,\n\tcloseToast: close,\n\tenableButtons: enableButtons,\n\tdisableButtons: disableButtons,\n\tenableInput: enableInput,\n\tdisableInput: disableInput,\n\tshowValidationMessage: showValidationMessage,\n\tresetValidationMessage: resetValidationMessage$1,\n\tgetProgressSteps: getProgressSteps$1,\n\t_main: _main,\n\tupdate: update\n});\n\nvar currentInstance; // SweetAlert constructor\n\nfunction SweetAlert() {\n  // Prevent run in Node env\n\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    return;\n  } // Check for the existence of Promise\n\n  /* istanbul ignore if */\n\n\n  if (typeof Promise === 'undefined') {\n    error('This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)');\n  }\n\n  currentInstance = this;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var outerParams = Object.freeze(this.constructor.argsToParams(args));\n  Object.defineProperties(this, {\n    params: {\n      value: outerParams,\n      writable: false,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  var promise = this._main(this.params);\n\n  privateProps.promise.set(this, promise);\n} // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n\n\nSweetAlert.prototype.then = function (onFulfilled) {\n  var promise = privateProps.promise.get(this);\n  return promise.then(onFulfilled);\n};\n\nSweetAlert.prototype[\"finally\"] = function (onFinally) {\n  var promise = privateProps.promise.get(this);\n  return promise[\"finally\"](onFinally);\n}; // Assign instance methods from src/instanceMethods/*.js to prototype\n\n\n_extends(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor\n\n\n_extends(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility\n\n\nObject.keys(instanceMethods).forEach(function (key) {\n  SweetAlert[key] = function () {\n    if (currentInstance) {\n      var _currentInstance;\n\n      return (_currentInstance = currentInstance)[key].apply(_currentInstance, arguments);\n    }\n  };\n});\nSweetAlert.DismissReason = DismissReason;\nSweetAlert.version = '9.4.2';\n\nvar Swal = SweetAlert;\nSwal[\"default\"] = Swal;\n\nreturn Swal;\n\n})));\nif (typeof this !== 'undefined' && this.Sweetalert2){  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\".swal2-popup.swal2-toast{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;width:auto;padding:.625em;overflow-y:hidden;background:#fff;box-shadow:0 0 .625em #d9d9d9}.swal2-popup.swal2-toast .swal2-header{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.swal2-popup.swal2-toast .swal2-title{-webkit-box-flex:1;flex-grow:1;-webkit-box-pack:start;justify-content:flex-start;margin:0 .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{position:static;width:.8em;height:.8em;line-height:.8}.swal2-popup.swal2-toast .swal2-content{-webkit-box-pack:start;justify-content:flex-start;font-size:1em}.swal2-popup.swal2-toast .swal2-icon{width:2em;min-width:2em;height:2em;margin:0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;font-size:1.8em;font-weight:700}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{font-size:.25em}}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{flex-basis:auto!important;width:auto;height:auto;margin:0 .3125em}.swal2-popup.swal2-toast .swal2-styled{margin:0 .3125em;padding:.3125em .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(50,100,150,.4)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:2em 2em;transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;-webkit-transform-origin:0 1.5em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:-webkit-box;display:flex;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;padding:.625em;overflow-x:hidden;-webkit-transition:background-color .1s;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-top{-webkit-box-align:start;align-items:flex-start}.swal2-container.swal2-top-left,.swal2-container.swal2-top-start{-webkit-box-align:start;align-items:flex-start;-webkit-box-pack:start;justify-content:flex-start}.swal2-container.swal2-top-end,.swal2-container.swal2-top-right{-webkit-box-align:start;align-items:flex-start;-webkit-box-pack:end;justify-content:flex-end}.swal2-container.swal2-center{-webkit-box-align:center;align-items:center}.swal2-container.swal2-center-left,.swal2-container.swal2-center-start{-webkit-box-align:center;align-items:center;-webkit-box-pack:start;justify-content:flex-start}.swal2-container.swal2-center-end,.swal2-container.swal2-center-right{-webkit-box-align:center;align-items:center;-webkit-box-pack:end;justify-content:flex-end}.swal2-container.swal2-bottom{-webkit-box-align:end;align-items:flex-end}.swal2-container.swal2-bottom-left,.swal2-container.swal2-bottom-start{-webkit-box-align:end;align-items:flex-end;-webkit-box-pack:start;justify-content:flex-start}.swal2-container.swal2-bottom-end,.swal2-container.swal2-bottom-right{-webkit-box-align:end;align-items:flex-end;-webkit-box-pack:end;justify-content:flex-end}.swal2-container.swal2-bottom-end>:first-child,.swal2-container.swal2-bottom-left>:first-child,.swal2-container.swal2-bottom-right>:first-child,.swal2-container.swal2-bottom-start>:first-child,.swal2-container.swal2-bottom>:first-child{margin-top:auto}.swal2-container.swal2-grow-fullscreen>.swal2-modal{display:-webkit-box!important;display:flex!important;-webkit-box-flex:1;flex:1;align-self:stretch;-webkit-box-pack:center;justify-content:center}.swal2-container.swal2-grow-row>.swal2-modal{display:-webkit-box!important;display:flex!important;-webkit-box-flex:1;flex:1;align-content:center;-webkit-box-pack:center;justify-content:center}.swal2-container.swal2-grow-column{-webkit-box-flex:1;flex:1;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.swal2-container.swal2-grow-column.swal2-bottom,.swal2-container.swal2-grow-column.swal2-center,.swal2-container.swal2-grow-column.swal2-top{-webkit-box-align:center;align-items:center}.swal2-container.swal2-grow-column.swal2-bottom-left,.swal2-container.swal2-grow-column.swal2-bottom-start,.swal2-container.swal2-grow-column.swal2-center-left,.swal2-container.swal2-grow-column.swal2-center-start,.swal2-container.swal2-grow-column.swal2-top-left,.swal2-container.swal2-grow-column.swal2-top-start{-webkit-box-align:start;align-items:flex-start}.swal2-container.swal2-grow-column.swal2-bottom-end,.swal2-container.swal2-grow-column.swal2-bottom-right,.swal2-container.swal2-grow-column.swal2-center-end,.swal2-container.swal2-grow-column.swal2-center-right,.swal2-container.swal2-grow-column.swal2-top-end,.swal2-container.swal2-grow-column.swal2-top-right{-webkit-box-align:end;align-items:flex-end}.swal2-container.swal2-grow-column>.swal2-modal{display:-webkit-box!important;display:flex!important;-webkit-box-flex:1;flex:1;align-content:center;-webkit-box-pack:center;justify-content:center}.swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right):not(.swal2-grow-fullscreen)>.swal2-modal{margin:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-container .swal2-modal{margin:0!important}}.swal2-popup{display:none;position:relative;box-sizing:border-box;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;width:32em;max-width:100%;padding:1.25em;border:none;border-radius:.3125em;background:#fff;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-header{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center}.swal2-title{position:relative;max-width:100%;margin:0 0 .4em;padding:0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:-webkit-box;display:flex;z-index:1;flex-wrap:wrap;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;width:100%;margin:1.25em auto 0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.1)),to(rgba(0,0,0,.1)));background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.2)),to(rgba(0,0,0,.2)));background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-actions.swal2-loading .swal2-styled.swal2-confirm{box-sizing:border-box;width:2.5em;height:2.5em;margin:.46875em;padding:0;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border:.25em solid transparent;border-radius:100%;border-color:transparent;background-color:transparent!important;color:transparent;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-actions.swal2-loading .swal2-styled.swal2-cancel{margin-right:30px;margin-left:30px}.swal2-actions.swal2-loading :not(.swal2-styled).swal2-confirm::after{content:\\\"\\\";display:inline-block;width:15px;height:15px;margin-left:5px;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border:3px solid #999;border-radius:50%;border-right-color:transparent;box-shadow:1px 1px 1px #fff}.swal2-styled{margin:.3125em;padding:.625em 2em;box-shadow:none;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#3085d6;color:#fff;font-size:1.0625em}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#aaa;color:#fff;font-size:1.0625em}.swal2-styled:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(50,100,150,.4)}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{-webkit-box-pack:center;justify-content:center;margin:1.25em 0 0;padding:1em 0 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-timer-progress-bar{position:absolute;bottom:0;left:0;width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:1.25em auto}.swal2-close{position:absolute;z-index:2;top:0;right:0;-webkit-box-pack:center;justify-content:center;width:1.2em;height:1.2em;padding:0;overflow:hidden;-webkit-transition:color .1s ease-out;transition:color .1s ease-out;border:none;border-radius:0;outline:initial;background:0 0;color:#ccc;font-family:serif;font-size:2.5em;line-height:1.2;cursor:pointer}.swal2-close:hover{-webkit-transform:none;transform:none;background:0 0;color:#f27474}.swal2-close::-moz-focus-inner{border:0}.swal2-content{z-index:1;-webkit-box-pack:center;justify-content:center;margin:0;padding:0;color:#545454;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em auto}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:100%;-webkit-transition:border-color .3s,box-shadow .3s;transition:border-color .3s,box-shadow .3s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06);color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:0 0 3px #c4e6f5}.swal2-file::-webkit-input-placeholder,.swal2-input::-webkit-input-placeholder,.swal2-textarea::-webkit-input-placeholder{color:#ccc}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::-ms-input-placeholder,.swal2-input::-ms-input-placeholder,.swal2-textarea::-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em auto;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-input[type=number]{max-width:10em}.swal2-file{background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{margin:0 .4em}.swal2-validation-message{display:none;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;-webkit-box-pack:center;justify-content:center;width:5em;height:5em;margin:1.25em auto 1.875em;border:.25em solid transparent;border-radius:50%;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;-webkit-box-flex:1;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:3.75em 3.75em;transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 3.75em;transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.875em;width:1.5625em;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{-webkit-box-align:center;align-items:center;margin:0 0 1.25em;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;width:2em;height:2em;border-radius:2em;background:#3085d6;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#3085d6}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;width:2.5em;height:.4em;margin:0 -1px;background:#3085d6}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{-webkit-transition:none;transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{right:auto;left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@supports (-ms-accelerator:true){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@-moz-document url-prefix(){.swal2-close:focus{outline:2px solid rgba(50,100,150,.4)}}@-webkit-keyframes swal2-toast-show{0%{-webkit-transform:translateY(-.625em) rotateZ(2deg);transform:translateY(-.625em) rotateZ(2deg)}33%{-webkit-transform:translateY(0) rotateZ(-2deg);transform:translateY(0) rotateZ(-2deg)}66%{-webkit-transform:translateY(.3125em) rotateZ(2deg);transform:translateY(.3125em) rotateZ(2deg)}100%{-webkit-transform:translateY(0) rotateZ(0);transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{-webkit-transform:translateY(-.625em) rotateZ(2deg);transform:translateY(-.625em) rotateZ(2deg)}33%{-webkit-transform:translateY(0) rotateZ(-2deg);transform:translateY(0) rotateZ(-2deg)}66%{-webkit-transform:translateY(.3125em) rotateZ(2deg);transform:translateY(.3125em) rotateZ(2deg)}100%{-webkit-transform:translateY(0) rotateZ(0);transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{-webkit-transform:rotateZ(1deg);transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{-webkit-transform:rotateZ(1deg);transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{-webkit-transform:scale(.7);transform:scale(.7)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes swal2-show{0%{-webkit-transform:scale(.7);transform:scale(.7)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(.5);transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(.5);transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.875em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.875em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}100%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}100%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}50%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}80%{margin-top:-.375em;-webkit-transform:scale(1.15);transform:scale(1.15)}100%{margin-top:0;-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}50%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}80%{margin-top:-.375em;-webkit-transform:scale(1.15);transform:scale(1.15)}100%{margin-top:0;-webkit-transform:scale(1);transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}100%{-webkit-transform:rotateX(0);transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}100%{-webkit-transform:rotateX(0);transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{top:auto;right:auto;bottom:auto;left:auto;max-width:calc(100% - .625em * 2);background-color:transparent!important}body.swal2-no-backdrop .swal2-container>.swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}body.swal2-no-backdrop .swal2-container.swal2-top{top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-top-left,body.swal2-no-backdrop .swal2-container.swal2-top-start{top:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-top-end,body.swal2-no-backdrop .swal2-container.swal2-top-right{top:0;right:0}body.swal2-no-backdrop .swal2-container.swal2-center{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-left,body.swal2-no-backdrop .swal2-container.swal2-center-start{top:50%;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-end,body.swal2-no-backdrop .swal2-container.swal2-center-right{top:50%;right:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom{bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom-left,body.swal2-no-backdrop .swal2-container.swal2-bottom-start{bottom:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-bottom-end,body.swal2-no-backdrop .swal2-container.swal2-bottom-right{right:0;bottom:0}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}body.swal2-toast-column .swal2-toast{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:stretch;align-items:stretch}body.swal2-toast-column .swal2-toast .swal2-actions{-webkit-box-flex:1;flex:1;align-self:stretch;height:2.2em;margin-top:.3125em}body.swal2-toast-column .swal2-toast .swal2-loading{-webkit-box-pack:center;justify-content:center}body.swal2-toast-column .swal2-toast .swal2-input{height:2em;margin:.3125em auto;font-size:1em}body.swal2-toast-column .swal2-toast .swal2-validation-message{font-size:1em}\");","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AnalysisRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-analysis',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AnalysisComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AnalysisRoutingModule} from './analysis-routing.module';\nimport {AnalysisComponent} from './analysis.component';\nimport {RouterModule} from \"@angular/router\";\n\n\n@NgModule({\n  declarations: [\n    AnalysisComponent,\n  ],\n  imports: [\n    CommonModule,\n    AnalysisRoutingModule,\n    RouterModule,\n  ],\n})\nexport class AnalysisModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9leGFtL2RldGFpbC9kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'ngx-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss'],\n})\nexport class DetailComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {EditorComponent} from './editor.component';\nimport {ExamEditorComponent} from './exam-editor/exam-editor.component';\nimport {QuestionEditorComponent} from './question-editor/question-editor.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: EditorComponent,\n  children: [\n    {\n      path: 'exam-editor',\n      component: ExamEditorComponent,\n    },\n    {\n      path: 'question-editor',\n      component: QuestionEditorComponent,\n    },\n    {\n      path: '',\n      redirectTo: 'exam-editor',\n      pathMatch: 'full',\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditorRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editor',\n  template: '<router-outlet></router-outlet>',\n})\nexport class EditorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {EditorRoutingModule} from './editor-routing.module';\nimport {EditorComponent} from './editor.component';\nimport {ExamEditorComponent} from './exam-editor/exam-editor.component';\nimport {QuestionEditorComponent} from './question-editor/question-editor.component';\nimport {NbAccordionModule, NbCardModule} from '@nebular/theme';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    EditorComponent,\n    ExamEditorComponent,\n    QuestionEditorComponent,\n  ],\n  imports: [\n    EditorRoutingModule,\n    NbCardModule,\n    FormsModule,\n    CommonModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatTableModule,\n    MatTabsModule,\n    NbAccordionModule,\n    MatSelectModule,\n  ],\n})\nexport class EditorModule { }\n","module.exports = \"mat-form-field {\\n  width: 100%; }\\n\\n.form-field {\\n  margin: 1rem 0; }\\n\\nth, td {\\n  text-align: center; }\\n\\n.add-subject {\\n  display: block;\\n  margin: auto; }\\n\\n.question-order {\\n  position: absolute; }\\n\\n.option {\\n  min-width: 90%; }\\n\\n.option i {\\n  font-size: 1.5rem; }\\n\\n.bg-success {\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbHlhc3ppeWFvZ2x1L0Rlc2t0b3AvcGVyc29uYWxfcHJvamVjdHMvZXhhbS9leGFtLWNsaWVudC9zcmMvYXBwL3BhZ2VzL2V4YW0vZWRpdG9yL2V4YW0tZWRpdG9yL2V4YW0tZWRpdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGNBQWM7RUFDZCxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxjQUFjLEVBQUE7O0FBR2hCO0VBQ0UsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsWUFBWSxFQUFBIiwiZmlsZSI6Ii4uL2V4YW0vZWRpdG9yL2V4YW0tZWRpdG9yL2V4YW0tZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm0tZmllbGQge1xuICBtYXJnaW46IDFyZW0gMDtcbn1cblxudGgsIHRkIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYWRkLXN1YmplY3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4ucXVlc3Rpb24tb3JkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5vcHRpb24ge1xuICBtaW4td2lkdGg6IDkwJTtcbn1cblxuLm9wdGlvbiBpIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG59XG5cbi5iZy1zdWNjZXNzIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport {Exam, ExamService} from '../exam-service/exam.service';\n\n@Component({\n  selector: 'ngx-exam-editor',\n  templateUrl: './exam-editor.component.html',\n  styleUrls: ['./exam-editor.component.scss'],\n})\nexport class ExamEditorComponent implements OnInit {\n\n  generalExamInfoEditMode = true;\n  examProperties: string[] = ['name', 'type', 'date', 'time', 'duration', 'price'];\n  examPropertyTypes: string[] = ['text', 'text', 'date', 'time', 'time', 'number'];\n  examGeneralInfoForm = this.fb.group({\n    name: [, Validators.required],\n    type: [, Validators.required],\n    date: [, Validators.required],\n    time: [, Validators.required],\n    duration: [, Validators.required],\n    price: [, Validators.required],\n  });\n\n  subjects: any[];\n\n  subjectProperties: string[] = ['name', 'question_Count', 'order'];\n  subjectPropertyTypes: string[] = ['text', 'number', 'number'];\n  subjectsForm = this.fb.group({\n    name: [, Validators.required],\n    question_Count: [, Validators.required],\n    order: [, Validators.required],\n  });\n  questions: any[] = [];\n  optionLabels: string[] = ['A) ', 'B) ', 'C) ', 'D) ', 'E) '];\n  private exam: Exam;\n\n  constructor(\n    private fb: FormBuilder,\n    private examService: ExamService,\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.examService.currentSubject.subscribe(subject => {\n      this.subjects = subject;\n    });\n\n    this.examService.examObserver.subscribe(exam => {\n      this.exam = exam;\n      this.questions = exam.subjects[0].questions;\n    });\n  }\n\n  onSubmitExamGeneralInfo() {\n    if (this.examGeneralInfoForm.valid) {\n      this.generalExamInfoEditMode = false;\n      // save exam general info to db\n    } else {\n      this.examGeneralInfoForm.markAllAsTouched();\n    }\n  }\n\n  onSubmitSubjects() {\n    // save to db\n  }\n\n  onSubmitNewSubject() {\n    const self = this;\n    if (self.subjectsForm.valid) {\n      const newSubject = {\n        name: self.subjectsForm.get('name').value,\n        question_Count: self.subjectsForm.get('question_Count').value,\n        order: self.subjectsForm.get('order').value,\n      };\n\n      self.subjects.push(newSubject);\n      self.subjectsForm.reset();\n    } else {\n      this.subjectsForm.markAllAsTouched();\n    }\n  }\n\n  removeSubject(subject) {\n    const self = this;\n    self.subjects = self.subjects.filter(value => subject.name !== value.name);\n  }\n\n  onSubjecChanged(subject: any) {\n    // filter questions to show\n  }\n\n  onQuestionDelete(question) {\n    const self = this;\n    Swal.fire({\n      title: 'Warning',\n      icon: 'warning',\n      text: 'Are you sure to delete this question?',\n      confirmButtonText: 'Yes',\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.value) {\n        self.questions = self.questions.filter(value => value.id !== question.id);\n        Swal.fire(\n          'Deleted!',\n          'Question has been deleted.',\n          'success',\n        );\n      }\n    });\n  }\n\n  onAddNewQuestion() {\n\n  }\n\n  onQuestionEdit(question) {\n    this.examService.changeCurrentQuestion(question);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nexport class Option {\n  id: number;\n  type: string;\n  body: string;\n  imageUrl: string;\n  isTrue: boolean;\n}\n\nexport class Question {\n  id: number;\n  order: number;\n  body: string;\n  options: Option[];\n}\n\nexport class Subject {\n  id: number;\n  order: number;\n  name: string;\n  question_Count: number;\n  questions: Question[];\n}\n\nexport class Exam {\n  name: string;\n  type: string;\n  code: string;\n  date: Date;\n  duration: number;\n  price: number;\n  subjects: Subject[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExamService {\n\n  exam: Exam = {\n    name: 'Exam Name',\n    type: 'Exam Type',\n    code: 'Exam Code',\n    date: new Date(),\n    duration: 125,\n    price: 25,\n    subjects: [\n      {id: 1, name: 'Matematik', question_Count: 25, order: 1, questions: []},\n      {id: 2, name: 'Fizik', question_Count: 10, order: 2, questions: []},\n      {id: 3, name: 'Kimya', question_Count: 30, order: 3, questions: []},\n      {id: 4, name: 'Ana Dili', question_Count: 40, order: 4, questions: []},\n      {id: 5, name: 'Yabanci Dil', question_Count: 55, order: 5, questions: []},\n    ],\n  };\n\n  private questionSource = new BehaviorSubject<any>({});\n  currentQuestion = this.questionSource.asObservable();\n\n  private subjectSource = new BehaviorSubject<any[]>(this.exam.subjects);\n  currentSubject = this.subjectSource.asObservable();\n\n  private examSource = new BehaviorSubject<Exam>(this.exam);\n  examObserver = this.examSource.asObservable();\n\n  constructor(\n  ) {\n    this.exam = this.generateRandomQuestions(this.exam);\n  }\n\n  generateRandomQuestions(exam: Exam) {\n    exam.subjects.forEach(subject => {\n\n      for (let i = 1; i <= subject.question_Count; i++) {\n        const newQuestion: Question = {\n          id: i,\n          order: i,\n          body: 'Lorem Ipsum, dizgi ve baskı endüstrisinde kullanılan mıgır metinlerdir. ' +\n            'Lorem Ipsum, adı bilinmeyen bir matbaacının bir hurufat numune kitabı oluşturmak ' +\n            'üzere bir yazı galerisini alarak karıştırdığı 1500\\'lerden beri',\n          options: [],\n        };\n\n        for (let j = 0; j < 5; j++) {\n          newQuestion.options.push({\n            id: i * 5 + j,\n            type: '',\n            body: 'Option',\n            imageUrl: '',\n            isTrue: false,\n          });\n        }\n\n        newQuestion.options[Math.floor(Math.random() * 10 / 2)].isTrue = true;\n\n        subject.questions.push(newQuestion);\n      }\n    });\n    return exam;\n  }\n\n  getQuestion(i: number) {\n    return {\n      id: i,\n      order: i,\n      body: 'Bu ' + i + '. sorudur bilinmeyen bir matbaacının bir hurufat numune kitabı oluşturmak üzere bir yazı galerisini alarak karıştırdığı 1500\\'lerden beri',\n      options: [\n        {\n          body: 'perspiciatis',\n          isTrue: false,\n        },\n        {\n          body: 'nostrum',\n          isTrue: true,\n        },\n        {\n          body: 'tempor',\n          isTrue: false,\n        },\n        {\n          body: 'painful',\n          isTrue: false,\n        },\n        {\n          body: 'eos',\n          isTrue: false,\n        },\n      ],\n    };\n  }\n\n  changeCurrentQuestion(question: any) {\n    this.questionSource.next(question);\n  }\n\n  changeQuestionOrder(order: number) {\n    this.questionSource.next(this.getQuestion(order));\n  }\n}\n","module.exports = \".paginationo {\\n  border-radius: 50px !important; }\\n\\n.rounded-button {\\n  text-align: center;\\n  width: 35px;\\n  height: 35px;\\n  border-radius: 100%;\\n  display: inline-flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  margin: .15rem;\\n  font-weight: bold;\\n  font-size: 12px;\\n  text-decoration: none; }\\n\\n.true-color {\\n  color: aqua;\\n  font-size: large;\\n  border-radius: 100%;\\n  border-color: red; }\\n\\n.false-color {\\n  color: red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbHlhc3ppeWFvZ2x1L0Rlc2t0b3AvcGVyc29uYWxfcHJvamVjdHMvZXhhbS9leGFtLWNsaWVudC9zcmMvYXBwL3BhZ2VzL2V4YW0vZWRpdG9yL3F1ZXN0aW9uLWVkaXRvci9xdWVzdGlvbi1lZGl0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBOEIsRUFBQTs7QUFHaEM7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLHFCQUFxQixFQUFBOztBQUd2QjtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLFVBQVUsRUFBQSIsImZpbGUiOiIuLi9leGFtL2VkaXRvci9xdWVzdGlvbi1lZGl0b3IvcXVlc3Rpb24tZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2luYXRpb25vIHtcbiAgYm9yZGVyLXJhZGl1czogNTBweCAhaW1wb3J0YW50O1xufVxuXG4ucm91bmRlZC1idXR0b24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAzNXB4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAuMTVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDEycHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnRydWUtY29sb3Ige1xuICBjb2xvcjogYXF1YTtcbiAgZm9udC1zaXplOiBsYXJnZTtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgYm9yZGVyLWNvbG9yOiByZWQ7XG59XG5cbi5mYWxzZS1jb2xvciB7XG4gIGNvbG9yOiByZWQ7XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Exam, ExamService} from '../exam-service/exam.service';\nimport {FormBuilder, FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'ngx-question-editor',\n  templateUrl: './question-editor.component.html',\n  styleUrls: ['./question-editor.component.scss'],\n})\nexport class QuestionEditorComponent implements OnInit {\n\n  question: any;\n  subjects: any[];\n  currentPage: number;\n  correctAnswerOrder: number;\n  pages = [1, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6];\n  private exam: Exam;\n\n  constructor(\n    private examService: ExamService,\n    private fb: FormBuilder,\n  ) {\n  }\n\n  subjectSelect = new FormControl('');\n\n  newOption() {\n    this.question.options.push({body: '', isTrue: false});\n  }\n\n  deleteOption(i: number) {\n    this.question.options.splice(i,1);\n  }\n\n  getArr(num: number) {\n    return new Array(num);\n  }\n\n  goToQuestion(order: number) {\n    this.examService.changeQuestionOrder(order);\n  }\n\n  correctOptionClick(i: number) {\n    for(let option of this.question.options) {\n      option.isTrue = false;\n    }\n    this.question.options[i].isTrue = true;\n  }\n\n  ngOnInit() {\n    this.examService.currentSubject.subscribe(subjects => {\n      this.subjects = subjects;\n    });\n\n    this.examService.currentQuestion.subscribe(question => {\n      this.question = question;\n      this.currentPage = question.order;\n    });\n\n    this.examService.examObserver.subscribe(exam => {\n      this.exam = exam;\n    });\n  }\n\n  onChangeSubject() {\n\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FilterComponent} from './filter/filter.component';\nimport {SearchComponent} from './search/search.component';\nimport {DetailComponent} from './detail/detail.component';\nimport {ResultComponent} from './result/result.component';\nimport {ExamComponent} from './exam.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: ExamComponent,\n  children: [\n    {\n      path: 'search',\n      component: SearchComponent,\n    },\n    {\n      path: 'filter',\n      component: FilterComponent,\n    },\n    {\n      path: 'detail',\n      component: DetailComponent,\n    },\n    {\n      path: 'result',\n      component: ResultComponent,\n    },\n    {\n      path: 'editor',\n      loadChildren: () => import('./editor/editor.module')\n        .then(m => m.EditorModule),\n    },\n    {\n      path: 'live-exam',\n      loadChildren: () => import('./live-exam/live-exam.module')\n        .then(m => m.LiveExamModule),\n    },\n    {\n      path: '',\n      redirectTo: 'search',\n      pathMatch: 'full',\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExamRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-exam',\n  template: '<router-outlet></router-outlet>',\n})\nexport class ExamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ExamRoutingModule} from './exam-routing.module';\nimport {DetailComponent} from './detail/detail.component';\nimport {SearchComponent} from './search/search.component';\nimport {FilterComponent} from './filter/filter.component';\nimport {ResultComponent} from './result/result.component';\nimport {ExamComponent} from './exam.component';\nimport {EditorModule} from './editor/editor.module';\nimport {LiveExamModule} from './live-exam/live-exam.module';\nimport {NbCardModule} from \"@nebular/theme\";\n\n\n@NgModule({\n  declarations: [\n    ExamComponent,\n    DetailComponent,\n    SearchComponent,\n    FilterComponent,\n    ResultComponent,\n  ],\n  imports: [\n    CommonModule,\n    ExamRoutingModule,\n    EditorModule,\n    LiveExamModule,\n    NbCardModule,\n  ],\n})\nexport class ExamModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9leGFtL2ZpbHRlci9maWx0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LiveExamComponent} from './live-exam.component';\nimport {SubjectComponent} from './subject/subject.component';\nimport {QuestionComponent} from './question/question.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: LiveExamComponent,\n  children: [\n    {\n      path: 'subject',\n      component: SubjectComponent,\n    },\n    {\n      path: 'question',\n      component: QuestionComponent,\n    },\n    {\n      path: '',\n      redirectTo: 'subject',\n      pathMatch: 'full',\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LiveExamRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-live-exam',\n  template: '<router-outlet></router-outlet>',\n})\nexport class LiveExamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SubjectComponent} from './subject/subject.component';\nimport {QuestionComponent} from './question/question.component';\nimport {LiveExamRoutingModule} from './live-exam-routing.module';\nimport {LiveExamComponent} from './live-exam.component';\n\n\n@NgModule({\n  declarations: [\n    SubjectComponent,\n    QuestionComponent,\n    LiveExamComponent,\n  ],\n  imports: [\n    CommonModule,\n    LiveExamRoutingModule,\n  ],\n})\nexport class LiveExamModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9leGFtL2xpdmUtZXhhbS9xdWVzdGlvbi9xdWVzdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9leGFtL2xpdmUtZXhhbS9zdWJqZWN0L3N1YmplY3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.scss']\n})\nexport class SubjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nexport class Option {\n  id: number;\n  type: string;\n  body: string;\n  imageUrl: string;\n}\n\nexport class Question {\n  id: number;\n  order: number;\n  body: string;\n  answer: number;\n  trueOption: number;\n  point: number;\n  options: Option[];\n}\n\nexport class Subject {\n  id: number;\n  order: number;\n  name: string;\n  trueCount: number;\n  falseCount: number;\n  question_Count: number;\n  blankCount: number;\n  score: number;\n  maxScore: number;\n  questions: Question[];\n}\n\nexport class ExamResult {\n  name: string;\n  type: string;\n  code: string;\n  date: Date;\n  score: number;\n  maxScore: number;\n  questionCount: number;\n  duration: number;\n  price: number;\n  trueCount: number;\n  falseCount: number;\n  blankCount: number;\n  subjects: Subject[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExamResultService {\n\n  examResult: ExamResult;\n\n  private examSource = new BehaviorSubject<ExamResult>(this.examResult);\n  examObserver = this.examSource.asObservable();\n\n  constructor() {\n  }\n\n  generateRandomExamResult(): ExamResult {\n\n    // Generate exam.\n    const exam: ExamResult = {\n      name: 'Exam Name',\n      type: 'Exam Type',\n      code: 'Exam Code',\n      date: new Date(),\n      duration: 0,\n      price: 25,\n      score: 0,\n      maxScore: 0,\n      trueCount: 0,\n      falseCount: 0,\n      blankCount: 0,\n      questionCount: 0,\n      subjects: [],\n    };\n\n    // Generate subjects.\n    const subjects = ['Matematik', 'Kimya', 'Fizik', 'Ana Dili', 'Yabanci Dil'];\n    for (let i = 0; i < subjects.length; i++) {\n      const subject: Subject = {\n        id: i + 1,\n        name: subjects[i],\n        question_Count: Math.floor(Math.random() * 40),\n        order: i + 1,\n        trueCount: 0,\n        falseCount: 0,\n        blankCount: 0,\n        score: 0,\n        maxScore: 0,\n        questions: [],\n      };\n      exam.subjects.push(subject);\n      exam.questionCount += subject.question_Count;\n    }\n\n    // Generate questions.\n    exam.subjects.forEach((subject, index) => {\n      for (let i = 1; i <= subject.question_Count; i++) {\n        const newQuestion: Question = {\n          id: i,\n          order: i,\n          point: 4 + Math.floor(Math.random() * 3),\n          answer: Math.floor(Math.random() * 5),\n          trueOption: Math.floor(Math.random() * 5),\n          body: 'Lorem Ipsum, dizgi ve baskı endüstrisinde kullanılan mıgır metinlerdir. ' +\n            'Lorem Ipsum, adı bilinmeyen bir matbaacının bir hurufat numune kitabı oluşturmak ' +\n            'üzere bir yazı galerisini alarak karıştırdığı 1500\\'lerden beri',\n          options: [],\n        };\n\n        for (let j = 0; j < 5; j++) {\n          newQuestion.options.push({\n            id: index * subject.question_Count + i * 5 + j,\n            type: '',\n            body: 'Option',\n            imageUrl: '',\n          });\n        }\n\n        subject.questions.push(newQuestion);\n      }\n    });\n    return exam;\n  }\n\n  calculateScore(examResult: ExamResult): ExamResult {\n    examResult.score = 0;\n    examResult.trueCount = 0;\n    examResult.falseCount = 0;\n    examResult.blankCount = 0;\n    examResult.maxScore = 0;\n\n    examResult.subjects.forEach(subject => {\n\n      subject.score = 0;\n      subject.trueCount = 0;\n      subject.falseCount = 0;\n      subject.blankCount = 0;\n      subject.maxScore = 0;\n\n      subject.questions.forEach(question => {\n        if (question.trueOption === question.answer) {\n          subject.score += question.point;\n          subject.trueCount++;\n        } else if (question.answer === null) {\n          subject.blankCount++;\n        } else {\n          subject.falseCount++;\n        }\n        subject.maxScore += question.point;\n      });\n\n      examResult.score += subject.score;\n      examResult.trueCount += subject.trueCount;\n      examResult.falseCount += subject.falseCount;\n      examResult.blankCount += subject.blankCount;\n      examResult.maxScore += subject.maxScore;\n    });\n\n    return examResult;\n  }\n\n  getQuestion(questionOrder: number, questionSubject: string) {\n    return this.examResult.subjects\n      .find(subject => subject.name === questionSubject).questions\n      .find(question => question.order === questionOrder);\n  }\n}\n","module.exports = \"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/*\\n  Declare variables before making them global.\\n  dart-sass doesn't allow to declare variable with !global.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-default :host nb-card-body {\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-default :host .location,\\n.nb-theme-default :host .date {\\n  display: block; }\\n.nb-theme-default :host .location {\\n  margin-bottom: 0.1rem; }\\n.nb-theme-default :host .today {\\n  display: flex;\\n  justify-content: space-around; }\\n.nb-theme-default :host .today-temperature {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  margin: 2rem 1.5rem; }\\n.nb-theme-default :host .today-icon {\\n  color: #3366ff;\\n  font-size: 10rem;\\n  line-height: 1;\\n  margin-top: -4rem;\\n  margin-left: auto;\\n  margin-right: 0.4rem; }\\n.nb-theme-default :host .today-details {\\n  display: flex;\\n  justify-content: space-around;\\n  margin-top: 2rem; }\\n.nb-theme-default :host .parameter {\\n  flex: 1 1 auto;\\n  text-align: center; }\\n.nb-theme-default :host .parameter-name,\\n.nb-theme-default :host .parameter-value {\\n  display: block; }\\n.nb-theme-default :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-default :host .weekly-forecast {\\n  display: flex;\\n  justify-content: space-around;\\n  margin: auto 0; }\\n.nb-theme-default :host .day {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-default :host .weather-icon {\\n  font-size: 1.5rem;\\n  line-height: 2.5rem; }\\n.nb-theme-default :host .question-check {\\n  max-width: 2.3rem; }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-dark :host nb-card-body {\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-dark :host .location,\\n.nb-theme-dark :host .date {\\n  display: block; }\\n.nb-theme-dark :host .location {\\n  margin-bottom: 0.1rem; }\\n.nb-theme-dark :host .today {\\n  display: flex;\\n  justify-content: space-around; }\\n.nb-theme-dark :host .today-temperature {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  margin: 2rem 1.5rem; }\\n.nb-theme-dark :host .today-icon {\\n  color: #3366ff;\\n  font-size: 10rem;\\n  line-height: 1;\\n  margin-top: -4rem;\\n  margin-left: auto;\\n  margin-right: 0.4rem; }\\n.nb-theme-dark :host .today-details {\\n  display: flex;\\n  justify-content: space-around;\\n  margin-top: 2rem; }\\n.nb-theme-dark :host .parameter {\\n  flex: 1 1 auto;\\n  text-align: center; }\\n.nb-theme-dark :host .parameter-name,\\n.nb-theme-dark :host .parameter-value {\\n  display: block; }\\n.nb-theme-dark :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-dark :host .weekly-forecast {\\n  display: flex;\\n  justify-content: space-around;\\n  margin: auto 0; }\\n.nb-theme-dark :host .day {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-dark :host .weather-icon {\\n  font-size: 1.5rem;\\n  line-height: 2.5rem; }\\n.nb-theme-dark :host .question-check {\\n  max-width: 2.3rem; }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-cosmic :host nb-card-body {\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-cosmic :host .location,\\n.nb-theme-cosmic :host .date {\\n  display: block; }\\n.nb-theme-cosmic :host .location {\\n  margin-bottom: 0.1rem; }\\n.nb-theme-cosmic :host .today {\\n  display: flex;\\n  justify-content: space-around; }\\n.nb-theme-cosmic :host .today-temperature {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  margin: 2rem 1.5rem; }\\n.nb-theme-cosmic :host .today-icon {\\n  color: #a16eff;\\n  font-size: 10rem;\\n  line-height: 1;\\n  margin-top: -4rem;\\n  margin-left: auto;\\n  margin-right: 0.4rem; }\\n.nb-theme-cosmic :host .today-details {\\n  display: flex;\\n  justify-content: space-around;\\n  margin-top: 2rem; }\\n.nb-theme-cosmic :host .parameter {\\n  flex: 1 1 auto;\\n  text-align: center; }\\n.nb-theme-cosmic :host .parameter-name,\\n.nb-theme-cosmic :host .parameter-value {\\n  display: block; }\\n.nb-theme-cosmic :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-cosmic :host .weekly-forecast {\\n  display: flex;\\n  justify-content: space-around;\\n  margin: auto 0; }\\n.nb-theme-cosmic :host .day {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-cosmic :host .weather-icon {\\n  font-size: 1.5rem;\\n  line-height: 2.5rem; }\\n.nb-theme-cosmic :host .question-check {\\n  max-width: 2.3rem; }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-corporate :host nb-card-body {\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-corporate :host .location,\\n.nb-theme-corporate :host .date {\\n  display: block; }\\n.nb-theme-corporate :host .location {\\n  margin-bottom: 0.1rem; }\\n.nb-theme-corporate :host .today {\\n  display: flex;\\n  justify-content: space-around; }\\n.nb-theme-corporate :host .today-temperature {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  margin: 2rem 1.5rem; }\\n.nb-theme-corporate :host .today-icon {\\n  color: #3366ff;\\n  font-size: 10rem;\\n  line-height: 1;\\n  margin-top: -4rem;\\n  margin-left: auto;\\n  margin-right: 0.4rem; }\\n.nb-theme-corporate :host .today-details {\\n  display: flex;\\n  justify-content: space-around;\\n  margin-top: 2rem; }\\n.nb-theme-corporate :host .parameter {\\n  flex: 1 1 auto;\\n  text-align: center; }\\n.nb-theme-corporate :host .parameter-name,\\n.nb-theme-corporate :host .parameter-value {\\n  display: block; }\\n.nb-theme-corporate :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-corporate :host .weekly-forecast {\\n  display: flex;\\n  justify-content: space-around;\\n  margin: auto 0; }\\n.nb-theme-corporate :host .day {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-corporate :host .weather-icon {\\n  font-size: 1.5rem;\\n  line-height: 2.5rem; }\\n.nb-theme-corporate :host .question-check {\\n  max-width: 2.3rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, OnInit} from '@angular/core';\nimport {ExamResult, ExamResultService} from './exam-result.service';\n\n@Component({\n  selector: 'ngx-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.scss'],\n})\nexport class ResultComponent implements OnInit {\n\n  examResult: ExamResult;\n  options: string[] = ['A', 'B', 'C', 'D', 'E'];\n\n  constructor(\n    private examResultService: ExamResultService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.examResultService.examObserver.subscribe(examResult => {\n      this.examResult = examResult;\n\n      this.examResult = this.examResultService.generateRandomExamResult();\n      this.examResult = this.examResultService.calculateScore(this.examResult);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9leGFtL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../shared/http.service';\n\n@Component({\n  selector: 'ngx-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(\n    private service: HttpService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.service.httpRequest('get', 'localhost:8080');\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/*\\n  Declare variables before making them global.\\n  dart-sass doesn't allow to declare variable with !global.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-default :host .timeline-arrow {\\n  font-size: 5rem;\\n  position: absolute;\\n  top: 50%;\\n  background-color: #ffffff; }\\n.nb-theme-default :host .right-arrow {\\n  right: 0;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%); }\\n.nb-theme-default :host .left-arrow {\\n  left: 0;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-default :host nb-card-body {\\n  overflow: hidden; }\\n.nb-theme-default :host .rod-capcule {\\n  height: 100%;\\n  display: block;\\n  margin: auto; }\\n.nb-theme-default :host .chaild-circle {\\n  width: 7rem;\\n  height: 7rem; }\\n.nb-theme-default :host .parent-circle {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%);\\n  z-index: 99;\\n  display: block;\\n  margin: auto;\\n  width: 8rem;\\n  height: 8rem;\\n  border-radius: 3rem;\\n  background-color: white; }\\n.nb-theme-default :host .rod {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, 0%);\\n          transform: translate(-50%, 0%);\\n  display: block;\\n  margin: auto;\\n  height: 100%;\\n  width: 10px;\\n  background-color: #2d8ac7; }\\n.nb-theme-default :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-default :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-default :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-dark :host .timeline-arrow {\\n  font-size: 5rem;\\n  position: absolute;\\n  top: 50%;\\n  background-color: #ffffff; }\\n.nb-theme-dark :host .right-arrow {\\n  right: 0;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%); }\\n.nb-theme-dark :host .left-arrow {\\n  left: 0;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-dark :host nb-card-body {\\n  overflow: hidden; }\\n.nb-theme-dark :host .rod-capcule {\\n  height: 100%;\\n  display: block;\\n  margin: auto; }\\n.nb-theme-dark :host .chaild-circle {\\n  width: 7rem;\\n  height: 7rem; }\\n.nb-theme-dark :host .parent-circle {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%);\\n  z-index: 99;\\n  display: block;\\n  margin: auto;\\n  width: 8rem;\\n  height: 8rem;\\n  border-radius: 3rem;\\n  background-color: white; }\\n.nb-theme-dark :host .rod {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, 0%);\\n          transform: translate(-50%, 0%);\\n  display: block;\\n  margin: auto;\\n  height: 100%;\\n  width: 10px;\\n  background-color: #2d8ac7; }\\n.nb-theme-dark :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-dark :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-dark :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-cosmic :host .timeline-arrow {\\n  font-size: 5rem;\\n  position: absolute;\\n  top: 50%;\\n  background-color: #ffffff; }\\n.nb-theme-cosmic :host .right-arrow {\\n  right: 0;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%); }\\n.nb-theme-cosmic :host .left-arrow {\\n  left: 0;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-cosmic :host nb-card-body {\\n  overflow: hidden; }\\n.nb-theme-cosmic :host .rod-capcule {\\n  height: 100%;\\n  display: block;\\n  margin: auto; }\\n.nb-theme-cosmic :host .chaild-circle {\\n  width: 7rem;\\n  height: 7rem; }\\n.nb-theme-cosmic :host .parent-circle {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%);\\n  z-index: 99;\\n  display: block;\\n  margin: auto;\\n  width: 8rem;\\n  height: 8rem;\\n  border-radius: 3rem;\\n  background-color: white; }\\n.nb-theme-cosmic :host .rod {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, 0%);\\n          transform: translate(-50%, 0%);\\n  display: block;\\n  margin: auto;\\n  height: 100%;\\n  width: 10px;\\n  background-color: #2d8ac7; }\\n.nb-theme-cosmic :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-cosmic :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-cosmic :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-corporate :host .timeline-arrow {\\n  font-size: 5rem;\\n  position: absolute;\\n  top: 50%;\\n  background-color: #ffffff; }\\n.nb-theme-corporate :host .right-arrow {\\n  right: 0;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%); }\\n.nb-theme-corporate :host .left-arrow {\\n  left: 0;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-corporate :host nb-card-body {\\n  overflow: hidden; }\\n.nb-theme-corporate :host .rod-capcule {\\n  height: 100%;\\n  display: block;\\n  margin: auto; }\\n.nb-theme-corporate :host .chaild-circle {\\n  width: 7rem;\\n  height: 7rem; }\\n.nb-theme-corporate :host .parent-circle {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translate(0%, -50%);\\n          transform: translate(0%, -50%);\\n  z-index: 99;\\n  display: block;\\n  margin: auto;\\n  width: 8rem;\\n  height: 8rem;\\n  border-radius: 3rem;\\n  background-color: white; }\\n.nb-theme-corporate :host .rod {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, 0%);\\n          transform: translate(-50%, 0%);\\n  display: block;\\n  margin: auto;\\n  height: 100%;\\n  width: 10px;\\n  background-color: #2d8ac7; }\\n.nb-theme-corporate :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-corporate :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-corporate :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss'],\n})\nexport class TimelineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/*\\n  Declare variables before making them global.\\n  dart-sass doesn't allow to declare variable with !global.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-default :host nb-card {\\n  margin: 1rem; }\\n.nb-theme-default :host .owner {\\n  font-size: 12px; }\\n.nb-theme-default :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-default :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-default :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n.nb-theme-default :host nb-card-body {\\n  margin-left: 0.25rem;\\n  max-width: 22rem;\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-default :host .info-icon {\\n  font-size: 4rem;\\n  color: #3366ff; }\\n.nb-theme-default :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-default :host .info-band {\\n  width: 20rem;\\n  display: flex;\\n  justify-content: space-around;\\n  margin: 1rem 0; }\\n.nb-theme-default :host .info-item {\\n  color: green;\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-default :host .info-band-icon {\\n  font-size: 1rem;\\n  line-height: 2.5rem; }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-dark :host nb-card {\\n  margin: 1rem; }\\n.nb-theme-dark :host .owner {\\n  font-size: 12px; }\\n.nb-theme-dark :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-dark :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-dark :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n.nb-theme-dark :host nb-card-body {\\n  margin-left: 0.25rem;\\n  max-width: 22rem;\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-dark :host .info-icon {\\n  font-size: 4rem;\\n  color: #3366ff; }\\n.nb-theme-dark :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-dark :host .info-band {\\n  width: 20rem;\\n  display: flex;\\n  justify-content: space-around;\\n  margin: 1rem 0; }\\n.nb-theme-dark :host .info-item {\\n  color: green;\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-dark :host .info-band-icon {\\n  font-size: 1rem;\\n  line-height: 2.5rem; }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-cosmic :host nb-card {\\n  margin: 1rem; }\\n.nb-theme-cosmic :host .owner {\\n  font-size: 12px; }\\n.nb-theme-cosmic :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-cosmic :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-cosmic :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n.nb-theme-cosmic :host nb-card-body {\\n  margin-left: 0.25rem;\\n  max-width: 22rem;\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-cosmic :host .info-icon {\\n  font-size: 4rem;\\n  color: #a16eff; }\\n.nb-theme-cosmic :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-cosmic :host .info-band {\\n  width: 20rem;\\n  display: flex;\\n  justify-content: space-around;\\n  margin: 1rem 0; }\\n.nb-theme-cosmic :host .info-item {\\n  color: green;\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-cosmic :host .info-band-icon {\\n  font-size: 1rem;\\n  line-height: 2.5rem; }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-corporate :host nb-card {\\n  margin: 1rem; }\\n.nb-theme-corporate :host .owner {\\n  font-size: 12px; }\\n.nb-theme-corporate :host .center-wrapper {\\n  position: relative; }\\n.nb-theme-corporate :host .center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n.nb-theme-corporate :host .vertical-center {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%); }\\n.nb-theme-corporate :host nb-card-body {\\n  margin-left: 0.25rem;\\n  max-width: 22rem;\\n  display: flex;\\n  flex-direction: column; }\\n.nb-theme-corporate :host .info-icon {\\n  font-size: 4rem;\\n  color: #3366ff; }\\n.nb-theme-corporate :host .caption {\\n  text-transform: uppercase; }\\n.nb-theme-corporate :host .info-band {\\n  width: 20rem;\\n  display: flex;\\n  justify-content: space-around;\\n  margin: 1rem 0; }\\n.nb-theme-corporate :host .info-item {\\n  color: green;\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center; }\\n.nb-theme-corporate :host .info-band-icon {\\n  font-size: 1rem;\\n  line-height: 2.5rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'ngx-upcoming-exams',\n    templateUrl: './upcoming-exams.component.html',\n    styleUrls: ['./upcoming-exams.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingExamsComponent implements OnInit, AfterViewInit {\n\n    url: string;\n    urls: any[] = [];\n    counter: number;\n\n    constructor(private ref: ChangeDetectorRef) {\n        this.counter = 0;\n\n        this.urls = [\n            'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTpgW' +\n            'MT55mzWI3TFkrlsBLXkrViyZEvUKfvYxsIpwTQqgoi0QsG',\n\n            'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AA' +\n            'Nd9GcRUdglmiU2ymGZ-dsLLZgcQXEA3KMS0ybHhXVh5wxNV8M7lQqCa',\n        ];\n    }\n\n    ngOnInit() {\n    }\n\n    change() {\n        this.url = this.urls[this.counter % 2];\n        this.counter++;\n    }\n\n    ngAfterViewInit() {\n        this.ref.detectChanges();\n        this.url = this.urls[1];\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {MiscellaneousComponent} from './miscellaneous.component';\nimport {NotFoundComponent} from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MiscellaneousComponent,\n    children: [\n      {\n        path: '404',\n        component: NotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngx-miscellaneous',\n  template: '<router-outlet></router-outlet>',\n})\nexport class MiscellaneousComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {NbButtonModule, NbCardModule} from '@nebular/theme';\n\nimport {ThemeModule} from '../../@theme/theme.module';\nimport {MiscellaneousRoutingModule} from './miscellaneous-routing.module';\nimport {MiscellaneousComponent} from './miscellaneous.component';\nimport {NotFoundComponent} from './not-found/not-found.component';\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    NbCardModule,\n    NbButtonModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    MiscellaneousComponent,\n    NotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule {\n}\n","module.exports = \".flex-centered {\\n  margin: auto; }\\n\\nnb-card-body {\\n  display: flex; }\\n\\n.title {\\n  text-align: center; }\\n\\n.sub-title {\\n  text-align: center;\\n  display: block;\\n  margin-bottom: 3rem; }\\n\\n.home-button {\\n  margin-bottom: 2rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbHlhc3ppeWFvZ2x1L0Rlc2t0b3AvcGVyc29uYWxfcHJvamVjdHMvZXhhbS9leGFtLWNsaWVudC9zcmMvYXBwL3BhZ2VzL21pc2NlbGxhbmV1cy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxtQkFBbUIsRUFBQSIsImZpbGUiOiIuLi9taXNjZWxsYW5ldXMvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mbGV4LWNlbnRlcmVkIHtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG5uYi1jYXJkLWJvZHkge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4udGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zdWItdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xufVxuXG4uaG9tZS1idXR0b24ge1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuIl19 */\"","import {NbMenuService} from '@nebular/theme';\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngx-not-found',\n  styleUrls: ['./not-found.component.scss'],\n  templateUrl: './not-found.component.html',\n})\nexport class NotFoundComponent {\n\n  constructor(private menuService: NbMenuService) {\n  }\n\n  goToHome() {\n    this.menuService.navigateHome();\n  }\n}\n","import { NbMenuItem } from '@nebular/theme';\n\nexport const MENU_ITEMS: NbMenuItem[] = [\n  {\n    title: 'Home',\n    icon: 'home-outline',\n    link: '/pages/home',\n    home: true,\n  },\n  {\n    title: 'Exam',\n    icon: 'edit-2-outline',\n    link: '/pages/exam',\n    children: [\n      {\n        title: 'Exam Explore',\n        link: '/pages/exam/search',\n      },\n      {\n        title: 'Exam Editor',\n        link: '/pages/exam/editor',\n      },\n      {\n        title: 'Exam Results',\n        link: '/pages/exam/result',\n      },\n      {\n        title: 'Live Exam',\n        link: '/pages/exam/live-exam',\n      },\n    ],\n  },\n  {\n    title: 'User',\n    icon: 'person-outline',\n    link: '/pages/user',\n    children: [\n      {\n        title: 'List',\n        link: '/pages/user/filter',\n      },\n      {\n        title: 'Create User',\n        link: '/pages/user/create',\n      },\n    ],\n  },\n  {\n    title: 'Analyses',\n    icon: 'bar-chart-outline',\n    link: '/pages/analysis',\n    children: [\n      {\n        title: 'Student Analysis',\n        link: '/pages/analysis/student-analysis',\n      },\n      {\n        title: 'Exam Analysis',\n        link: '/pages/analysis/exam-analysis',\n      },\n      {\n        title: 'Question Analysis',\n        link: '/pages/analysis/question-analysis',\n      },\n    ],\n  },\n  {\n    title: 'Reports',\n    icon: 'file-text-outline',\n    link: '/pages/report',\n    children: [\n      {\n        title: 'Student Report',\n        link: '/pages/report/student-report',\n      },\n      {\n        title: 'Exam Report',\n        link: '/pages/report/exam-report',\n      },\n      {\n        title: 'Question Report',\n        link: '/pages/report/question-report',\n      },\n    ],\n  },\n];\n","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\n\nimport {PagesComponent} from './pages.component';\nimport {NotFoundComponent} from './miscellaneus/not-found/not-found.component';\nimport {HomeComponent} from './home/home.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: PagesComponent,\n  children: [\n    {\n      path: 'home',\n      component: HomeComponent,\n    },\n    {\n      path: 'exam',\n      loadChildren: () => import('./exam/exam.module')\n        .then(m => m.ExamModule),\n    },\n    {\n      path: 'user',\n      loadChildren: () => import('./user/user.module')\n        .then(m => m.UserModule),\n    },\n    {\n      path: 'analysis',\n      loadChildren: () => import('./analysis/analysis.module')\n        .then(m => m.AnalysisModule),\n    },\n    {\n      path: 'report',\n      loadChildren: () => import('./report/report.module')\n        .then(m => m.ReportModule),\n    },\n    {\n      path: '',\n      redirectTo: 'home',\n      pathMatch: 'full',\n    },\n    {\n      path: '**',\n      component: NotFoundComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {\n}\n","module.exports = \"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/*\\n  Declare variables before making them global.\\n  dart-sass doesn't allow to declare variable with !global.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/*\\n\\nAccording to the specification (https://www.w3.org/TR/css-scoping-1/#host-selector)\\n:host and :host-context are pseudo-classes. So we assume they could be combined,\\nlike other pseudo-classes, even same ones.\\nFor example: ':nth-of-type(2n):nth-of-type(even)'.\\n\\nIdeal solution would be to prepend any selector with :host-context([dir=rtl]).\\nThen nebular components will behave as an html element and respond to [dir] attribute on any level,\\nso direction could be overridden on any component level.\\n\\nImplementation code:\\n\\n@mixin nb-rtl() {\\n  // add # to scss interpolation statement.\\n  // it works in comments and we can't use it here\\n  @at-root {selector-append(':host-context([dir=rtl])', &)} {\\n    @content;\\n  }\\n}\\n\\nAnd when we call it somewhere:\\n\\n:host {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n:host-context(...) {\\n  .some-class {\\n    @include nb-rtl() {\\n      ...\\n    }\\n  }\\n}\\n\\nResult will look like:\\n\\n:host-context([dir=rtl]):host .some-class {\\n  ...\\n}\\n:host-context([dir=rtl]):host-context(...) .some-class {\\n  ...\\n}\\n\\n*\\n  Side note:\\n  :host-context():host selector are valid. https://lists.w3.org/Archives/Public/www-style/2015Feb/0305.html\\n\\n  :host-context([dir=rtl]):host-context(...) should match any permutation,\\n  so order is not important.\\n*\\n\\n\\nCurrently, there're two problems with this approach:\\n\\nFirst, is that we can't combine :host, :host-context. Angular bugs #14349, #19199.\\nFor the moment of writing, the only possible way is:\\n:host {\\n  :host-context(...) {\\n    ...\\n  }\\n}\\nIt doesn't work for us because mixin could be called somewhere deeper, like:\\n:host {\\n  p {\\n    @include nb-rtl() { ... }\\n  }\\n}\\nWe are not able to go up to :host level to place content passed to mixin.\\n\\nThe second problem is that we only can be sure that we appending :host-context([dir=rtl]) to another\\n:host/:host-context pseudo-class when called in theme files (*.theme.scss).\\n  *\\n    Side note:\\n    Currently, nb-install-component uses another approach where :host prepended with the theme name\\n    (https://github.com/angular/angular/blob/5b96078624b0a4760f2dbcf6fdf0bd62791be5bb/packages/compiler/src/shadow_css.ts#L441),\\n    but it was made to be able to use current realization of rtl and it can be rewritten back to\\n    :host-context($theme) once we will be able to use multiple shadow selectors.\\n  *\\nBut when it's called in *.component.scss we can't be sure, that selector starts with :host/:host-context,\\nbecause angular allows omitting pseudo-classes if we don't need to style :host component itself.\\nWe can break such selectors, by just appending :host-context([dir=rtl]) to them.\\n  ***\\n    Possible solution\\n    check if we in theme by some theme variables and if so append, otherwise nest like\\n    @at-root :host-context([dir=rtl]) {\\n      // add # to scss interpolation statement.\\n      // it works in comments and we can't use it here\\n      {&} {\\n        @content;\\n      }\\n    }\\n    What if :host specified? Can we add space in :host-context(...) :host?\\n    Or maybe add :host selector anyway? If multiple :host selectors are allowed\\n  ***\\n\\n\\nProblems with the current approach.\\n\\n1. Direction can be applied only on document level, because mixin prepends theme class,\\nwhich placed on the body.\\n2. *.component.scss styles should be in :host selector. Otherwise angular will add host\\nattribute to [dir=rtl] attribute as well.\\n\\n\\nGeneral problems.\\n\\nLtr is default document direction, but for proper work of nb-ltr (means ltr only),\\n[dir=ltr] should be specified at least somewhere. ':not([dir=rtl]' not applicable here,\\nbecause it's satisfy any parent, that don't have [dir=rtl] attribute.\\nPrevious approach was to use single rtl mixin and reset ltr properties to initial value.\\nBut sometimes it's hard to find, what the previous value should be. And such mixin call looks too verbose.\\n*/\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-default :host ::ng-deep router-outlet + * {\\n  display: block;\\n  -webkit-animation: fade 1s;\\n          animation: fade 1s; }\\n@-webkit-keyframes fade {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n@keyframes fade {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-dark :host ::ng-deep router-outlet + * {\\n  display: block;\\n  -webkit-animation: fade 1s;\\n          animation: fade 1s; }\\n@keyframes fade {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-cosmic :host ::ng-deep router-outlet + * {\\n  display: block;\\n  -webkit-animation: fade 1s;\\n          animation: fade 1s; }\\n@keyframes fade {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n/*\\n      :host can be prefixed\\n      https://github.com/angular/angular/blob/8d0ee34939f14c07876d222c25b405ed458a34d3/packages/compiler/src/shadow_css.ts#L441\\n\\n      We have to use :host instead of :host-context($theme), to be able to prefix theme class\\n      with something defined inside of @content, by prefixing &.\\n      For example this scss code:\\n        .nb-theme-default {\\n          .some-selector & {\\n            ...\\n          }\\n        }\\n      Will result in next css:\\n        .some-selector .nb-theme-default {\\n          ...\\n        }\\n\\n      It doesn't work with :host-context because angular splitting it in two selectors and removes\\n      prefix in one of the selectors.\\n    */\\n.nb-theme-corporate :host ::ng-deep router-outlet + * {\\n  display: block;\\n  -webkit-animation: fade 1s;\\n          animation: fade 1s; }\\n@keyframes fade {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component } from '@angular/core';\n\nimport { MENU_ITEMS } from './pages-menu';\n\n@Component({\n  selector: 'ngx-pages',\n  styleUrls: ['pages.component.scss'],\n  template: `\n    <ngx-one-column-layout>\n      <nb-menu [items]=\"menu\"></nb-menu>\n      <router-outlet></router-outlet>\n    </ngx-one-column-layout>\n  `,\n})\nexport class PagesComponent {\n\n  menu = MENU_ITEMS;\n}\n","import {NgModule} from '@angular/core';\nimport {NbCardModule, NbIconModule, NbListModule, NbMenuModule} from '@nebular/theme';\n\nimport {ThemeModule} from '../@theme/theme.module';\nimport {PagesComponent} from './pages.component';\nimport {PagesRoutingModule} from './pages-routing.module';\nimport {MiscellaneousModule} from './miscellaneus/miscellaneous.module';\nimport {HomeComponent} from './home/home.component';\nimport {ExamModule} from './exam/exam.module';\nimport {UserModule} from './user/user.module';\nimport {AnalysisModule} from './analysis/analysis.module';\nimport {ReportModule} from './report/report.module';\nimport {TimelineComponent} from './home/timeline/timeline.component';\nimport {UpcomingExamsComponent} from './home/upcoming-exams/upcoming-exams.component';\n\n@NgModule({\n  imports: [\n    PagesRoutingModule,\n    ThemeModule,\n    NbMenuModule,\n    MiscellaneousModule,\n    ExamModule,\n    UserModule,\n    AnalysisModule,\n    ReportModule,\n    NbCardModule,\n    NbIconModule,\n    NbListModule,\n  ],\n  declarations: [\n    PagesComponent,\n    HomeComponent,\n    TimelineComponent,\n    UpcomingExamsComponent,\n  ],\n})\nexport class PagesModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class ReportRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'ngx-report',\n  template: '<router-outlet></router-outlet>',\n})\nexport class ReportComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReportRoutingModule} from './report-routing.module';\nimport {ReportComponent} from './report.component';\nimport {RouterModule} from \"@angular/router\";\n\n\n@NgModule({\n  declarations: [\n    ReportComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReportRoutingModule,\n    RouterModule,\n  ],\n})\nexport class ReportModule {\n}\n","declare const $: any;\n\nexport default class CommonUtils {\n  allOption: 'all';\n  noneOption: 'none';\n\n  static isNothing(obj) {\n    return typeof obj === 'undefined' ||\n      obj === 'null' ||\n      !obj ||\n      obj.length <= 0 ||\n      obj === '' ||\n      obj === `` ||\n      obj === undefined ||\n      obj === null;\n  }\n\n  static isSuccess(status) {\n    return status === 200 || status === 201 || status === 202;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport CommonUtils from '../shared/common.utils';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  constructor(\n    private http: HttpClient,\n    private spinner: NgxSpinnerService,\n  ) {\n  }\n\n  head<T>(url: string, params?: HttpParams): Observable<any> {\n    const headers = new HttpHeaders()\n      .append('Content-Type', 'application/octet-stream; charset=utf-8')\n      .append('Accept', 'application/octet-stream; charset=utf-8');\n    return this.http.get<any>(url, {\n      params,\n      responseType: 'arraybuffer' as 'json',\n      observe: 'response' as 'body',\n      headers,\n    }).pipe(map((response: any) => {\n      return response;\n    }));\n  }\n\n  get<T>(url: string, id?: string, params?: HttpParams): Observable<any> {\n    return this.http.get<T>(url, {params}).pipe(map((response: any) => {\n      return response;\n    }));\n  }\n\n  post<T>(url: string, body: string): Observable<any> {\n    return this.http.post<T>(url, body).pipe(map((response: any) => {\n      return response;\n    }));\n  }\n\n  put<T>(url: string, body: string): Observable<any> {\n    return this.http.put<T>(url, body).pipe(map((response: any) => {\n      return response;\n    }));\n  }\n\n  delete<T>(url: string, id?: string): Observable<any> {\n    return this.http.delete<T>(url + id).pipe(map((response: any) => {\n      return response;\n    }));\n  }\n\n  httpRequest(method, url, req?, cb?) {\n    const self = this;\n    self.spinner.show();\n    let request;\n    switch (method) {\n      case 'get':\n        request = this.get(url);\n        break;\n      case 'post':\n        request = this.post(url, req);\n        break;\n      case 'put':\n        request = this.put(url, req);\n        break;\n      case 'delete':\n        request = this.delete(url);\n        break;\n    }\n    request.subscribe(response => {\n      if (CommonUtils.isSuccess(response.status)) {\n        if (cb) {\n          cb(response.result);\n        }\n      } else {\n        self.spinner.hide();\n        Swal.fire(response.message || 'Can not get object.');\n      }\n    }, err => {\n      self.spinner.hide();\n      Swal.fire('Can not get object.');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi91c2VyL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi91c2VyL2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi91c2VyL2RldGFpbC9kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi91c2VyL2VkaXQvZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-form-field {\\n  width: 75%; }\\n\\nspan {\\n  font-size: 10px;\\n  color: #8f9bb3; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbHlhc3ppeWFvZ2x1L0Rlc2t0b3AvcGVyc29uYWxfcHJvamVjdHMvZXhhbS9leGFtLWNsaWVudC9zcmMvYXBwL3BhZ2VzL3VzZXIvZmlsdGVyL2ZpbHRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVUsRUFBQTs7QUFHWjtFQUNFLGVBQWU7RUFDZixjQUFjLEVBQUEiLCJmaWxlIjoiLi4vdXNlci9maWx0ZXIvZmlsdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogNzUlO1xufVxuXG5zcGFuIHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBjb2xvcjogIzhmOWJiMztcbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'ngx-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent implements OnInit {\n  teachers: any[] = ['Name Surname', 'Name Surname', 'Name Surname', 'Name Surname', 'Name Surname'];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FilterComponent} from './filter/filter.component';\nimport {DetailComponent} from './detail/detail.component';\nimport {CreateComponent} from './create/create.component';\nimport {EditComponent} from './edit/edit.component';\nimport {AccountComponent} from './account/account.component';\nimport {UserComponent} from './user.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: UserComponent,\n  children: [\n    {\n      path: 'filter',\n      component: FilterComponent,\n    },\n    {\n      path: 'create',\n      component: CreateComponent,\n    },\n    {\n      path: 'edit',\n      component: EditComponent,\n    },\n    {\n      path: 'detail',\n      component: DetailComponent,\n    },\n    {\n      path: 'account',\n      component: AccountComponent,\n    },\n    {\n      path: '',\n      redirectTo: 'filter',\n      pathMatch: 'full',\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'ngx-user',\n  template: '<router-outlet></router-outlet>',\n})\nexport class UserComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UserRoutingModule} from './user-routing.module';\nimport {FilterComponent} from './filter/filter.component';\nimport {DetailComponent} from './detail/detail.component';\nimport {CreateComponent} from './create/create.component';\nimport {EditComponent} from './edit/edit.component';\nimport {AccountComponent} from './account/account.component';\nimport {UserComponent} from './user.component';\nimport {NbCardModule} from '@nebular/theme';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n\n@NgModule({\n  declarations: [\n    UserComponent,\n    AccountComponent,\n    CreateComponent,\n    DetailComponent,\n    EditComponent,\n    FilterComponent,\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    NbCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n  ],\n})\nexport class UserModule {\n}\n"],"sourceRoot":""}